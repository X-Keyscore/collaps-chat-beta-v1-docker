{"version":3,"sources":["api/index.js","components/Connection/Login.js","components/Connection/Register.js","components/Connection/Connection.js","contexts/UserProvider.js","contexts/SocketProvider.js","contexts/ChannelsProvider.js","components/sidebar/ChannelsContacts.js","components/sidebar/ChannelsGroupes.js","components/sidebar/NewContact.js","components/sidebar/NewGroupe.js","components/sidebar/windows/setting.js","components/sidebar/Sidebar.js","components/container/Welcome.js","components/container/OpenConversation.js","components/Dashboard.js","components/App.js","hooks/useLocalStorage.js","index.js","functions/validity.js"],"names":["api","axios","create","baseURL","apis","insertUser","payload","post","updateUserById","id","put","deleteUserById","delete","getAllUsers","get","getUserById","getUserByPseudo","pseudo","insertChannel","updateChannelById","deleteChannelById","getChannelById","insertFile_avatar","file","getFileById_avatar","deleteFileById_avatar","Register","props","handleChangeInputPseudo","event","a","target","value","setState","warning","handleChangeInputPassword","password","handleLoginUser","e","preventDefault","state","length","then","res","data","console","log","onIdSubmit","this","className","onSubmit","type","autoFocus","onChange","href","onClick","hide","Component","require","validityPseudo","validityPassword","validityPasswordConfirm","validityPasswordConfirmForPassword","rep","valid","passwordConfirm","rep2","handleChangeInputPasswordConfirm","handleCreateUser","Math","floor","random","toString","activity","channels","error","required","Connection","toggle","isShowing","Login","UserContext","React","createContext","useUser","useContext","UserProvider","children","useState","client","setClient","useEffect","user","updateUser","body","Provider","SocketContext","SocketProvider","socket","setSocket","newSocket","io","path","query","close","ChannelsContext","useChannels","ChannelsProvider","setChannels","channelsRef","useRef","current","messagesChannels","setMessagesChannels","messagesChannelsRef","selectedChannel","setSelectedChannel","addMessage","message","indexMessage","findIndex","messagesChannel","channelId","newArr","messages","sender","date","text","msg","on","off","createChannel","sendMessage","channel","Date","emit","recipients","push","ChannelsContacts","renderChannels","Promise","resolve","clientChannels","filter","forEach","index","channelD","recipientId","recipient","i","splice","channelEdit","Object","assign","selected","key","fetchRenderClientChannels","map","width","height","viewBox","aria-hidden","x","y","src","alt","fill","rx","ry","NewContact","setId","test","idChannel","recipientChannels","placeholder","NewGroupe","selectedContactIds","setSelectedContactIds","includes","contactId","prevSelectedContactIds","prevId","r","join","Setting","handleChangeInputAvatar","files","avatar","match","selectedFiles","handleUpdateUser","bind","resetAndHide","FormData","fileName","name","append","substring","lastIndexOf","success","catch","err","ReactDOM","createPortal","URL","createObjectURL","accept","maxLength","d","points","document","Sidebar","toggleNewContact","isShowingNewContact","toggleNewGroupe","isShowingNewGroupe","toggleSetting","isShowingSetting","copyId","context","navigator","clipboard","writeText","searchSystem","li","getElementById","toUpperCase","getElementsByTagName","getElementsByClassName","textContent","innerText","indexOf","style","display","onKeyUp","aria-label","fillRule","contextType","userContext","Welcome","OpenConversation","lastSenderNow","setText","msgTextarea","window","screen","maxHeight","addEventListener","scrollHeight","scrollIntoView","behavior","node","scrollarea","scrollTop","userClientEdit","userRecipient","userRecipientEdit","slice","getDate","getMonth","getFullYear","getHours","getMinutes","find","lastSenderPass","multiple","spellCheck","autoComplete","Dashboard","App","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","useLocalStorage","dashboard","undefined","render","StrictMode","module","exports","passwordValue"],"mappings":"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","file":"static/js/main.44b7eb2f.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst api = axios.create({\n    baseURL: 'https://collaps.xyz/collapsapi/api', //https://collaps.xyz/api //http://localhost:3000/api\n})\n\n// User\nexport const insertUser = (payload) => api.post(`/user`, payload)\n\nexport const updateUserById = (id, payload) => api.put(`/user/${id}`, payload)\n\nexport const deleteUserById = (id) => api.delete(`/user/${id}`)\n\nexport const getAllUsers = () => api.get(`/users`)\nexport const getUserById = (id) => api.get(`/user/id/${id}`)\nexport const getUserByPseudo = (pseudo) => api.get(`/user/pseudo/${pseudo}`)\n\n//Channel\nexport const insertChannel = (payload) => api.post(`/channel`, payload)\n\nexport const updateChannelById = (id, payload) => api.put(`/channel/${id}`, payload)\n\nexport const deleteChannelById = (id) => api.delete(`/channel/${id}`)\n\nexport const getChannelById = (id) => api.get(`/channel/id/${id}`)\n\n// File\n// Avatar\nexport const insertFile_avatar = (file) => api.post(\"/file_avatar\", file)\n\nexport const getFileById_avatar = (id) => api.get(`/file_avatar/id/${id}`)\n\nexport const deleteFileById_avatar = (id) => api.delete(`/file_avatar/id/${id}`)\n\n\n// Messsage\n\nconst apis = {\n    insertUser,\n    updateUserById,\n    deleteUserById,\n    getAllUsers,\n    getUserById,\n    getUserByPseudo,\n\n    insertChannel,\n    updateChannelById,\n    deleteChannelById,\n    getChannelById,\n\n    insertFile_avatar,\n    getFileById_avatar,\n    deleteFileById_avatar\n}\n\nexport default apis\n","import React, { Component } from 'react'\r\nimport api from '../../api'\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      pseudo: {\r\n        value: '',\r\n        warning: ''\r\n      },\r\n      password: {\r\n        value: '',\r\n        warning: ''\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChangeInputPseudo = async (event) => {\r\n    const pseudo = event.target.value\r\n    this.setState({\r\n      pseudo: {\r\n        value: pseudo,\r\n        warning: ''\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChangeInputPassword = async (event) => {\r\n    const password = event.target.value\r\n    this.setState({\r\n      password: {\r\n        value: password,\r\n        warning: ''\r\n      }\r\n    })\r\n  }\r\n\r\n  handleLoginUser = async (e) => {\r\n    e.preventDefault()\r\n\r\n    const { pseudo, password } = this.state\r\n\r\n    // Je teste si les champs sont remplis\r\n    if (pseudo.value.length !== 0 && password.value.length !== 0) {\r\n\r\n      // Requête a l'api pour rechercher le pseudo\r\n      await api.getUserByPseudo(pseudo.value).then(res => {\r\n\r\n        // Je vérifie si le pseudo a été trouver puis si le mot de passe est bon\r\n        // Si tout est ok je récupère l'id et je l'envoi\r\n        if (res.data.data === null) {\r\n          this.setState({\r\n            pseudo: {\r\n              value: pseudo.value,\r\n              warning: 'pseudo inconnu'\r\n            }\r\n          })\r\n        } else if (res.data.data.password !== password.value) {\r\n          this.setState({\r\n            password: {\r\n              value: password.value,\r\n              warning: 'mot de passe invalide'\r\n            }\r\n          })\r\n        } else {\r\n          console.log(`Bienvenue ${res.data.data.pseudo}`)\r\n          // Envoi de l'id\r\n          this.props.onIdSubmit(res.data.data.id)\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { pseudo, password } = this.state\r\n    return (\r\n      <div className=\"connection\">\r\n        <form className=\"connection-form\" onSubmit={this.handleLoginUser}>\r\n          <div className=\"connectionToolHeader\">\r\n            <div className=\"connectionToolHeader-title\">\r\n              FInt.Tchat\r\n          </div>\r\n            <div className=\"connectionToolHeader-subtitle\">\r\n              Bienvenue dans l'espace de connexion\r\n          </div>\r\n          </div>\r\n          <div className=\"connection-body scroller\">\r\n            <div className=\"connection-body-input\">\r\n              <div className=\"title\">\r\n                Pseudo {pseudo.warning ? <span className=\"title-warning\">- {pseudo.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${pseudo.warning ? 'input-warning' : ''}`}\r\n                type=\"text\"\r\n                autoFocus\r\n                value={pseudo.value}\r\n                onChange={this.handleChangeInputPseudo}\r\n              />\r\n              <div className=\"spacer\"></div>\r\n              <div className=\"title\">\r\n                Mot de passe {password.warning ? <span className=\"title-warning\">- {password.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${password.warning ? 'input-warning' : ''}`}\r\n                type=\"password\"\r\n                value={password.value}\r\n                onChange={this.handleChangeInputPassword}\r\n              />\r\n              <div className=\"link\"><a href=\"https://google.com\">Tu as oublié ton mot de passe ?</a></div>\r\n            </div>\r\n          </div>\r\n          <div className=\"connectionToolFooter\">\r\n            <div className=\"connectionToolFooter-btn\">\r\n              <button className=\"btn-text-default\" type=\"submit\">\r\n                <div className=\"content\">Se connecter</div>\r\n              </button>\r\n              <button className=\"btn-text-simple\" type=\"button\" onClick={this.props.hide}>\r\n                <div className=\"content\">S'inscrire</div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\r\nimport api from '../../api'\r\n\r\nconst { validityPseudo, validityPassword, validityPasswordConfirm, validityPasswordConfirmForPassword } = require(\"../../functions/validity.js\");\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      pseudo: {\r\n        value: '',\r\n        warning: '',\r\n        valid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        warning: '',\r\n        valid: false\r\n      },\r\n      passwordConfirm: {\r\n        value: '',\r\n        warning: '',\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  handleChangeInputPseudo = async event => {\r\n    const pseudo = event.target.value\r\n    const rep = validityPseudo(pseudo);\r\n    this.setState({\r\n      pseudo: {\r\n        value: pseudo,\r\n        warning: rep.warning,\r\n        valid: rep.valid\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChangeInputPassword = async event => {\r\n    const password = event.target.value;\r\n    const rep = validityPassword(password);\r\n    this.setState({\r\n      password: {\r\n        value: password,\r\n        warning: rep.warning,\r\n        valid: rep.valid\r\n      }\r\n    })\r\n\r\n    const passwordConfirm = this.state.passwordConfirm;\r\n    const rep2 = validityPasswordConfirmForPassword(passwordConfirm, password);\r\n    this.setState({\r\n      passwordConfirm: {\r\n        value: passwordConfirm.value,\r\n        warning: rep2.warning,\r\n        valid: rep2.valid\r\n      }\r\n    })\r\n  }\r\n\r\n  handleChangeInputPasswordConfirm = async event => {\r\n    const passwordConfirm = event.target.value;\r\n    const rep = validityPasswordConfirm(passwordConfirm, this.state.password.value);\r\n    this.setState({\r\n      passwordConfirm: {\r\n        value: passwordConfirm,\r\n        warning: rep.warning,\r\n        valid: rep.valid\r\n      }\r\n    })\r\n  }\r\n\r\n  handleCreateUser = async () => {\r\n    const { pseudo, password, passwordConfirm } = this.state\r\n    if (pseudo.valid === true && password.valid === true && passwordConfirm.valid === true) {\r\n\r\n      // Requête a l'api pour rechercher le pseudo\r\n      await api.getUserByPseudo(pseudo.value).then(res => {\r\n\r\n        // Je vérifie si le pseudo est déjà utilisé\r\n        // sinon on crée l'utilisateur\r\n        if (res.data.data !== null) {\r\n          this.setState({\r\n            pseudo: {\r\n              value: pseudo.value,\r\n              warning: 'ce pseudo est déjà utilisé'\r\n            }\r\n          })\r\n        } else {\r\n\r\n          // Création de l'utilisateur\r\n          const id = (Math.floor(Math.random() * 10000000000000000) + 99999999999999999).toString();\r\n          const payload = { id, pseudo: pseudo.value, password: password.value, activity: \"online\", channels: [] }\r\n          api.insertUser(payload).then(\r\n            (res) => {\r\n              // Envoi de l'id\r\n              this.props.onIdSubmit(id)\r\n            },\r\n            (error) => {\r\n              console.log(\"Problème d'enregistrement dans la base de données\")\r\n              console.log(error)\r\n            })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { pseudo, password, passwordConfirm } = this.state\r\n\r\n    return (\r\n      <div className=\"connection\">\r\n        <form className=\"connection-form\">\r\n          <div className=\"connectionToolHeader\">\r\n            <div className=\"connectionToolHeader-title\">\r\n              FInt.Tchat\r\n            </div>\r\n            <div className=\"connectionToolHeader-subtitle\">\r\n              Bienvenue dans l'espace d'inscription\r\n            </div>\r\n          </div>\r\n          <div className=\"connection-body scroller\">\r\n            <div className=\"connection-body-input\">\r\n              <div className=\"title\">\r\n                Pseudo {pseudo.warning ? <span className=\"title-warning\">- {pseudo.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${pseudo.warning ? 'input-warning' : ''}`}\r\n                type=\"text\"\r\n                autoFocus\r\n                required\r\n                value={pseudo.value}\r\n                onChange={this.handleChangeInputPseudo}\r\n              />\r\n              <div className=\"spacer\"></div>\r\n              <div className=\"title\">\r\n                Mot de passe {password.warning ? <span className=\"title-warning\">- {password.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${password.warning ? 'input-warning' : ''}`}\r\n                type=\"password\"\r\n                required\r\n                value={password.value}\r\n                onChange={this.handleChangeInputPassword}\r\n              />\r\n              <div className=\"spacer\"></div>\r\n              <div className=\"title\">\r\n                Confirmer le mot de passe {passwordConfirm.warning ? <span className=\"title-warning\">- {passwordConfirm.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${passwordConfirm.warning ? 'input-warning' : ''}`}\r\n                type=\"password\"\r\n                required\r\n                value={passwordConfirm.value}\r\n                onChange={this.handleChangeInputPasswordConfirm}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"connectionToolFooter\">\r\n            <div className=\"connectionToolFooter-btn\">\r\n              <button className=\"btn-text-default\" type=\"button\" onClick={this.handleCreateUser}>\r\n                <div className=\"content\">S'inscrire</div>\r\n              </button>\r\n              <button className=\"btn-text-simple\" type=\"button\" onClick={this.props.hide}>\r\n                <div className=\"content\">Se connecter</div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register","import React, { Component } from 'react'\nimport Login from \"./Login\";\nimport Register from \"./Register\";\n\nclass Connection extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isShowing: true\n    }\n  }\n\n  toggle = () => {\n    // Mise à jour de la vue avec inverseur\n    this.setState((state) => {\n      return {isShowing: state.isShowing ? false : true}\n    });\n\t}\n\n  render() {\n    return (\n      this.state.isShowing\n        ?\n        <Login onIdSubmit={this.props.onIdSubmit} hide={this.toggle} />\n        :\n        <Register onIdSubmit={this.props.onIdSubmit} hide={this.toggle} />\n    )\n  }\n}\n\nexport default Connection","import React, { useContext, useState, useEffect } from 'react'\r\nimport api from \"../api\"\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport function UserProvider({ id, children }) {\r\n  const [client, setClient] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // Si le client n'est pas null pas besoin de mise a jour\r\n    if (client === null) {\r\n      // Je récupère les données du client grace à l'api\r\n      api.getUserById(id).then(\r\n        (user) => {\r\n          return setClient(user.data.data)\r\n      })\r\n    }\r\n  }, [id, client])\r\n\r\n  function updateUser(id, body) {\r\n    const payload = body\r\n    api.updateUserById(id, payload)\r\n  }\r\n\r\n  const value = {\r\n    client,\r\n    setClient,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default UserContext\r\n\r\n// https://dmitripavlutin.com/react-usestate-hook-guide/","import React, { useContext, useEffect, useState } from 'react'\nimport io from 'socket.io-client'\n\nconst SocketContext = React.createContext()\n\nexport function useSocket() {\n  return useContext(SocketContext)\n}\n\nexport function SocketProvider({ id, children }) {\n  const [socket, setSocket] = useState()\n\n  useEffect(() => {\n\n    const newSocket = io(\n      'https://collaps.xyz',\n      { path:'/collapssocket', query: { id } }\n    )\n    /*\n    const newSocket = io(\n      'https://collaps.xyz', //https://collaps.xyz //http://localhost:5000\n      { query: { id } }\n    )*/\n    setSocket(newSocket)\n\n    return () => newSocket.close()\n  }, [id])\n\n  return (\n    <SocketContext.Provider value={socket}>\n      {children}\n    </SocketContext.Provider>\n  )\n}\n\nexport default SocketContext\n","import React, { useContext, useState, useEffect, useRef } from 'react'\nimport { useSocket } from './SocketProvider';\nimport api from \"../api\"\n\nconst ChannelsContext = React.createContext()\n\nexport function useChannels() {\n  return useContext(ChannelsContext)\n}\n\nexport function ChannelsProvider({ id, children }) {\n  const socket = useSocket()\n  // https://stackoverflow.com/questions/54824036/useeffect-hook-with-socket-io-state-is-not-persistent-in-socket-handlers\n  const [channels, setChannels] = useState(null)\n  const channelsRef = useRef(channels);\n  useEffect(() => {\n    channelsRef.current = channels;\n  });\n\n  const [messagesChannels, setMessagesChannels] = useState([])\n  const messagesChannelsRef = useRef(messagesChannels);\n  useEffect(() => {\n    messagesChannelsRef.current = messagesChannels;\n  });\n\n  const [selectedChannel, setSelectedChannel] = useState(null)\n\n  useEffect(() => {\n    if (socket == null) return\n\n    // channelId, sender, date, text\n    const addMessage = (message) => {\n      console.log(message)\n      // J'isole les \"channels\" dans une variable\n      var allMessages = messagesChannelsRef.current\n\n      // Récuépration de l'index\n      const indexMessage = allMessages.findIndex(messagesChannel => messagesChannel.id === message.channelId);\n\n      if (indexMessage !== -1) {\n        // Copie de l'ancien tableau de données\n        let newArr = [...messagesChannelsRef.current];\n        // Ajout du nouveau message\n        newArr[indexMessage].messages = [...newArr[indexMessage].messages, { sender: message.sender, date: message.date, text: message.text }];\n        // Envoie des données dans le \"useState\"\n        setMessagesChannels(newArr);\n      } else {\n        // Ajout du message dans le \"useState\"\n        setMessagesChannels(msg => [...msg, { id: message.channelId, messages: [{ sender: message.sender, date: message.date, text: message.text }] }])\n      }\n    }\n\n    // Si je reçoi un message je l'ajoute dans le \"channel\" qui lui correspond\n    socket.on('receive-message', addMessage);\n\n    return () => socket.off('receive-message', addMessage)\n  }, [socket])\n\n  function addMessageToDatabase(message) {\n    // Récupération des données du \"channel\" avec son id\n    api.getChannelById(message.channel.id).then(\n      (channel) => {\n\n        channel = channel.data.data\n\n        channel.messages.push({\n          sender: message.sender.id,\n          date: message.date,\n          text: message.text\n        })\n\n        api.updateChannelById(channel.id, { data: { messages: channel.messages } }).then(res => { })\n\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  // channel, text, client\n  function sendMessage(channel, text, client) {\n\n    const addMessage = (message) => {\n\n      // J'isole les \"channels\" dans une variable\n      var allMessages = messagesChannelsRef.current\n\n      // Récuépration de l'index\n      const indexMessage = allMessages.findIndex(messagesChannel => messagesChannel.id === message.channelId);\n\n      if (indexMessage !== -1) {\n        // Copie de l'ancien tableau de données\n        let newArr = [...messagesChannelsRef.current];\n        // Ajout du nouveau message\n        newArr[indexMessage].messages = [...newArr[indexMessage].messages, { sender: message.sender, date: message.date, text: message.text }];\n        console.log(newArr)\n        // Envoie des données dans le \"useState\"\n        setMessagesChannels(newArr);\n      } else {\n        // Ajout du message dans le \"useState\"\n        setMessagesChannels(msg => [...msg, { id: message.channelId, messages: [{ sender: message.sender, date: message.date, text: message.text }] }])\n      }\n    }\n\n    const date = new Date()\n\n    // channelId, sender, date, text\n    addMessage({ channelId: channel.id, sender: { id: client.id, pseudo: client.pseudo }, date, text })\n    // recipients, channelId, sender, date, text\n    socket.emit('send-message', { recipients: channel.recipients, channelId: channel.id, sender: { id: client.id, pseudo: client.pseudo }, date, text })\n    // channel, sender, date, text\n    addMessageToDatabase({ channel, sender: { id: client.id, pseudo: client.pseudo }, date, text })\n\n  }\n\n  function createChannel(payload) {\n    api.insertChannel(payload).then(res => { })\n  }\n\n  const value = {\n    channels,\n    setChannels,\n    messagesChannels,\n    setMessagesChannels,\n    selectedChannel,\n    setSelectedChannel,\n    createChannel,\n    sendMessage\n  }\n\n  return (\n    <ChannelsContext.Provider value={value}>\n      {children}\n    </ChannelsContext.Provider>\n  )\n}\n\nexport default ChannelsContext","import React, { useEffect } from 'react';\n\nimport api from \"../../api\"\n\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function ChannelsContacts() {\n  const { client } = useUser()\n  const { channels, setChannels, selectedChannel, setSelectedChannel, setMessagesChannels } = useChannels()\n  \n  // Le \"useEffect\" est utilisé pour géré l'asynchrone\n  useEffect(() => {\n    // Je teste si le client est chargé\n    if (client === null) return\n    // Je teste si le client à des conversations\n    if (client.channels.length === 0) return setChannels([])\n    // Fonction asynchrone pour faire le rendu des channels du client\n    async function fetchRenderClientChannels() {\n      return renderChannels(client).then(channels => setChannels(channels))\n    }\n    // Appel de la fonction\n    fetchRenderClientChannels();\n  }, [setChannels, client])\n\n  // Cette fonction renvoie les données du client\n  function renderChannels(client) {\n    return new Promise((resolve) => {\n\n      // Variable pour stocker les channels du client\n      var clientChannels = client.channels\n\n      // Je filtre pour ne récupérer que les contacts privés\n      clientChannels.filter(channel => channel.type === \"private\").forEach((channel, index) => {\n\n        // Je récupère les informations sur le destinataire grace à sont id\n        api.getChannelById(channel.id).then((channelD) => {\n\n          var recipientId = channelD.data.data.recipients.filter(recipient => recipient !== client.id)[0]\n\n          api.getUserById(recipientId).then((recipient) => {\n\n            // Si le destinataire n'existe plus je le supprime des données du client et le channel\n            if (recipient.data.data === null) {\n              // Je boucle tous les \"channels\" du client\n              for (let i = 0; i < client.channels.length; i++) {\n                // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n                if (client.channels[i].id === channelD.data.data.id) {\n                  // Je supprime le \"channel\" dans la liste grace à sa position\n                  client.channels.splice(i, 1);\n                  // Je mets à jour le client\n                  api.updateUserById(client.id, { data: { channels: client.channels } }).then(res => { })\n                  // Je supprime le channel\n                  api.deleteChannelById(channelD.data.data.id)\n                }\n              }\n            }\n\n            // Je complète les informations existantes du destinataire avec celle de la base de données\n            var channelEdit = channelD.data.data\n\n            // Ajout des infos sur le desinataire\n            channelEdit.recipients = [{\n              id: recipient.data.data.id,\n              pseudo: recipient.data.data.pseudo\n            }]\n\n            // J'ajoute un element \"selected\" à \"channel\" est passe la valeur \"true\" au premier\n            Object.assign(channelEdit, { selected: false })\n            Object.assign(channelEdit, { key: index })\n\n            // Je mets à jour l'object la list des \"channels\" du client\n            clientChannels[index] = channelEdit\n\n            if (client.channels.length === index + 1) return resolve(clientChannels)\n\n          })\n        });\n      })\n    })\n  }\n\n  // Si \"client\" est \"null\" c'est qu'il est en chargement donc j'affiche chargement\n  if (channels === null) {\n    return (\n      <div className=\"sidebar-body-info\">Chargement...</div>\n    );\n  }\n  // Si \"client.channels\" est vide c'est qu'il n'y a pas de constact donc j'affiche aucun contact\n  if (channels.length === 0) {\n    return (\n      <div className=\"sidebar-body-info\">Aucun contact</div>\n    );\n  }\n  return (\n    <>\n      {\n        channels.map((channel) => (\n          <button\n            key={channel.id}\n            className={`sidebar-body-contact ${selectedChannel === null ? null : selectedChannel.id === channel.id ? 'selected' : ''}`}\n            onClick={() => {\n              // Reset du tableau des messages\n              setMessagesChannels([])\n              // Je sélectionne le \"channel\"\n              setSelectedChannel(channel)\n            }}\n          >\n            <div className=\"sidebar-body-contact-content\">\n              <div className=\"sidebar-body-contact-content-avatar\">\n\n                <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n                  <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                    <img className=\"avatar\" src={\"https://collaps.xyz/collapsapi/api/file_avatar/id/\" + channel.recipients[0].id} aria-hidden=\"true\" alt=\"\" />\n                  </foreignObject>\n                  <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n                </svg>\n\n              </div>\n              <div className=\"sidebar-body-contact-content-text\">\n                <div className=\"username\">\n                  <div className=\"overflow\">\n                    {channel.recipients[0].pseudo}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </button>\n        ))\n      }\n    </>\n  )\n}","import React from 'react'\nimport { useChannels } from '../../contexts/ChannelsProvider';\nimport { useUser } from '../../contexts/UserProvider';\n\nexport default function ChannelsContacts() {\n  const { setSelectedChannel } = useChannels()\n  const { client } = useUser()\n\n  return (\n    <div className=\"sidebar-body-info\">Aucun groupe</div>\n  );\n  /*\nreturn (\n  <>\n    { client == null ? null : client.channels.filter(channel => channel.type === \"groupe\").map((channel) => (\n      <button\n        key={channel.id}\n        className={`sidebar-body-contact ${channel.selected ? 'selected' : ''}`}\n        onClick={() => setSelectedChannel(channel)}\n      >\n        <div className=\"sidebar-body-contact-content\">\n          <div className=\"sidebar-body-contact-content-avatar\">\n\n            <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n              <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n              </foreignObject>\n              <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n            </svg>\n\n          </div>\n          <div className=\"sidebar-body-contact-content-text\">\n            <div className=\"username\">\n              <div className=\"overflow\">\n                {channel.recipients.map(r => r.pseudo).join(', ')}\n              </div>\n            </div>\n          </div>\n        </div>\n      </button>\n    ))\n    }\n  </>\n)*/\n}\n","import React, { useState } from 'react'\r\nimport api from \"../../api\"\r\nimport { useUser } from '../../contexts/UserProvider';\r\nimport { useChannels } from '../../contexts/ChannelsProvider';\r\n\r\nfunction NewContact({ isShowing, hide }) {\r\n\tconst { client, updateUser } = useUser()\r\n\tconst { channels, createChannel, setChannels, setSelectedChannel } = useChannels()\r\n\r\n\t// Création d'un \"useState\" pour stocker l'id\r\n\tconst [id, setId] = useState({\r\n\t\tvalue: \"\",\r\n\t\twarning: \"\"\r\n\t})\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\r\n\t\t// Je teste si la valeur est bien celle d'un id\r\n\t\tif (id.value.length === 0) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Il faut entré un id\"\r\n\t\t})\r\n\r\n\t\t// Je teste si la valeur est bien celle d'un id\r\n\t\tif (id.value.length !== 18 && !/^[0-9]*$/.test(id.value)) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Ceci n'est pas un id valide\"\r\n\t\t})\r\n\r\n\t\t// Je test si l'id n'est pas celui du client\r\n\t\tif (id.value === client.id) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Tu ne peux pas t'ajouter\"\r\n\t\t})\r\n\r\n\t\t// Je test si le contact n'est pas déjà ajouter\r\n\t\tvar valid = true;\r\n\t\tclient.channels.filter(channel => channel.type === \"private\").forEach(channel => {\r\n\t\t\tconsole.log(channel)\r\n\t\t\tif (channel.id === id.value) valid = false;\r\n\t\t});\r\n\t\tif (valid === false) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Ce contact existe déjà\"\r\n\t\t});\r\n\r\n\t\tapi.getUserById(id.value).then(\r\n\t\t\t(recipient) => {\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tif (recipient.data.data === null) return setId({\r\n\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\twarning: \"L'id n'a pas été trouvé\"\r\n\t\t\t\t})*/\r\n\r\n\t\t\t\trecipient = recipient.data.data\r\n\r\n\t\t\t\t// Id unique du channel\r\n\t\t\t\tconst idChannel = (Math.floor(Math.random() * 10000000000000000) + 99999999999999999).toString();\r\n\r\n\t\t\t\tsetChannels(channels => [...channels, {\r\n\t\t\t\t\tid: idChannel,\r\n\t\t\t\t\ttype: \"private\",\r\n\t\t\t\t\trecipients: [{\r\n\t\t\t\t\t\tid: recipient.id,\r\n\t\t\t\t\t\tpseudo: recipient.pseudo\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tmessages: []\r\n\t\t\t\t}]);\r\n\r\n\t\t\t\tsetSelectedChannel({\r\n\t\t\t\t\tid: idChannel,\r\n\t\t\t\t\ttype: \"private\",\r\n\t\t\t\t\trecipients: [{\r\n\t\t\t\t\t\tid: recipient.id,\r\n\t\t\t\t\t\tpseudo: recipient.pseudo\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tmessages: [],\r\n\t\t\t\t\tselected: true,\r\n\t\t\t\t\tkey: channels.length === 0 ? 0 : channels.length - 1\r\n\t\t\t\t})\r\n\r\n\t\t\t\tvar clientChannels = client.channels\r\n\t\t\t\tclientChannels.push({ id: idChannel, type: \"private\" })\r\n\r\n\t\t\t\tvar recipientChannels = recipient.channels\r\n\t\t\t\trecipientChannels.push({ id: idChannel, type: \"private\" })\r\n\r\n\t\t\t\t// Mise à jour du client\r\n\t\t\t\tupdateUser(client.id, { data: { channels: clientChannels } })\r\n\r\n\t\t\t\t// Mise à jour du destinataire\r\n\t\t\t\tupdateUser(recipient.id, { data: { channels: recipientChannels } })\r\n\r\n\t\t\t\t// Créaction du channel\r\n\t\t\t\tcreateChannel({\r\n\t\t\t\t\tid: idChannel,\r\n\t\t\t\t\ttype: \"private\",\r\n\t\t\t\t\trecipients: [client.id, recipient.id],\r\n\t\t\t\t\tmessages: []\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsetId({\r\n\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\twarning: \"\"\r\n\t\t\t\t})\r\n\t\t\t\thide()\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\tisShowing\r\n\t\t\t?\r\n\t\t\t<>\r\n\t\t\t\t<form className=\"createChannelPrivate\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-header\">\r\n\t\t\t\t\t\t<div className=\"title\">Ajouter un contact</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-body\">\r\n\t\t\t\t\t\t{id.warning ? <div className=\"title-warning\">{id.warning} </div> : null}\r\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" placeholder=\"Id\"\r\n\t\t\t\t\t\t\tvalue={id.value}\r\n\t\t\t\t\t\t\tonChange={e => setId({\r\n\t\t\t\t\t\t\t\tvalue: e.target.value,\r\n\t\t\t\t\t\t\t\twarning: \"\"\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-footer\">\r\n\t\t\t\t\t\t<button className=\"btn-text-small\" type=\"submit\">Ajouter</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</>\r\n\t\t\t: null\r\n\t)\r\n}\r\nexport default NewContact;","import React, { useState } from 'react'\r\nimport { useChannels } from '../../contexts/ChannelsProvider'\r\nimport { useUser } from '../../contexts/UserProvider';\r\n\r\nfunction NewGroupe({ isShowing, hide }) {\r\n  const { client } = useUser()\r\n  const [selectedContactIds, setSelectedContactIds] = useState([])\r\n  const { createChannel } = useChannels()\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault()\r\n\r\n    createChannel(selectedContactIds)\r\n    // Réinitialisation des valeurs\r\n    setSelectedContactIds([])\r\n    hide()\r\n  }\r\n\r\n  function handleCheckboxChange(contactId) {\r\n    setSelectedContactIds(prevSelectedContactIds => {\r\n      if (prevSelectedContactIds.includes(contactId)) {\r\n        return prevSelectedContactIds.filter(prevId => {\r\n          return contactId !== prevId\r\n        })\r\n      } else {\r\n        return [...prevSelectedContactIds, contactId]\r\n      }\r\n    })\r\n  }\r\n  return (\r\n    isShowing\r\n      ?\r\n      <form className=\"createChannelPrivate\" onSubmit={handleSubmit}>\r\n        <div className=\"createChannelPrivate-header\">\r\n          <div className=\"title\">Crée une conversation</div>\r\n        </div>\r\n        <div className=\"createChannelPrivate-body\">\r\n          {\r\n            client == null ? null : client.channels.filter(channel => channel.recipients.length < 2).map((channel) => (\r\n              \r\n              <div key={channel.id}>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  id={channel.id}\r\n                  value={selectedContactIds.includes(channel.recipients[0].id)}\r\n                  onChange={() => handleCheckboxChange(channel.recipients[0].id)}\r\n                />\r\n                <label>{channel.recipients.map(r => r.pseudo).join(', ')}</label>\r\n              </div>\r\n            ))\r\n          }\r\n        </div>\r\n        <div className=\"createChannelPrivate-footer\">\r\n          <button className=\"btn-text-small\" type=\"submit\">Ajouter</button>\r\n        </div>\r\n      </form>\r\n      : null\r\n  )\r\n}\r\nexport default NewGroupe;","import React, { Component } from 'react'\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport api from \"../../../api\"\r\nconst { validityPseudo } = require(\"../../../functions/validity.js\");\r\n\r\nexport default class Setting extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      selectedFiles: [],\r\n      pseudo: {\r\n        value: 'x',\r\n        warning: '',\r\n        valid: false\r\n      }\r\n    }\r\n\r\n    // Cette liaison est nécéssaire afin de permettre\r\n    // l'utilisation de `this` dans la fonction de rappel.\r\n    this.handleUpdateUser = this.handleUpdateUser.bind(this);\r\n    this.resetAndHide = this.resetAndHide.bind(this);\r\n  }\r\n\r\n  // onChange management \r\n\r\n  // Avatar\r\n  handleChangeInputAvatar = async event => {\r\n\r\n    // .jpg,.jpeg,.png,.gif\r\n\r\n    const files = event.target.files\r\n    const avatar = files[0]\r\n    const type = /image.*/\r\n\r\n    if (!avatar.type.match(type)) return\r\n\r\n    //if (avatar.size > (100*1024)) return\r\n\r\n    this.setState({\r\n      selectedFiles: event.target.files,\r\n    });\r\n  }\r\n\r\n  // Pseudo\r\n  handleChangeInputPseudo = async event => {\r\n    const pseudo = event.target.value\r\n    const rep = validityPseudo(pseudo);\r\n    this.setState({\r\n      pseudo: {\r\n        value: pseudo,\r\n        warning: rep.warning,\r\n        valid: rep.valid\r\n      }\r\n    })\r\n  }\r\n\r\n  // Submit management\r\n\r\n  handleUpdateUser() {\r\n\r\n    // UploadAvatar // https://github.com/MaksymRudnyi/turorials/\r\n    if (this.state.selectedFiles.length !== 0) {\r\n      // FormData permet de stocker plusieur fichiers à la fois\r\n      const file = new FormData();\r\n\r\n      const fileName = this.state.selectedFiles[0].name\r\n      // Ajoute le fichier au formData avec append\r\n      file.append('file', this.state.selectedFiles[0], `${this.props.client.id}.${fileName.substring(fileName.lastIndexOf(\".\") + 1, fileName.length)}`);\r\n\r\n      api.deleteFileById_avatar(this.props.client.id).then(res => {\r\n        if (res.data.success === true) {\r\n          // Envoie de la requête\r\n          api.insertFile_avatar(file)\r\n            .then((res) => {\r\n              console.log('Upload Success')\r\n            })\r\n            .catch((err) => {\r\n              console.log('Upload Error')\r\n            })\r\n        }\r\n      })\r\n    }\r\n\r\n    // UploadPseudo\r\n    const { pseudo } = this.state\r\n    if (pseudo.valid === true) {\r\n\r\n      // Requête a l'api pour rechercher le pseudo\r\n      api.getUserByPseudo(pseudo.value).then(res => {\r\n\r\n        // Je vérifie si le pseudo est déjà utilisé\r\n        // sinon ont mes à jour l'utilisateur\r\n        if (res.data.data !== null) {\r\n          this.setState({\r\n            pseudo: {\r\n              value: pseudo.value,\r\n              warning: 'ce pseudo est déjà utilisé'\r\n            }\r\n          })\r\n        } else {\r\n\r\n          this.resetAndHide()\r\n\r\n          api.updateUserById(this.props.client.id, { data: { pseudo: pseudo.value } }).then(\r\n            (res) => {\r\n              console.log(\"Mise à jour de l'utilisateur\")\r\n            },\r\n            (error) => {\r\n              console.log(\"Problème d'enregistrement dans la base de données\")\r\n              console.log(error)\r\n            })\r\n        }\r\n      })\r\n    } else {\r\n      if (pseudo.value.length === 0) {\r\n        this.setState({\r\n          pseudo: {\r\n            value: pseudo.value,\r\n            warning: 'Ne peut être vide'\r\n          }\r\n        })\r\n      } else {\r\n        this.resetAndHide()\r\n      }\r\n    }\r\n  }\r\n\r\n  // Nettoyage du 'State' et fermeture\r\n  resetAndHide() {\r\n    this.setState({\r\n      selectedFiles: [],\r\n      pseudo: {\r\n        value: 'x',\r\n        warning: '',\r\n        valid: false\r\n      }\r\n    })\r\n\r\n    this.props.hide()\r\n  }\r\n\r\n  render() {\r\n    const { pseudo, selectedFiles } = this.state\r\n    // Récupération des données du client dans l’état local\r\n    const client = this.props.client\r\n\r\n    return (\r\n      this.props.isShowing\r\n        ? ReactDOM.createPortal(\r\n          <div className=\"window\">\r\n            <div className=\"window-backdrop\" onClick={this.props.hide}></div>\r\n            <form className=\"window-container\">\r\n              <div className=\"windowToolHeader\">\r\n                <div className=\"windowToolHeader-title\">\r\n                  Paramètres\r\n                </div>\r\n                <div className=\"windowToolHeader-subtitle\">\r\n                  Clic sur ton pseudo pour le modifier\r\n                </div>\r\n              </div>\r\n              <div className=\"clientSetting-body scroller\">\r\n                <div className=\"clientSetting-body-divider\">\r\n                  <div className=\"title\">Compte</div><div className=\"bar\"></div>\r\n                </div>\r\n\r\n                <div className=\"clientSetting-body-account\">\r\n                  <div className=\"clientSetting-body-account-avatar\">\r\n                    <img className=\"avatar\" src={selectedFiles.length === 0 ? client === null ? null : `https://collaps.xyz/collapsapi/api/file_avatar/id/${client.id}` : URL.createObjectURL(selectedFiles[0])}//http://localhost:3000/\r\n                      alt=\"user account\" />\r\n                    <input className=\"avatarUploaderInput\" type=\"file\" accept=\".jpg,.jpeg,.png,.gif\" onChange={this.handleChangeInputAvatar} />\r\n                    <div className=\"avatarUploaderIcon\"></div>\r\n                  </div>\r\n                  <div className=\"clientSetting-body-account-info\">\r\n                    <div className=\"pseudo\">\r\n                      <div className=\"title\">Pseudo {pseudo.warning ? <span className=\"title-warning\">- {pseudo.warning}</span> : null}</div>\r\n                      <div className=\"content\">\r\n                        <input\r\n                          className=\"input\"\r\n                          type=\"text\"\r\n                          maxLength=\"32\"\r\n                          required\r\n                          value={pseudo.value === \"x\" ? client === null ? null : client.pseudo : pseudo.value}\r\n                          onChange={this.handleChangeInputPseudo}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"id\">\r\n                      <div className=\"title\">Id</div>\r\n                      <div className=\"content\">{client.id}</div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"clientSetting-body-divider\">\r\n                  <div className=\"title\">Informations</div><div className=\"bar\"></div>\r\n                </div>\r\n\r\n                <div className=\"clientSetting-body-info\">\r\n                  <div className=\"clientSetting-body-info-compatibility\">\r\n                    <div className=\"title\">Compatible</div>\r\n                    <div className=\"navigator\">\r\n                      <li>Mozilla Firefox</li>\r\n                      <li>Google Chrome</li>\r\n                      <li>Apple Safari</li>\r\n                      <li>Microsoft Edge</li>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"clientSetting-body-info-support\">\r\n                    <div className=\"title\">Support</div>\r\n                    <div className=\"navigator\">\r\n                      <li>Windows</li>\r\n                      <li>MacOS</li>\r\n                      <li>Android</li>\r\n                      <li>iOS</li>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"windowToolFooter\">\r\n                <button className=\"btn-icon-default-red\" type=\"button\">\r\n                  <svg viewBox=\"0 0 384 384\" aria-hidden=\"false\" width=\"21\" height=\"21\" x=\"0\" y=\"0\">\r\n                    <path fill=\"currentColor\" d=\"M341.333,0H42.667C19.093,0,0,19.093,0,42.667V128h42.667V42.667h298.667v298.667H42.667V256H0v85.333\r\n                      C0,364.907,19.093,384,42.667,384h298.667C364.907,384,384,364.907,384,341.333V42.667C384,19.093,364.907,0,341.333,0z\"/>\r\n                    <polygon fill=\"currentColor\" points=\"151.147,268.48 181.333,298.667 288,192 181.333,85.333 151.147,115.52 206.293,170.667 0,170.667 0,213.333 \r\n                      206.293,213.333\" />\r\n                  </svg>\r\n                </button>\r\n                <div className=\"windowToolFooter-btn\">\r\n                  <button className=\"btn-text-default\" type=\"button\" onClick={this.handleUpdateUser}>\r\n                    <div className=\"content\">Terminé</div>\r\n                  </button>\r\n                  <button className=\"btn-text-simple\" type=\"button\" onClick={this.resetAndHide}>\r\n                    <div className=\"content\">Annuler</div>\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>,\r\n          document.body\r\n        ) : null\r\n    )\r\n  }\r\n}\r\n\r\n/*\r\n{selectedFiles.length == 0 ? \"rien\" : <img style={{maxWidth: '200px'}} src={URL.createObjectURL(selectedFiles[0])} alt={selectedFiles[0].originalname}/>}\r\n{selectedFiles.length == 0 ? \"rien\" : selectedFiles.map((file) => <img style={{maxWidth: '200px'}} src={`//localhost:8000/${file.filename}`} alt={file.originalname}/>)}\r\n\r\n*/","import React, { Component } from 'react'\n\nimport ChannelsContacts from './ChannelsContacts'\nimport ChannelsGroupes from './ChannelsGroupes'\n\nimport NewContact from \"./NewContact\";\nimport NewGroupe from \"./NewGroupe\";\nimport Setting from \"./windows/setting\";\n\nimport userContext from '../../contexts/UserProvider';\n\nexport default class Sidebar extends Component {\n\tstatic contextType = userContext\n\tconstructor(props) {\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\tisShowingNewContact: false,\n\t\t\tisShowingNewGroupe: false,\n\t\t\tisShowingSetting: false\n\t\t}\n\t}\n\n\ttoggleNewContact = () => {\n\t\tthis.state.isShowingNewContact ? this.setState({ isShowingNewContact: false }) : this.setState({ isShowingNewContact: true })\n\t}\n\ttoggleNewGroupe = () => {\n\t\tthis.state.isShowingNewGroupe ? this.setState({ isShowingNewGroupe: false }) : this.setState({ isShowingNewGroupe: true })\n\t}\n\ttoggleSetting = () => {\n\t\tthis.state.isShowingSetting ? this.setState({ isShowingSetting: false }) : this.setState({ isShowingSetting: true })\n\t}\n\n\tcopyId = () => {\n\t\tconst client = this.context.client\n\t\tnavigator.clipboard.writeText(client == null ? null : client.id).then(\n\t\t\t() => {\n\t\t\t\tconsole.log(\"Id copier\")\n\t\t\t},\n\t\t\t(error) => {\n\t\t\t\tconsole.log(\"Nous n'avons pas pu copier votre id\")\n\t\t\t\tconsole.log(error)\n\t\t\t});\n\t}\n\n\t// Fonction appelée quand le client commence à écrire\n\tsearchSystem = () => {\n\t\t// Declare variables\n\t\tvar input, filter, ul, li, a, i, txtValue;\n\t\tinput = document.getElementById('myInput');\n\t\tfilter = input.value.toUpperCase();\n\t\tul = document.getElementById(\"channelsPrivates\");\n\t\tli = ul.getElementsByTagName(\"button\")\n\n\t\t// Parcoure tous les éléments de la liste et masquez ceux qui ne correspondent pas à la requête de recherche\n\t\tfor (i = 0; i < li.length; i++) {\n\t\t  a = li[i].getElementsByClassName(\"overflow\")[0];\n\t\t  txtValue = a.textContent || a.innerText;\n\t\t  if (txtValue.toUpperCase().indexOf(filter) > -1) {\n\t\t\tli[i].style.display = \"\";\n\t\t  } else {\n\t\t\tli[i].style.display = \"none\";\n\t\t  }\n\t\t}\n\t  }\n\n\trender() {\n\t\t// Récupération des données du client dans l’état local\n\t\tconst client = this.context.client\n\n\t\treturn (\n\t\t\t<div className=\"sidebar\">\n\t\t\t\t<div className=\"sidebar-header\">\n\t\t\t\t\t<input className=\"sidebar-header-search\" type=\"text\" id=\"myInput\" onKeyUp={this.searchSystem} placeholder=\"Rechercher une conversation\" />\n\t\t\t\t</div>\n\t\t\t\t<div className=\"sidebar-body scroller\">\n\n\t\t\t\t\t<div className=\"title\">\n\t\t\t\t\t\t<span className=\"text\">Contacts</span>\n\t\t\t\t\t\t<button className=\"button\" type=\"button\" aria-label=\"Créer un contact\" onClick={this.toggleNewContact}>\n\t\t\t\t\t\t\t<svg x=\"0\" y=\"0\" aria-hidden=\"false\"\n\t\t\t\t\t\t\t\twidth=\"24\" height=\"24\" viewBox=\"0 0 18 18\">\n\t\t\t\t\t\t\t\t<polygon fillRule=\"nonzero\" fill=\"currentColor\" points=\"15 10 10 10 10 15 8 15 8 10 3 10 3 8 8 8 8 3 10 3 10 8 15 8\"></polygon>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"channelsPrivates\" aria-label=\"Salons privés\">\n\t\t\t\t\t\t<NewContact isShowing={this.state.isShowingNewContact} hide={this.toggleNewContact} />\n\t\t\t\t\t\t<ChannelsContacts />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"title\" id=\"channelsGroupesTitle\">\n\t\t\t\t\t\t<span className=\"text\">Groupes</span>\n\t\t\t\t\t\t<button className=\"button\" type=\"button\" aria-label=\"Créer un groupe\" onClick={this.toggleNewGroupe}>\n\t\t\t\t\t\t\t<svg x=\"0\" y=\"0\" aria-hidden=\"false\"\n\t\t\t\t\t\t\t\twidth=\"24\" height=\"24\" viewBox=\"0 0 18 18\">\n\t\t\t\t\t\t\t\t<polygon fillRule=\"nonzero\" fill=\"currentColor\" points=\"15 10 10 10 10 15 8 15 8 10 3 10 3 8 8 8 8 3 10 3 10 8 15 8\"></polygon>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id=\"channelsGroupes\" aria-label=\"Salons de groupes\">\n\t\t\t\t\t\t<NewGroupe isShowing={this.state.isShowingNewGroupe} hide={this.toggleNewGroupe} />\n\t\t\t\t\t\t<ChannelsGroupes />\n\t\t\t\t\t</div>\n\n\t\t\t\t</div>\n\n\t\t\t\t<div className=\"sidebar-footer\">\n\t\t\t\t\t<div className=\"sidebar-footer-panels\" aria-label=\"Zone utilisateur\">\n\t\t\t\t\t\t<div className=\"sidebar-footer-panels-avatar\">\n\t\t\t\t\t\t\t<svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n\t\t\t\t\t\t\t\t<foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n\t\t\t\t\t\t\t\t\t<img className=\"avatar\" src={client == null ? null : `https://collaps.xyz/collapsapi/api/file_avatar/id/${client.id}`} aria-hidden=\"true\" alt=\"\" />//http://localhost:3000\n\t\t\t\t\t\t\t\t</foreignObject>\n\t\t\t\t\t\t\t\t<rect className={client == null ? null : client.activity === \"online\" ? \"online\" : \"offline\"} fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sidebar-footer-panels-info\" onClick={this.copyId}>\n\t\t\t\t\t\t\t<div className=\"username\">\n\t\t\t\t\t\t\t\t<div className=\"overflow\">{client == null ? null : client.pseudo}</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"tag\">\n\t\t\t\t\t\t\t\t<div className=\"overflow\">#1012</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"sidebar-footer-panels-control\">\n\t\t\t\t\t\t\t<button className=\"btn-icon-small\" type=\"button\" alt=\"Bouton paramètre\" onClick={this.toggleSetting}>\n\t\t\t\t\t\t\t\t<svg viewBox=\"0 0 24 24\" aria-hidden=\"false\" width=\"17\" height=\"17\" x=\"0\" y=\"0\">\n\t\t\t\t\t\t\t\t\t<path fill=\"currentColor\"\n\t\t\t\t\t\t\t\t\t\td=\"m22.683 9.394-1.88-.239c-.155-.477-.346-.937-.569-1.374l1.161-1.495c.47-.605.415-1.459-.122-1.979l-1.575-1.575c-.525-.542-1.379-.596-1.985-.127l-1.493\n\t\t\t\t\t\t\t\t\t1.161c-.437-.223-.897-.414-1.375-.569l-.239-1.877c-.09-.753-.729-1.32-1.486-1.32h-2.24c-.757 0-1.396.567-1.486 1.317l-.239\n\t\t\t\t\t\t\t\t\t1.88c-.478.155-.938.345-1.375.569l-1.494-1.161c-.604-.469-1.458-.415-1.979.122l-1.575 1.574c-.542.526-.597 1.38-.127 1.986l1.161\n\t\t\t\t\t\t\t\t\t1.494c-.224.437-.414.897-.569 1.374l-1.877.239c-.753.09-1.32.729-1.32 1.486v2.24c0 .757.567 1.396 1.317 1.486l1.88.239c.155.477.346.937.569\n\t\t\t\t\t\t\t\t\t1.374l-1.161 1.495c-.47.605-.415 1.459.122 1.979l1.575 1.575c.526.541 1.379.595 1.985.126l1.494-1.161c.437.224.897.415 1.374.569l.239\n\t\t\t\t\t\t\t\t\t1.876c.09.755.729 1.322 1.486 1.322h2.24c.757 0 1.396-.567 1.486-1.317l.239-1.88c.477-.155.937-.346 1.374-.569l1.495 1.161c.605.47\n\t\t\t\t\t\t\t\t\t1.459.415 1.979-.122l1.575-1.575c.542-.526.597-1.379.127-1.985l-1.161-1.494c.224-.437.415-.897.569-1.374l1.876-.239c.753-.09 1.32-.729\n\t\t\t\t\t\t\t\t\t1.32-1.486v-2.24c.001-.757-.566-1.396-1.316-1.486zm-10.683 7.606c-2.757 0-5-2.243-5-5s2.243-5 5-5 5 2.243 5 5-2.243 5-5 5z\" />\n\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<Setting isShowing={this.state.isShowingSetting} hide={this.toggleSetting} client={client} />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t</div>\n\t\t)\n\t}\n}","import React, { Component } from 'react'\r\n\r\n// Main\r\nclass Welcome extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"welcome\">\r\n                <div className=\"welcome-title\">\r\n                    Bienvenue sur FInt.Tchat\r\n                </div>\r\n                <div className=\"welcome-content\">\r\n                    Pour ajouter un contact il faut cliquer sur le petit + a coté de contacts,\r\n                    puis entrer son id et cliquez sur ajouter\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Welcome","import React, { useState, useEffect } from 'react'\n\nimport api from '../../api'\n\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function OpenConversation() {\n  const { client, updateUser } = useUser()\n  const { setChannels, selectedChannel, setSelectedChannel, messagesChannels, sendMessage } = useChannels()\n\n  // Ce \"state\" enregistre le texte du message\n  const [text, setText] = useState('')\n\n  // Fonction appelée pour supprimer le \"channel\" selectionné, dans les données du client est dans celle du destinataire\n  function andleDelChannel() {\n\n    // J'isole les données du client dans une variable pour pouvoir les modifier\n    var userClientEdit = client\n\n    // Je boucle tous les \"channels\" du client\n    for (let i = 0; i < userClientEdit.channels.length; i++) {\n      // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n      if (userClientEdit.channels[i].id === selectedChannel.id) {\n        // Je supprime le channel dans la liste grace à sa position\n        userClientEdit.channels.splice(i, 1);\n        // Je mets à jour le client\n        api.updateUserById(userClientEdit.id, { data: { channels: userClientEdit.channels } }).then(res => { })\n      }\n    }\n\n    // Récupération des données du destinataire avec son id\n    api.getUserById(selectedChannel.recipients[0].id).then(\n      (userRecipient) => {\n\n        // J'isole les données du destinataire dans une variable pour pouvoir les modifier\n        var userRecipientEdit = userRecipient.data.data\n\n        // Je boucle tous les \"channels\" du destinataire\n        for (let i = 0; i < userRecipientEdit.channels.length; i++) {\n          // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n          if (userRecipientEdit.channels[i].id === selectedChannel.id) {\n            // Je supprime le channel dans la liste grace à sa position\n            userRecipientEdit.channels.splice(i, 1);\n            // Je mets à jour le destinataire\n            updateUser(userRecipientEdit.id, { data: { channels: userRecipientEdit.channels } })\n          }\n        }\n\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n    // Supresion du \"channel\" dans \"setChannels\"\n    setChannels(channels => [\n      ...channels.slice(0, selectedChannel.key),\n      ...channels.slice(selectedChannel.key + 1)\n    ]);\n    // Je reset le \"setSelectedChannel\"\n    setSelectedChannel(null)\n    // Je supprime le channel\n    api.deleteChannelById(selectedChannel.id)\n  }\n\n  // Fonction appelée pour envoyé un message\n  function handleSendMsg(e) {\n    e.preventDefault()\n\n    // channel, text, client\n    sendMessage(\n      selectedChannel,\n      text,\n      client,\n    )\n    // Reset de \"setText\"\n    setText('')\n  }\n  \n  // Ce script redimensionne le 'textarea' en prenant en compte la taille de l'affichage\n  useEffect(() => {\n    try {\n      // [ Responsive Textarea size ]\n      // Je définis la taille maximale du textarea\n      var msgTextarea = document.getElementById('msgTextarea');\n      if (window.screen.height >= 1000) {\n        msgTextarea.style.maxHeight = \"330px\"//44px = 2 ligne\n      } else if (window.screen.height >= 900) {\n        msgTextarea.style.maxHeight = \"286px\"\n      } else if (window.screen.height >= 800) {\n        msgTextarea.style.maxHeight = \"242px\"\n      } else if (window.screen.height >= 700) {\n        msgTextarea.style.maxHeight = \"198px\"\n      } else if (window.screen.height >= 600) {\n        msgTextarea.style.maxHeight = \"154px\"\n      } else if (window.screen.height >= 500) {\n        msgTextarea.style.maxHeight = \"110px\"\n      }\n      // Redimensionnement automatique\n      msgTextarea.addEventListener('input', function (event) {\n        var el = this;\n        el.style.height = '22px';\n        el.style.height = (el.scrollHeight - 22) + 'px';\n      });\n    } catch (error) {\n      console.error(error)\n    }\n  }, []);\n\n  // Met le scroll de \"messageBodyScroll\" en bas dès qu'un \"channel\" est sélectionné\n  useEffect(() => {\n    var scrollarea = document.getElementById('messageBodyScroll');\n    scrollarea.scrollIntoView({ behavior: \"smooth\" })\n  }, [selectedChannel]);\n\n  //  Met le scroll de \"messageBodyScroll\" en bas dès qu'un message et envoyé ou reçu\n  useEffect(() => {\n    var scrollarea = document.getElementById('messageBodyScroll');\n    const scrollToBottom = (node) => {\n      node.scrollTop = node.scrollHeight;\n    }\n    scrollToBottom(scrollarea);\n  }, [messagesChannels]);\n\n  var lastSenderNow;\n\n  return (\n    <div className=\"message\">\n      <div className=\"message-header\">\n        <div className=\"message-header-user\">\n          <div className=\"message-header-user-avatar\">\n            <img className=\"avatar\"\n              src={`https://collaps.xyz/collapsapi/api/file_avatar/id/${selectedChannel.recipients[0].id}`} //http://localhost:3000\n              alt=\"user profil\" />\n          </div>\n          <div className=\"message-header-user-info\">\n            <div className=\"username\">\n              {selectedChannel.recipients[0].pseudo}\n            </div>\n            <div className=\"statut online\">\n              <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"10\" height=\"15\" x=\"0\" y=\"0\">\n                <path fill=\"currentColor\"\n                  d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"message-header-toolbar\">\n          <button className=\"btn-icon-small-red\" type=\"button\" onClick={andleDelChannel}>\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\" x=\"0\" y=\"0\">\n              <polygon fill=\"currentColor\" points=\"512,338.954 483.732,310.686 411.772,382.646 339.812,310.686 311.543,338.954 383.503,410.914 311.543,482.874 \n              339.812,511.142 411.772,439.182 483.732,511.142 512,482.874 440.04,410.914 \t\t\"/>\n              <path fill=\"currentColor\" d=\"M255.858,0.142c-81.562,0-147.918,66.356-147.918,147.918c0,50.52,25.465,95.198,64.226,121.894\n              c-36.19,12.488-69.36,33.118-97.227,60.984C26.614,379.265,0,443.516,0,511.858h39.978c0-119.037,96.843-215.88,215.88-215.88\n              c81.562,0,147.918-66.355,147.918-147.918C403.776,66.498,337.42,0.142,255.858,0.142z M255.858,256\n              c-59.518,0-107.94-48.421-107.94-107.94S196.34,40.12,255.858,40.12c59.518,0,107.94,48.421,107.94,107.94\n              S315.376,256,255.858,256z\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div className=\"message-body scroller\" id=\"messageBodyScroll\">\n        {\n          selectedChannel.messages.map((message, index) => {\n\n            // Trensforme la date du format texte au format js\n            var date = new Date(message.date);\n            // Mise en forme de la date\n            date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n            const pseudo = client === null ? null : message.sender === client.id ? client.pseudo : selectedChannel.recipients.find(recipient => recipient.id === message.sender).pseudo\n\n            // Détecte si plus de deux messages a la suite sont du même destinataire\n            var lastSenderPass = lastSenderNow;\n            lastSenderNow = message.sender;\n\n            return (\n              lastSenderNow !== lastSenderPass\n                ?\n                <div\n                  className=\"message-body-message parents\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-avatar\">\n                    <img className=\"avatar\"\n                      src={`https://collaps.xyz/collapsapi/api/file_avatar/id/${message.sender}`} //http://localhost:3000\n                      alt=\"user profil\" />\n                  </div>\n                  <h2 className=\"message-body-message-header\">\n                    <span className=\"pseudo\">\n                      {pseudo}\n                    </span>\n                    <span className=\"timestamp\">\n                      {date}\n                    </span>\n                  </h2>\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n                :\n                <div\n                  className=\"message-body-message children\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n            )\n          })\n        }\n        {\n          messagesChannels.length === 0 ? null : messagesChannels.find(messagesChannel => messagesChannel.id === selectedChannel.id).messages.map((message, index) => {\n\n            // Trensforme la date du format texte au format js\n            var date = new Date(message.date);\n            // Mise en forme de la date\n            date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n            // Détecte si plus de deux messages a la suite sont du même destinataire\n            var lastSenderPass = lastSenderNow;\n            lastSenderNow = message.sender.id;\n\n            return (\n              lastSenderNow !== lastSenderPass\n                ?\n                <div\n                  className=\"message-body-message parents\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-avatar\">\n                    <img className=\"avatar\"\n                      src={`https://collaps.xyz/collapsapi/api/file_avatar/id/${message.sender.id}`}\n                      alt=\"user profil\" />\n                  </div>\n                  <h2 className=\"message-body-message-header\">\n                    <span className=\"pseudo\">\n                      {message.sender.pseudo}\n                    </span>\n                    <span className=\"timestamp\">\n                      {date}\n                    </span>\n                  </h2>\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n                :\n                <div\n                  className=\"message-body-message children\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n            )\n          })\n        }\n        <div className=\"message-body-spacer\" id=\"spacer\"></div>\n      </div>\n      <div className=\"message-footer\">\n        <form className=\"message-footer-toolbar\" onSubmit={handleSendMsg}>\n\n          <div className=\"message-footer-toolbar-uploadBtn\">\n            <svg className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"currentColor\" d=\"M12 2.00098C6.486 2.00098 2 6.48698 2 12.001C2 17.515 6.486 22.001 12 22.001C17.514 22.001 22 17.515 22 12.001C22\n                    6.48698 17.514 2.00098 12 2.00098ZM17 13.001H13V17.001H11V13.001H7V11.001H11V7.00098H13V11.001H17V13.001Z\">\n              </path>\n            </svg>\n            <input className=\"input\" type=\"file\" multiple />\n          </div>\n\n          <textarea id=\"msgTextarea\" className=\"message-footer-toolbar-textarea scroller\" placeholder={\"Envoyer un message à \" + selectedChannel.recipients[0].pseudo}\n            spellCheck=\"true\" autoFocus autoComplete=\"off\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n          ></textarea>\n\n          <button className=\"message-footer-toolbar-sendBtn\" type=\"submit\">\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\">\n              <path fill=\"currentColor\" d=\"M481.508,210.336L68.414,38.926c-17.403-7.222-37.064-4.045-51.309,8.287C2.86,59.547-3.098,78.551,1.558,96.808\n                  L38.327,241h180.026c8.284,0,15.001,6.716,15.001,15.001c0,8.284-6.716,15.001-15.001,15.001H38.327L1.558,415.193\n                  c-4.656,18.258,1.301,37.262,15.547,49.595c14.274,12.357,33.937,15.495,51.31,8.287l413.094-171.409\n                  C500.317,293.862,512,276.364,512,256.001C512,235.638,500.317,218.139,481.508,210.336z\" />\n            </svg>\n          </button>\n\n        </form>\n      </div>\n    </div>\n  )\n}","import React from 'react'\n\nimport Sidebar from './sidebar/Sidebar';\n\nimport Welcome from './container/Welcome';\nimport OpenConversation from './container/OpenConversation';\n\nimport { useChannels } from '../contexts/ChannelsProvider';\n\n// Main\nexport default function Dashboard({ id }) {\n  const { selectedChannel } = useChannels()\n\n  return (\n    <>\n      <Sidebar />\n      <div className=\"container\">\n        {\n          selectedChannel !== null ? selectedChannel && <OpenConversation /> : <Welcome />\n        }\n      </div>\n    </>\n  )\n}","import React from 'react'\nimport Connection from './Connection/Connection'\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport Dashboard from './Dashboard'\nimport { ChannelsProvider } from '../contexts/ChannelsProvider';\nimport { SocketProvider } from '../contexts/SocketProvider';\nimport { UserProvider } from '../contexts/UserProvider';\n\nfunction App() {\n  const [id, setId] = useLocalStorage('id')\n\n  const dashboard = (\n    <SocketProvider id={id}>\n      <UserProvider id={id}>\n        <ChannelsProvider id={id}>\n          <Dashboard id={id} />\n        </ChannelsProvider>\n      </UserProvider>\n    </SocketProvider>\n  )\n\n  if (id === undefined) return (\n    <Connection onIdSubmit={setId} />\n  )\n  return (\n    dashboard\n  )\n}\n\nexport default App;\n","import { useEffect, useState } from 'react';\n\nconst PREFIX = 'FInt-';\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  });\n\n  useEffect(() => {\n    // Je ne stock rien si il n'y a pas de clé\n    if (value != null) localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('main')\n);","module.exports = {\r\n  validityPseudo: function (pseudo) {\r\n    const x = pseudo.length\r\n    switch (true) {\r\n      case (x === 0):\r\n        return {warning: \"\", valid: false}\r\n      case (x < 3):\r\n        return {warning: \"Trop court\", valid: false}\r\n      case (x > 32):\r\n        return {warning: \"Trop long\", valid: false}\r\n      default:\r\n        return {warning: \"\", valid: true}\r\n    }\r\n  },\r\n  validityPassword: function (password) {\r\n    const x = password.length\r\n    switch (true) {\r\n      case (x === 0):\r\n        return {warning: \"\", valid: false}\r\n      case (x < 6):\r\n        return {warning: \"Trop court\", valid: false}\r\n      case (x > 32):\r\n        return {warning: \"Trop long\", valid: false}\r\n      default:\r\n        return {warning: \"\", valid: true}\r\n    }\r\n  },\r\n  validityPasswordConfirm: function (passwordConfirm, password) {\r\n    const passwordConfirmTextLength = passwordConfirm.length\r\n    const passwordConfirmValue = passwordConfirm\r\n    switch (true) {\r\n      case (passwordConfirmTextLength === 0):\r\n        return {warning: \"\", valid: false}\r\n      case (passwordConfirmValue !== password):\r\n        return {warning: \"Incorrect\", valid: false}\r\n      default:\r\n        return {warning: \"\", valid: true}\r\n    }\r\n  },\r\n  validityPasswordConfirmForPassword: function (passwordConfirm, passwordValue) {\r\n    const passwordConfirmTextLength = passwordConfirm.length\r\n    const passwordConfirmValue = passwordConfirm\r\n    switch (true) {\r\n      case (passwordConfirmTextLength === 0):\r\n        return {warning: \"\", valid: false}\r\n      case (passwordConfirmValue !== passwordValue):\r\n        return {warning: \"Le mot de passe ne corrrespond pas\", valid: false}\r\n      default:\r\n        return {warning: \"\", valid: true}\r\n    }\r\n  }\r\n};"],"sourceRoot":""}