{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\Beta\\\\V1\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\Beta\\\\V1\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import api from\"../../api\";import{useUser}from'../../contexts/UserProvider';import{useChannels}from'../../contexts/ChannelsProvider';function NewContact(_ref){var isShowing=_ref.isShowing,hide=_ref.hide;var _useUser=useUser(),client=_useUser.client,updateUser=_useUser.updateUser;var _useChannels=useChannels(),channels=_useChannels.channels,createChannel=_useChannels.createChannel,setChannels=_useChannels.setChannels,setSelectedChannel=_useChannels.setSelectedChannel;// Création d'un \"useState\" pour stocker l'id\nvar _useState=useState({value:\"\",warning:\"\"}),_useState2=_slicedToArray(_useState,2),id=_useState2[0],setId=_useState2[1];function handleSubmit(e){e.preventDefault();// Je teste si la valeur est bien celle d'un id\nif(id.value.length===0)return setId({value:\"\",warning:\"Il faut entré un id\"});// Je teste si la valeur est bien celle d'un id\nif(id.value.length!==18&&!/^[0-9]*$/.test(id.value))return setId({value:\"\",warning:\"Ceci n'est pas un id valide\"});// Je test si l'id n'est pas celui du client\nif(id.value===client.id)return setId({value:\"\",warning:\"Tu ne peux pas t'ajouter\"});// Je test si le contact n'est pas déjà ajouter\nvar valid=true;client.channels.filter(function(channel){return channel.type===\"private\";}).forEach(function(channel){console.log(channel);if(channel.id===id.value)valid=false;});if(valid===false)return setId({value:\"\",warning:\"Ce contact existe déjà\"});api.getUserById(id.value).then(function(recipient){/*\r\n\t\t\t\tif (recipient.data.data === null) return setId({\r\n\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\twarning: \"L'id n'a pas été trouvé\"\r\n\t\t\t\t})*/recipient=recipient.data.data;// Id unique du channel\nvar idChannel=(Math.floor(Math.random()*10000000000000000)+99999999999999999).toString();setChannels(function(channels){return[].concat(_toConsumableArray(channels),[{id:idChannel,type:\"private\",recipients:[{id:recipient.id,pseudo:recipient.pseudo}],messages:[]}]);});setSelectedChannel({id:idChannel,type:\"private\",recipients:[{id:recipient.id,pseudo:recipient.pseudo}],messages:[],selected:true,key:channels.length===0?0:channels.length-1});var clientChannels=client.channels;clientChannels.push({id:idChannel,type:\"private\"});var recipientChannels=recipient.channels;recipientChannels.push({id:idChannel,type:\"private\"});// Mise à jour du client\nupdateUser(client.id,{data:{channels:clientChannels}});// Mise à jour du destinataire\nupdateUser(recipient.id,{data:{channels:recipientChannels}});// Créaction du channel\ncreateChannel({id:idChannel,type:\"private\",recipients:[client.id,recipient.id],messages:[]});setId({value:\"\",warning:\"\"});hide();},function(error){console.log(error);});}return isShowing?/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"form\",{className:\"createChannelPrivate\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"div\",{className:\"createChannelPrivate-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"title\"},\"Ajouter un contact\")),/*#__PURE__*/React.createElement(\"div\",{className:\"createChannelPrivate-body\"},id.warning?/*#__PURE__*/React.createElement(\"div\",{className:\"title-warning\"},id.warning,\" \"):null,/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"text\",placeholder:\"Id\",value:id.value,onChange:function onChange(e){return setId({value:e.target.value,warning:\"\"});}})),/*#__PURE__*/React.createElement(\"div\",{className:\"createChannelPrivate-footer\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn-text-small\",type:\"submit\"},\"Ajouter\")))):null;}export default NewContact;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/Beta/V1/client/src/components/sidebar/NewContact.js"],"names":["React","useState","api","useUser","useChannels","NewContact","isShowing","hide","client","updateUser","channels","createChannel","setChannels","setSelectedChannel","value","warning","id","setId","handleSubmit","e","preventDefault","length","test","valid","filter","channel","type","forEach","console","log","getUserById","then","recipient","data","idChannel","Math","floor","random","toString","recipients","pseudo","messages","selected","key","clientChannels","push","recipientChannels","error","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport api from \"../../api\"\r\nimport { useUser } from '../../contexts/UserProvider';\r\nimport { useChannels } from '../../contexts/ChannelsProvider';\r\n\r\nfunction NewContact({ isShowing, hide }) {\r\n\tconst { client, updateUser } = useUser()\r\n\tconst { channels, createChannel, setChannels, setSelectedChannel } = useChannels()\r\n\r\n\t// Création d'un \"useState\" pour stocker l'id\r\n\tconst [id, setId] = useState({\r\n\t\tvalue: \"\",\r\n\t\twarning: \"\"\r\n\t})\r\n\r\n\tfunction handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\r\n\t\t// Je teste si la valeur est bien celle d'un id\r\n\t\tif (id.value.length === 0) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Il faut entré un id\"\r\n\t\t})\r\n\r\n\t\t// Je teste si la valeur est bien celle d'un id\r\n\t\tif (id.value.length !== 18 && !/^[0-9]*$/.test(id.value)) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Ceci n'est pas un id valide\"\r\n\t\t})\r\n\r\n\t\t// Je test si l'id n'est pas celui du client\r\n\t\tif (id.value === client.id) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Tu ne peux pas t'ajouter\"\r\n\t\t})\r\n\r\n\t\t// Je test si le contact n'est pas déjà ajouter\r\n\t\tvar valid = true;\r\n\t\tclient.channels.filter(channel => channel.type === \"private\").forEach(channel => {\r\n\t\t\tconsole.log(channel)\r\n\t\t\tif (channel.id === id.value) valid = false;\r\n\t\t});\r\n\t\tif (valid === false) return setId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Ce contact existe déjà\"\r\n\t\t});\r\n\r\n\t\tapi.getUserById(id.value).then(\r\n\t\t\t(recipient) => {\r\n\r\n\t\t\t\t/*\r\n\t\t\t\tif (recipient.data.data === null) return setId({\r\n\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\twarning: \"L'id n'a pas été trouvé\"\r\n\t\t\t\t})*/\r\n\r\n\t\t\t\trecipient = recipient.data.data\r\n\r\n\t\t\t\t// Id unique du channel\r\n\t\t\t\tconst idChannel = (Math.floor(Math.random() * 10000000000000000) + 99999999999999999).toString();\r\n\r\n\t\t\t\tsetChannels(channels => [...channels, {\r\n\t\t\t\t\tid: idChannel,\r\n\t\t\t\t\ttype: \"private\",\r\n\t\t\t\t\trecipients: [{\r\n\t\t\t\t\t\tid: recipient.id,\r\n\t\t\t\t\t\tpseudo: recipient.pseudo\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tmessages: []\r\n\t\t\t\t}]);\r\n\r\n\t\t\t\tsetSelectedChannel({\r\n\t\t\t\t\tid: idChannel,\r\n\t\t\t\t\ttype: \"private\",\r\n\t\t\t\t\trecipients: [{\r\n\t\t\t\t\t\tid: recipient.id,\r\n\t\t\t\t\t\tpseudo: recipient.pseudo\r\n\t\t\t\t\t}],\r\n\t\t\t\t\tmessages: [],\r\n\t\t\t\t\tselected: true,\r\n\t\t\t\t\tkey: channels.length === 0 ? 0 : channels.length - 1\r\n\t\t\t\t})\r\n\r\n\t\t\t\tvar clientChannels = client.channels\r\n\t\t\t\tclientChannels.push({ id: idChannel, type: \"private\" })\r\n\r\n\t\t\t\tvar recipientChannels = recipient.channels\r\n\t\t\t\trecipientChannels.push({ id: idChannel, type: \"private\" })\r\n\r\n\t\t\t\t// Mise à jour du client\r\n\t\t\t\tupdateUser(client.id, { data: { channels: clientChannels } })\r\n\r\n\t\t\t\t// Mise à jour du destinataire\r\n\t\t\t\tupdateUser(recipient.id, { data: { channels: recipientChannels } })\r\n\r\n\t\t\t\t// Créaction du channel\r\n\t\t\t\tcreateChannel({\r\n\t\t\t\t\tid: idChannel,\r\n\t\t\t\t\ttype: \"private\",\r\n\t\t\t\t\trecipients: [client.id, recipient.id],\r\n\t\t\t\t\tmessages: []\r\n\t\t\t\t})\r\n\r\n\t\t\t\tsetId({\r\n\t\t\t\t\tvalue: \"\",\r\n\t\t\t\t\twarning: \"\"\r\n\t\t\t\t})\r\n\t\t\t\thide()\r\n\t\t\t},\r\n\t\t\t(error) => {\r\n\t\t\t\tconsole.log(error)\r\n\t\t\t}\r\n\t\t)\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\tisShowing\r\n\t\t\t?\r\n\t\t\t<>\r\n\t\t\t\t<form className=\"createChannelPrivate\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-header\">\r\n\t\t\t\t\t\t<div className=\"title\">Ajouter un contact</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-body\">\r\n\t\t\t\t\t\t{id.warning ? <div className=\"title-warning\">{id.warning} </div> : null}\r\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" placeholder=\"Id\"\r\n\t\t\t\t\t\t\tvalue={id.value}\r\n\t\t\t\t\t\t\tonChange={e => setId({\r\n\t\t\t\t\t\t\t\tvalue: e.target.value,\r\n\t\t\t\t\t\t\t\twarning: \"\"\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-footer\">\r\n\t\t\t\t\t\t<button className=\"btn-text-small\" type=\"submit\">Ajouter</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</>\r\n\t\t\t: null\r\n\t)\r\n}\r\nexport default NewContact;"]},"metadata":{},"sourceType":"module"}