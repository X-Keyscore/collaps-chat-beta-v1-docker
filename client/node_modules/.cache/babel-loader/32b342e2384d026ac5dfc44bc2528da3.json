{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\collaps-chat\\\\dev\\\\Beta\\\\V1\\\\client\\\\src\\\\components\\\\Connection\\\\Register.js\";\nimport React, { Component } from 'react';\nimport api from '../../api';\n\nconst {\n  validityPseudo,\n  validityPassword,\n  validityPasswordConfirm,\n  validityPasswordConfirmForPassword\n} = require(\"../../functions/validity.js\");\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChangeInputPseudo = async event => {\n      const pseudo = event.target.value;\n      const rep = validityPseudo(pseudo);\n      this.setState({\n        pseudo: {\n          value: pseudo,\n          warning: rep.warning,\n          valid: rep.valid\n        }\n      });\n    };\n\n    this.handleChangeInputPassword = async event => {\n      const password = event.target.value;\n      const rep = validityPassword(password);\n      this.setState({\n        password: {\n          value: password,\n          warning: rep.warning,\n          valid: rep.valid\n        }\n      });\n      const passwordConfirm = this.state.passwordConfirm;\n      const rep2 = validityPasswordConfirmForPassword(passwordConfirm, password);\n      this.setState({\n        passwordConfirm: {\n          value: passwordConfirm.value,\n          warning: rep2.warning,\n          valid: rep2.valid\n        }\n      });\n    };\n\n    this.handleChangeInputPasswordConfirm = async event => {\n      const passwordConfirm = event.target.value;\n      const rep = validityPasswordConfirm(passwordConfirm, this.state.password.value);\n      this.setState({\n        passwordConfirm: {\n          value: passwordConfirm,\n          warning: rep.warning,\n          valid: rep.valid\n        }\n      });\n    };\n\n    this.submitCreateUser = async e => {\n      e.preventDefault();\n      const {\n        pseudo,\n        password,\n        passwordConfirm\n      } = this.state;\n\n      if (pseudo.valid === true && password.valid === true && passwordConfirm.valid === true) {\n        // Requête a l'api pour rechercher le pseudo\n        await api.getUserByPseudo(pseudo.value).then(res => {\n          // Je vérifie si le pseudo est déjà utilisé\n          // sinon on crée l'utilisateur\n          if (res.data.user) {\n            this.setState({\n              pseudo: {\n                value: pseudo.value,\n                warning: 'ce pseudo est déjà utilisé'\n              }\n            });\n          } else {\n            // Création de l'utilisateur\n            const id = (Math.floor(Math.random() * 10000000000000000) + 99999999999999999).toString();\n            const payload = {\n              id,\n              pseudo: pseudo.value,\n              password: password.value,\n              channels: []\n            };\n            api.registeringUser(payload).then(res => {\n              // Envoi de l'id si l'utilisateur est créé\n              if (res.data.status.success) {\n                this.props.setToken(res.token);\n                this.props.setId(id);\n                this.props.setLoginValidity(true);\n              }\n            }, err => {\n              console.log(err);\n            });\n          }\n        });\n      }\n    };\n\n    this.state = {\n      pseudo: {\n        value: '',\n        warning: '',\n        valid: false\n      },\n      password: {\n        value: '',\n        warning: '',\n        valid: false\n      },\n      passwordConfirm: {\n        value: '',\n        warning: '',\n        valid: false\n      }\n    };\n  } // Passe la valeur du \"input\" \"pseudo\" à l'état local\n\n\n  render() {\n    const {\n      pseudo,\n      password,\n      passwordConfirm\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"connection-form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connectionToolHeader\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connectionToolHeader-title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, \"Collaps\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connectionToolHeader-subtitle\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 13\n      }\n    }, \"Bienvenue dans l'espace d'inscription\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connection-body scroller\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connection-body-input\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, \"Pseudo \", pseudo.warning ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 42\n      }\n    }, \"- \", pseudo.warning) : null), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${pseudo.warning ? 'input-warning' : ''}`,\n      type: \"text\",\n      autoFocus: true,\n      required: true,\n      value: pseudo.value,\n      onChange: this.handleChangeInputPseudo,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, \"Mot de passe \", password.warning ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 50\n      }\n    }, \"- \", password.warning) : null), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${password.warning ? 'input-warning' : ''}`,\n      type: \"password\",\n      required: true,\n      value: password.value,\n      onChange: this.handleChangeInputPassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"spacer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"title\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, \"Confirmer le mot de passe \", passwordConfirm.warning ? /*#__PURE__*/React.createElement(\"span\", {\n      className: \"title-warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 70\n      }\n    }, \"- \", passwordConfirm.warning) : null), /*#__PURE__*/React.createElement(\"input\", {\n      className: `input ${passwordConfirm.warning ? 'input-warning' : ''}`,\n      type: \"password\",\n      required: true,\n      value: passwordConfirm.value,\n      onChange: this.handleChangeInputPasswordConfirm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 15\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connectionToolFooter\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"connectionToolFooter-btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-text-default\",\n      type: \"button\",\n      onClick: this.submitCreateUser,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }, \"S'inscrire\")), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn-text-simple\",\n      type: \"button\",\n      onClick: this.props.hide,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, \"Se connecter\"))))));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["C:/Users/anton/Desktop/collaps-chat/dev/Beta/V1/client/src/components/Connection/Register.js"],"names":["React","Component","api","validityPseudo","validityPassword","validityPasswordConfirm","validityPasswordConfirmForPassword","require","Register","constructor","props","handleChangeInputPseudo","event","pseudo","target","value","rep","setState","warning","valid","handleChangeInputPassword","password","passwordConfirm","state","rep2","handleChangeInputPasswordConfirm","submitCreateUser","e","preventDefault","getUserByPseudo","then","res","data","user","id","Math","floor","random","toString","payload","channels","registeringUser","status","success","setToken","token","setId","setLoginValidity","err","console","log","render","hide"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport api from '../../api'\r\n\r\nconst { validityPseudo, validityPassword, validityPasswordConfirm, validityPasswordConfirmForPassword } = require(\"../../functions/validity.js\");\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      pseudo: {\r\n        value: '',\r\n        warning: '',\r\n        valid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        warning: '',\r\n        valid: false\r\n      },\r\n      passwordConfirm: {\r\n        value: '',\r\n        warning: '',\r\n        valid: false\r\n      }\r\n    }\r\n  }\r\n\r\n  // Passe la valeur du \"input\" \"pseudo\" à l'état local\r\n  handleChangeInputPseudo = async event => {\r\n    const pseudo = event.target.value\r\n    const rep = validityPseudo(pseudo);\r\n    this.setState({\r\n      pseudo: {\r\n        value: pseudo,\r\n        warning: rep.warning,\r\n        valid: rep.valid\r\n      }\r\n    })\r\n  }\r\n\r\n  // Passe la valeur de \"input\" \"password\" à l'état local\r\n  handleChangeInputPassword = async event => {\r\n    const password = event.target.value;\r\n    const rep = validityPassword(password);\r\n    this.setState({\r\n      password: {\r\n        value: password,\r\n        warning: rep.warning,\r\n        valid: rep.valid\r\n      }\r\n    })\r\n\r\n    const passwordConfirm = this.state.passwordConfirm;\r\n    const rep2 = validityPasswordConfirmForPassword(passwordConfirm, password);\r\n    this.setState({\r\n      passwordConfirm: {\r\n        value: passwordConfirm.value,\r\n        warning: rep2.warning,\r\n        valid: rep2.valid\r\n      }\r\n    })\r\n  }\r\n\r\n  // Passe la valeur de \"input\" \"passwordConfirm\" à l'état local\r\n  handleChangeInputPasswordConfirm = async event => {\r\n    const passwordConfirm = event.target.value;\r\n    const rep = validityPasswordConfirm(passwordConfirm, this.state.password.value);\r\n    this.setState({\r\n      passwordConfirm: {\r\n        value: passwordConfirm,\r\n        warning: rep.warning,\r\n        valid: rep.valid\r\n      }\r\n    })\r\n  }\r\n\r\n  // Soumission du formulaire\r\n  submitCreateUser = async (e) => {\r\n    e.preventDefault()\r\n    \r\n    const { pseudo, password, passwordConfirm } = this.state\r\n    if (pseudo.valid === true && password.valid === true && passwordConfirm.valid === true) {\r\n\r\n      // Requête a l'api pour rechercher le pseudo\r\n      await api.getUserByPseudo(pseudo.value).then(res => {\r\n\r\n        // Je vérifie si le pseudo est déjà utilisé\r\n        // sinon on crée l'utilisateur\r\n        if (res.data.user) {\r\n          this.setState({\r\n            pseudo: {\r\n              value: pseudo.value,\r\n              warning: 'ce pseudo est déjà utilisé'\r\n            }\r\n          })\r\n        } else {\r\n\r\n          // Création de l'utilisateur\r\n          const id = (Math.floor(Math.random() * 10000000000000000) + 99999999999999999).toString();\r\n          const payload = {\r\n            id,\r\n            pseudo: pseudo.value,\r\n            password: password.value,\r\n            channels: []\r\n          }\r\n          api.registeringUser(payload).then(\r\n            (res) => {\r\n              // Envoi de l'id si l'utilisateur est créé\r\n              if (res.data.status.success) {\r\n                this.props.setToken(res.token)\r\n                this.props.setId(id)\r\n                this.props.setLoginValidity(true)\r\n              }\r\n            },\r\n            (err) => {\r\n              console.log(err)\r\n            })\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { pseudo, password, passwordConfirm } = this.state\r\n\r\n    return (\r\n      <div className=\"connection\">\r\n        <form className=\"connection-form\">\r\n          <div className=\"connectionToolHeader\">\r\n            <div className=\"connectionToolHeader-title\">\r\n              Collaps\r\n            </div>\r\n            <div className=\"connectionToolHeader-subtitle\">\r\n              Bienvenue dans l'espace d'inscription\r\n            </div>\r\n          </div>\r\n          <div className=\"connection-body scroller\">\r\n            <div className=\"connection-body-input\">\r\n              <div className=\"title\">\r\n                Pseudo {pseudo.warning ? <span className=\"title-warning\">- {pseudo.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${pseudo.warning ? 'input-warning' : ''}`}\r\n                type=\"text\"\r\n                autoFocus\r\n                required\r\n                value={pseudo.value}\r\n                onChange={this.handleChangeInputPseudo}\r\n              />\r\n              <div className=\"spacer\"></div>\r\n              <div className=\"title\">\r\n                Mot de passe {password.warning ? <span className=\"title-warning\">- {password.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${password.warning ? 'input-warning' : ''}`}\r\n                type=\"password\"\r\n                required\r\n                value={password.value}\r\n                onChange={this.handleChangeInputPassword}\r\n              />\r\n              <div className=\"spacer\"></div>\r\n              <div className=\"title\">\r\n                Confirmer le mot de passe {passwordConfirm.warning ? <span className=\"title-warning\">- {passwordConfirm.warning}</span> : null}\r\n              </div>\r\n              <input\r\n                className={`input ${passwordConfirm.warning ? 'input-warning' : ''}`}\r\n                type=\"password\"\r\n                required\r\n                value={passwordConfirm.value}\r\n                onChange={this.handleChangeInputPasswordConfirm}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"connectionToolFooter\">\r\n            <div className=\"connectionToolFooter-btn\">\r\n              <button className=\"btn-text-default\" type=\"button\" onClick={this.submitCreateUser}>\r\n                <div className=\"content\">S'inscrire</div>\r\n              </button>\r\n              <button className=\"btn-text-simple\" type=\"button\" onClick={this.props.hide}>\r\n                <div className=\"content\">Se connecter</div>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}