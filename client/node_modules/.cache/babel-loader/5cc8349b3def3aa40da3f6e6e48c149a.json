{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V7\\\\client\\\\src\\\\contexts\\\\UserContext.js\";\nimport React from 'react';\nimport api from '../api';\nexport default React.createContext({\n  user: {\n    id: \"\",\n    pseudo: \"\"\n  }\n});\nimport io from 'socket.io-client';\nconst SocketContext = React.createContext();\nexport function useSocket() {\n  return useContext(SocketContext);\n}\nexport function UserProvider({\n  id,\n  children\n}) {\n  userData = async () => {\n    // Requête a l'api pour rechercher le pseudo\n    await api.getUserById(id).then(res => {\n      const data = res.data.data;\n      return {\n        data\n      }; // Je vérifie si le pseudo a été trouver puis si le mot de passe est bon\n      // Si tout est ok je récupère l'id et je l'envoi\n\n      if (res.data.data === null) {\n        this.setState({\n          pseudo: {\n            value: pseudo.value,\n            warning: 'pseudo inconnu'\n          }\n        });\n      } else if (res.data.data.password !== password.value) {\n        this.setState({\n          password: {\n            value: password.value,\n            warning: 'mot de passe invalide'\n          }\n        });\n      } else {\n        console.log(`Bienvenue ${res.data.data.pseudo}`); // Envoi de l'id\n\n        this.props.onIdSubmit(res.data.data.id);\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: socket,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, children);\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V7/client/src/contexts/UserContext.js"],"names":["React","api","createContext","user","id","pseudo","io","SocketContext","useSocket","useContext","UserProvider","children","userData","getUserById","then","res","data","setState","value","warning","password","console","log","props","onIdSubmit","socket"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,eAAeD,KAAK,CAACE,aAAN,CAAoB;AACjCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,EAAE,EAAE,EADA;AAEJC,IAAAA,MAAM,EAAE;AAFJ;AAD2B,CAApB,CAAf;AAOA,OAAOC,EAAP,MAAe,kBAAf;AAEA,MAAMC,aAAa,GAAGP,KAAK,CAACE,aAAN,EAAtB;AAEA,OAAO,SAASM,SAAT,GAAqB;AAC1B,SAAOC,UAAU,CAACF,aAAD,CAAjB;AACD;AAED,OAAO,SAASG,YAAT,CAAsB;AAAEN,EAAAA,EAAF;AAAMO,EAAAA;AAAN,CAAtB,EAAwC;AAE7CC,EAAAA,QAAQ,GAAG,YAAY;AACvB;AACA,UAAMX,GAAG,CAACY,WAAJ,CAAgBT,EAAhB,EAAoBU,IAApB,CAAyBC,GAAG,IAAI;AACpC,YAAMC,IAAI,GAAGD,GAAG,CAACC,IAAJ,CAASA,IAAtB;AACA,aAAO;AAAEA,QAAAA;AAAF,OAAP,CAFoC,CAGpC;AACA;;AACA,UAAID,GAAG,CAACC,IAAJ,CAASA,IAAT,KAAkB,IAAtB,EAA4B;AAC1B,aAAKC,QAAL,CAAc;AACZZ,UAAAA,MAAM,EAAE;AACNa,YAAAA,KAAK,EAAEb,MAAM,CAACa,KADR;AAENC,YAAAA,OAAO,EAAE;AAFH;AADI,SAAd;AAMD,OAPD,MAOO,IAAIJ,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcI,QAAd,KAA2BA,QAAQ,CAACF,KAAxC,EAA+C;AACpD,aAAKD,QAAL,CAAc;AACZG,UAAAA,QAAQ,EAAE;AACRF,YAAAA,KAAK,EAAEE,QAAQ,CAACF,KADR;AAERC,YAAAA,OAAO,EAAE;AAFD;AADE,SAAd;AAMD,OAPM,MAOA;AACLE,QAAAA,OAAO,CAACC,GAAR,CAAa,aAAYP,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcX,MAAO,EAA9C,EADK,CAEL;;AACA,aAAKkB,KAAL,CAAWC,UAAX,CAAsBT,GAAG,CAACC,IAAJ,CAASA,IAAT,CAAcZ,EAApC;AACD;AACF,KAxBK,CAAN;AAyBC,GA3BD;;AA4BA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEqB,MAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGd,QADH,CADF;AAKD","sourcesContent":["import React from 'react'\nimport api from '../api'\n\nexport default React.createContext({\n  user: {\n    id: \"\",\n    pseudo: \"\"\n  }\n});\n\nimport io from 'socket.io-client'\n\nconst SocketContext = React.createContext()\n\nexport function useSocket() {\n  return useContext(SocketContext)\n}\n\nexport function UserProvider({ id, children }) {\n\n  userData = async () => {\n  // Requête a l'api pour rechercher le pseudo\n  await api.getUserById(id).then(res => {\n    const data = res.data.data;\n    return { data }\n    // Je vérifie si le pseudo a été trouver puis si le mot de passe est bon\n    // Si tout est ok je récupère l'id et je l'envoi\n    if (res.data.data === null) {\n      this.setState({\n        pseudo: {\n          value: pseudo.value,\n          warning: 'pseudo inconnu'\n        }\n      })\n    } else if (res.data.data.password !== password.value) {\n      this.setState({\n        password: {\n          value: password.value,\n          warning: 'mot de passe invalide'\n        }\n      })\n    } else {\n      console.log(`Bienvenue ${res.data.data.pseudo}`)\n      // Envoi de l'id\n      this.props.onIdSubmit(res.data.data.id)\n    }\n  })\n  }\n  return (\n    <UserContext.Provider value={socket}>\n      {children}\n    </UserContext.Provider>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}