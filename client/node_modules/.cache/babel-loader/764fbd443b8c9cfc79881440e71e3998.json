{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V8\\\\client\\\\src\\\\components\\\\Dashboard.js\";\nimport React, { Component } from 'react';\nimport Sidebar from './sidebar/Sidebar';\nimport Welcome from './container/Welcome';\nimport OpenConversation from './container/OpenConversation';\nimport ConversationsContext from '../contexts/ConversationsProvider';\nimport api from \"../api\"; // Main\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedConversation: null,\n      error: null,\n      isLoaded: false,\n      user: []\n    };\n  }\n\n  componentDidMount() {\n    api.getUserById(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\").then(user => {\n      this.setState({\n        isLoaded: true,\n        user: user.data.data\n      });\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      isLoaded,\n      user\n    } = this.state;\n    const selectedConversation = this.context.selectedConversation;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Sidebar, {\n      user: user,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, selectedConversation !== undefined ? selectedConversation && /*#__PURE__*/React.createElement(OpenConversation, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 39\n      }\n    }) : /*#__PURE__*/React.createElement(Sidebar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 62\n      }\n    })));\n  }\n\n}\n\nDashboard.contextType = ConversationsContext;\nexport default Dashboard;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V8/client/src/components/Dashboard.js"],"names":["React","Component","Sidebar","Welcome","OpenConversation","ConversationsContext","api","Dashboard","constructor","props","state","selectedConversation","error","isLoaded","user","componentDidMount","getUserById","then","setState","data","render","context","undefined","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AAEA,OAAOC,oBAAP,MAAiC,mCAAjC;AAEA,OAAOC,GAAP,MAAgB,QAAhB,C,CAEA;;AACA,MAAMC,SAAN,SAAwBN,SAAxB,CAAkC;AAEhCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,oBAAoB,EAAE,IADX;AAEXC,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,QAAQ,EAAE,KAHC;AAIXC,MAAAA,IAAI,EAAE;AAJK,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClBT,IAAAA,GAAG,CAACU,WAAJ,CAAgB,sCAAhB,EAAwDC,IAAxD,CACGH,IAAD,IAAU;AACR,WAAKI,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,IADE;AAEZC,QAAAA,IAAI,EAAEA,IAAI,CAACK,IAAL,CAAUA;AAFJ,OAAd;AAID,KANH,EAOGP,KAAD,IAAW;AACT,WAAKM,QAAL,CAAc;AACZL,QAAAA,QAAQ,EAAE,IADE;AAEZD,QAAAA;AAFY,OAAd;AAID,KAZH;AAcD;;AAEDQ,EAAAA,MAAM,GAAG;AACP,UAAM;AAAER,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA;AAAnB,QAA4B,KAAKJ,KAAvC;AACA,UAAMC,oBAAoB,GAAG,KAAKU,OAAL,CAAaV,oBAA1C;AAEA,wBACE,uDACE,oBAAC,OAAD;AAAS,MAAA,IAAI,EAAEG,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEIH,oBAAoB,KAAKW,SAAzB,GACEX,oBAAoB,iBAAI,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAD1B,gBACiD,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHrD,CAFF,CADF;AAYD;;AA7C+B;;AAA5BJ,S,CACGgB,W,GAAclB,oB;AA+CvB,eAAeE,SAAf","sourcesContent":["import React, { Component } from 'react'\nimport Sidebar from './sidebar/Sidebar';\n\nimport Welcome from './container/Welcome';\nimport OpenConversation from './container/OpenConversation';\n\nimport ConversationsContext from '../contexts/ConversationsProvider';\n\nimport api from \"../api\"\n\n// Main\nclass Dashboard extends Component {\n  static contextType = ConversationsContext\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedConversation: null,\n      error: null,\n      isLoaded: false,\n      user: []\n    };\n  }\n\n  componentDidMount() {\n    api.getUserById(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\").then(\n      (user) => {\n        this.setState({\n          isLoaded: true,\n          user: user.data.data\n        });\n      },\n      (error) => {\n        this.setState({\n          isLoaded: true,\n          error\n        });\n      }\n    )\n  }\n\n  render() {\n    const { error, isLoaded, user } = this.state;\n    const selectedConversation = this.context.selectedConversation\n\n    return (\n      <>\n        <Sidebar user={user} />\n        <div className=\"container\">\n          {\n            selectedConversation !== undefined ?\n              selectedConversation && <OpenConversation /> : <Sidebar />\n              \n          }\n        </div>\n      </>\n    )\n  }\n}\n\nexport default Dashboard"]},"metadata":{},"sourceType":"module"}