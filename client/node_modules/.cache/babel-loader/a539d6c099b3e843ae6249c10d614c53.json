{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V9\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { Component, useContext } from 'react';\nimport api from \"../api\";\nimport SocketContext from './SocketProvider';\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = () => {};\n\n    this.updateUserTest = async req => {\n      console.log(req);\n      const {\n        user\n      } = this.state;\n      console.log(user);\n      /*\r\n      const payload = {\r\n        id: user.id,\r\n        pseudo: user.pseudo,\r\n        password: user.password,\r\n        activity: user.activity,\r\n        conversations: user.conversations\r\n      }*/\n\n      const payload = {\n        id: \"testdgfdfg\"\n      };\n      await api.updateUser(user.id, payload).then(res => {\n        /*\r\n          this.setState({\r\n              name: '',\r\n              time: '',\r\n          })\r\n        */\n      });\n    };\n\n    this.deleteUser = () => {};\n\n    this.state = {\n      user: null,\n      isLoaded: false,\n      requesting: true,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.requesting) {\n      this.setState({\n        isLoaded: true\n      });\n      api.getUserById(this.props.id).then(user => {\n        this.setState({\n          user: user.data.data,\n          isLoaded: false,\n          requesting: false\n        });\n      }, error => {\n        this.setState({\n          isLoaded: false,\n          requesting: false,\n          error\n        });\n      });\n    }\n  }\n\n  render() {\n    const value = {\n      user: this.state.user,\n      updateUserTest: this.updateUserTest\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nUserProvider.contextType = SocketContext;\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V9/client/src/contexts/UserProvider.js"],"names":["React","Component","useContext","api","SocketContext","UserContext","createContext","useUser","UserProvider","constructor","props","createUser","updateUserTest","req","console","log","user","state","payload","id","updateUser","then","res","deleteUser","isLoaded","requesting","error","componentDidMount","setState","getUserById","data","render","value","children","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOL,UAAU,CAACG,WAAD,CAAjB;AACD;AAED,OAAO,MAAMG,YAAN,SAA2BP,SAA3B,CAAqC;AAE1CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAoCnBC,UApCmB,GAoCN,MAAM,CAElB,CAtCkB;;AAAA,SAwCnBC,cAxCmB,GAwCF,MAAOC,GAAP,IAAe;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACA,YAAM;AAAEG,QAAAA;AAAF,UAAW,KAAKC,KAAtB;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA;;;;;;;;;AASA,YAAME,OAAO,GAAG;AACdC,QAAAA,EAAE,EAAE;AADU,OAAhB;AAIA,YAAMhB,GAAG,CAACiB,UAAJ,CAAeJ,IAAI,CAACG,EAApB,EAAwBD,OAAxB,EAAiCG,IAAjC,CAAsCC,GAAG,IAAI;AACjD;;;;;;AAMD,OAPK,CAAN;AASD,KAlEkB;;AAAA,SAoEnBC,UApEmB,GAoEN,MAAM,CAElB,CAtEkB;;AAEjB,SAAKN,KAAL,GAAa;AACXD,MAAAA,IAAI,EAAE,IADK;AAEXQ,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKV,KAAL,CAAWQ,UAAf,EAA2B;AACzB,WAAKG,QAAL,CAAc;AACZJ,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGArB,MAAAA,GAAG,CAAC0B,WAAJ,CAAgB,KAAKnB,KAAL,CAAWS,EAA3B,EAA+BE,IAA/B,CACGL,IAAD,IAAU;AAER,aAAKY,QAAL,CAAc;AACZZ,UAAAA,IAAI,EAAEA,IAAI,CAACc,IAAL,CAAUA,IADJ;AAEZN,UAAAA,QAAQ,EAAE,KAFE;AAGZC,UAAAA,UAAU,EAAE;AAHA,SAAd;AAMD,OATH,EAUGC,KAAD,IAAW;AACT,aAAKE,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE,KADE;AAEZC,UAAAA,UAAU,EAAE,KAFA;AAGZC,UAAAA;AAHY,SAAd;AAKD,OAhBH;AAkBD;AACF;;AAsCDK,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG;AACZhB,MAAAA,IAAI,EAAE,KAAKC,KAAL,CAAWD,IADL;AAEZJ,MAAAA,cAAc,EAAE,KAAKA;AAFT,KAAd;AAKA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEoB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKtB,KAAL,CAAWuB,QADd,CADF;AAKD;;AArFyC;AAA/BzB,Y,CACJ0B,W,GAAc9B,a;AAuFvB,eAAeC,WAAf","sourcesContent":["import React, { Component, useContext } from 'react'\r\n\r\nimport api from \"../api\"\r\n\r\nimport SocketContext from './SocketProvider';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport class UserProvider extends Component {\r\n  static contextType = SocketContext\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      isLoaded: false,\r\n      requesting: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.requesting) {\r\n      this.setState({\r\n        isLoaded: true\r\n      });\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n\r\n          this.setState({\r\n            user: user.data.data,\r\n            isLoaded: false,\r\n            requesting: false\r\n          });\r\n          \r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: false,\r\n            requesting: false,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createUser = () => {\r\n\r\n  }\r\n\r\n  updateUserTest = async (req) => {\r\n    console.log(req)\r\n    const { user } = this.state\r\n    console.log(user)\r\n    /*\r\n    const payload = {\r\n      id: user.id,\r\n      pseudo: user.pseudo,\r\n      password: user.password,\r\n      activity: user.activity,\r\n      conversations: user.conversations\r\n    }*/\r\n\r\n    const payload = {\r\n      id: \"testdgfdfg\"\r\n    }\r\n\r\n    await api.updateUser(user.id, payload).then(res => {\r\n      /*\r\n        this.setState({\r\n            name: '',\r\n            time: '',\r\n        })\r\n      */\r\n    })\r\n    \r\n  }\r\n\r\n  deleteUser = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      user: this.state.user,\r\n      updateUserTest: this.updateUserTest\r\n    }\r\n\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContext"]},"metadata":{},"sourceType":"module"}