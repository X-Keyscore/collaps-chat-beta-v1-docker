{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\collaps-chat\\\\dev\\\\Beta\\\\V1\\\\client\\\\src\\\\components\\\\sidebar\\\\NewContact.js\";\nimport React, { useState } from 'react';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nfunction NewContact({\n  isShowing,\n  hide,\n  storageLocal\n}) {\n  const {\n    channels,\n    createChannel,\n    setChannels,\n    setSelectedChannel\n  } = useChannels(); // Création d'un \"useState\" pour stocker l'id\n\n  const [recipientId, setRecipientId] = useState({\n    value: \"\",\n    warning: \"\"\n  });\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n    const recipient = {\n      id: recipientId.value\n    }; // Je teste si la valeur est bien celle d'un id\n\n    if (recipient.id.length === 0) return setRecipientId({\n      value: \"\",\n      warning: \"Il faut entrer un id\"\n    }); // Je teste si la valeur est bien celle d'un id\n\n    if (recipient.id.length !== 18 && !/^[0-9]*$/.test(recipient.id)) return setRecipientId({\n      value: \"\",\n      warning: \"Ceci n'est pas un id valide\"\n    }); // Je test si l'id n'est pas celui du client\n\n    if (recipient.id === storageLocal.id) return setRecipientId({\n      value: \"\",\n      warning: \"Tu ne peux pas t'ajouter\"\n    }); // Je test si le contact n'est pas déjà ajouter\n\n    var valid = true;\n    channels.filter(channel => channel.type === \"private\").forEach(channel => {\n      if (channel.recipients[0].id === recipient.id) valid = false;\n    });\n    if (valid === false) return setRecipientId({\n      value: \"\",\n      warning: \"Ce contact existe déjà\"\n    });\n    const newChannel = {\n      id: (Math.floor(Math.random() * 10000000000000000) + 99999999999999999).toString(),\n      type: \"private\",\n      recipients: [storageLocal.id, recipient.id],\n      messages: []\n    }; // Créaction du channel\n\n    const res = await createChannel({\n      client: {\n        id: storageLocal.id,\n        token: storageLocal.token\n      },\n      recipient: {\n        id: recipient.id\n      },\n      channel: newChannel\n    });\n    if (res.status.success === false) return setRecipientId({\n      value: \"\",\n      warning: res.status.msg\n    });\n    console.log(res);\n    setChannels(channels => [...channels, {\n      id: newChannel.id,\n      type: newChannel.type,\n      recipients: [{\n        id: recipient.id\n      }],\n      messages: []\n    }]);\n    setSelectedChannel({\n      id: newChannel.id,\n      type: newChannel.type,\n      recipients: [{\n        id: recipient.id\n      }],\n      messages: [],\n      key: channels.length === 0 ? 0 : channels.length - 1\n    });\n    setRecipientId({\n      value: \"\",\n      warning: \"\"\n    });\n    hide();\n  }\n\n  return isShowing ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"createChannelPrivate\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createChannelPrivate-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }, \"Ajouter un contact\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createChannelPrivate-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 6\n    }\n  }, recipientId.warning ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title-warning\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 30\n    }\n  }, recipientId.warning, \" \") : null, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"text\",\n    placeholder: \"ID\",\n    value: recipientId.value,\n    onChange: e => setRecipientId({\n      value: e.target.value,\n      warning: \"\"\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"createChannelPrivate-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-text-small\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }\n  }, \"Ajouter\")))) : null;\n}\n\nexport default NewContact;","map":{"version":3,"sources":["C:/Users/anton/Desktop/collaps-chat/dev/Beta/V1/client/src/components/sidebar/NewContact.js"],"names":["React","useState","useUser","useChannels","NewContact","isShowing","hide","storageLocal","channels","createChannel","setChannels","setSelectedChannel","recipientId","setRecipientId","value","warning","handleSubmit","e","preventDefault","recipient","id","length","test","valid","filter","channel","type","forEach","recipients","newChannel","Math","floor","random","toString","messages","res","client","token","status","success","msg","console","log","key","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useUser } from '../../contexts/UserProvider';\r\nimport { useChannels } from '../../contexts/ChannelsProvider';\r\n\r\nfunction NewContact({ isShowing, hide, storageLocal }) {\r\n\tconst { channels, createChannel, setChannels, setSelectedChannel } = useChannels()\r\n\r\n\t// Création d'un \"useState\" pour stocker l'id\r\n\tconst [recipientId, setRecipientId] = useState({\r\n\t\tvalue: \"\",\r\n\t\twarning: \"\"\r\n\t})\r\n\r\n\tasync function handleSubmit(e) {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst recipient = {\r\n\t\t\tid: recipientId.value\r\n\t\t}\r\n\r\n\t\t// Je teste si la valeur est bien celle d'un id\r\n\t\tif (recipient.id.length === 0) return setRecipientId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Il faut entrer un id\"\r\n\t\t})\r\n\r\n\t\t// Je teste si la valeur est bien celle d'un id\r\n\t\tif (recipient.id.length !== 18 && !/^[0-9]*$/.test(recipient.id)) return setRecipientId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Ceci n'est pas un id valide\"\r\n\t\t})\r\n\r\n\t\t// Je test si l'id n'est pas celui du client\r\n\t\tif (recipient.id === storageLocal.id) return setRecipientId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Tu ne peux pas t'ajouter\"\r\n\t\t})\r\n\r\n\t\t// Je test si le contact n'est pas déjà ajouter\r\n\t\tvar valid = true\r\n\t\tchannels.filter(channel => channel.type === \"private\").forEach(channel => {\r\n\t\t\tif (channel.recipients[0].id === recipient.id) valid = false;\r\n\t\t});\r\n\t\tif (valid === false) return setRecipientId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"Ce contact existe déjà\"\r\n\t\t});\r\n\t\t\r\n\t\tconst newChannel = {\r\n\t\t\tid: (Math.floor(Math.random() * 10000000000000000) + 99999999999999999).toString(),\r\n\t\t\ttype: \"private\",\r\n\t\t\trecipients: [storageLocal.id, recipient.id],\r\n\t\t\tmessages: []\r\n\t\t}\r\n\r\n\t\t// Créaction du channel\r\n\t\tconst res = await createChannel({\r\n\t\t\tclient: {\r\n\t\t\t\tid: storageLocal.id,\r\n\t\t\t\ttoken: storageLocal.token\r\n\t\t\t},\r\n\t\t\trecipient: {\r\n\t\t\t\tid: recipient.id\r\n\t\t\t},\r\n\t\t\tchannel: newChannel\r\n\t\t})\r\n\r\n\t\tif (res.status.success === false) return setRecipientId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: res.status.msg\r\n\t\t});\r\n\t\tconsole.log(res)\r\n\r\n\t\tsetChannels(channels => [...channels, {\r\n\t\t\tid: newChannel.id,\r\n\t\t\ttype: newChannel.type,\r\n\t\t\trecipients: [{\r\n\t\t\t\tid: recipient.id\r\n\t\t\t}],\r\n\t\t\tmessages: []\r\n\t\t}]);\r\n\r\n\t\tsetSelectedChannel({\r\n\t\t\tid: newChannel.id,\r\n\t\t\ttype: newChannel.type,\r\n\t\t\trecipients: [{\r\n\t\t\t\tid: recipient.id\r\n\t\t\t}],\r\n\t\t\tmessages: [],\r\n\t\t\tkey: channels.length === 0 ? 0 : channels.length - 1\r\n\t\t})\r\n\r\n\t\tsetRecipientId({\r\n\t\t\tvalue: \"\",\r\n\t\t\twarning: \"\"\r\n\t\t})\r\n\t\thide()\r\n\r\n\t}\r\n\r\n\treturn (\r\n\t\tisShowing\r\n\t\t\t?\r\n\t\t\t<>\r\n\t\t\t\t<form className=\"createChannelPrivate\" onSubmit={handleSubmit}>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-header\">\r\n\t\t\t\t\t\t<div className=\"title\">Ajouter un contact</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-body\">\r\n\t\t\t\t\t\t{recipientId.warning ? <div className=\"title-warning\">{recipientId.warning} </div> : null}\r\n\t\t\t\t\t\t<input className=\"input\" type=\"text\" placeholder=\"ID\"\r\n\t\t\t\t\t\t\tvalue={recipientId.value}\r\n\t\t\t\t\t\t\tonChange={e => setRecipientId({\r\n\t\t\t\t\t\t\t\tvalue: e.target.value,\r\n\t\t\t\t\t\t\t\twarning: \"\"\r\n\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"createChannelPrivate-footer\">\r\n\t\t\t\t\t\t<button className=\"btn-text-small\" type=\"submit\">Ajouter</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</>\r\n\t\t\t: null\r\n\t)\r\n}\r\nexport default NewContact;"]},"metadata":{},"sourceType":"module"}