{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V9\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { Component, useContext } from 'react';\nimport api from \"../api\";\nimport SocketContext from './SocketProvider';\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = () => {};\n\n    this.updateUser = req => {\n      console.log(req);\n      const {\n        user\n      } = this.state;\n      console.log(user);\n      /*\r\n      const payload = {\r\n        id: user.id,\r\n        pseudo: user.pseudo,\r\n        password: user.password,\r\n        activity: user.activity,\r\n        conversations: user.conversations\r\n      }\r\n        await api.updateUser(user.id, payload).then(res => {\r\n        \r\n          this.setState({\r\n              name: '',\r\n              time: '',\r\n          })\r\n        \r\n      })*/\n    };\n\n    this.deleteUser = () => {};\n\n    this.updateUserConversations = async req => {\n      api.getAllUsers(this.props.id).then(user => {\n        this.setState({\n          user: user.data.data,\n          loading: false,\n          requesting: false\n        });\n      }, error => {\n        this.setState({\n          loading: true,\n          requesting: false,\n          error\n        });\n      });\n      console.log(req);\n      const payload = {\n        conversations: [\"test\"]\n      };\n      await api.updateUserConversations(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\", payload).then(res => {\n        window.alert(`Movie updated successfully`);\n      });\n    };\n\n    this.state = {\n      user: null,\n      error: null,\n      loading: Boolean,\n      requesting: Boolean\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.requesting) {\n      this.setState({\n        loading: true,\n        requesting: true\n      });\n      api.getUserById(this.props.id).then(user => {\n        this.setState({\n          user: user.data.data,\n          loading: false,\n          requesting: false\n        });\n      }, error => {\n        this.setState({\n          loading: true,\n          requesting: false,\n          error\n        });\n      });\n    }\n  }\n\n  render() {\n    const value = {\n      user: this.state.user,\n      updateUserConversations: this.updateUserConversations,\n      loading: this.state.loading\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nUserProvider.contextType = SocketContext;\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V9/client/src/contexts/UserProvider.js"],"names":["React","Component","useContext","api","SocketContext","UserContext","createContext","useUser","UserProvider","constructor","props","createUser","updateUser","req","console","log","user","state","deleteUser","updateUserConversations","getAllUsers","id","then","setState","data","loading","requesting","error","payload","conversations","res","window","alert","Boolean","componentDidMount","getUserById","render","value","children","contextType"],"mappings":"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","sourcesContent":["import React, { Component, useContext } from 'react'\r\n\r\nimport api from \"../api\"\r\n\r\nimport SocketContext from './SocketProvider';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport class UserProvider extends Component {\r\n  static contextType = SocketContext\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      error: null,\r\n      loading: Boolean,\r\n      requesting: Boolean\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.requesting) {\r\n      this.setState({\r\n        loading: true,\r\n        requesting: true\r\n      });\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n          this.setState({\r\n            user: user.data.data,\r\n            loading: false,\r\n            requesting: false\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            loading: true,\r\n            requesting: false,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createUser = () => {\r\n\r\n  }\r\n\r\n  updateUser = (req) => {\r\n    console.log(req)\r\n    const { user } = this.state\r\n    console.log(user)\r\n\r\n    /*\r\n    const payload = {\r\n      id: user.id,\r\n      pseudo: user.pseudo,\r\n      password: user.password,\r\n      activity: user.activity,\r\n      conversations: user.conversations\r\n    }\r\n\r\n    await api.updateUser(user.id, payload).then(res => {\r\n      \r\n        this.setState({\r\n            name: '',\r\n            time: '',\r\n        })\r\n      \r\n    })*/\r\n\r\n  }\r\n\r\n  deleteUser = () => {\r\n\r\n  }\r\n\r\n  updateUserConversations = async (req) => {\r\n    api.getAllUsers(this.props.id).then(\r\n      (user) => {\r\n        this.setState({\r\n          user: user.data.data,\r\n          loading: false,\r\n          requesting: false\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          loading: true,\r\n          requesting: false,\r\n          error\r\n        });\r\n      }\r\n    )\r\n\r\n    console.log(req)\r\n    const payload = { conversations: [ \"test\" ] }\r\n\r\n    await api.updateUserConversations(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\", payload).then(res => {\r\n      window.alert(`Movie updated successfully`)\r\n    })\r\n\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      user: this.state.user,\r\n      updateUserConversations: this.updateUserConversations,\r\n      loading: this.state.loading\r\n    }\r\n\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContext"]},"metadata":{},"sourceType":"module"}