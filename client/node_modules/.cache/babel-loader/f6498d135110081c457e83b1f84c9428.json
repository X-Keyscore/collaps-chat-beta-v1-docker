{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V9\\\\client\\\\src\\\\components\\\\sidebar\\\\ChannelsContacts.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from '../../api';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\nexport default function ChannelsContacts() {\n  const [channels, setChannels] = useState([]);\n  const {\n    setSelectedChannel\n  } = useChannels();\n  const {\n    user\n  } = useUser();\n  useEffect(() => {\n    // Je teste si les données utilisateur sont chargées\n    if (user !== null) {\n      // Je test si tous les contact sont chargés pour evité la boucle infini\n      if (channels.length !== user.channels.length) {\n        user.channels.filter(channel => channel.type === \"private\").map(channel => api.getUserById(channel.recipients.id).then(channelRecipient => {\n          channelRecipient = channelRecipient.data.data;\n          setChannels([...channels, {\n            channel,\n            channelRecipient\n          }]);\n        }, error => {\n          console.log(error);\n        }));\n      }\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, channels.map(channel => /*#__PURE__*/React.createElement(\"button\", {\n    key: channel.channel.singleId,\n    className: `sidebar-body-contact ${channel.channel.selected ? 'selected' : ''}`,\n    onClick: () => setSelectedChannel(channel.channel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"40\",\n    height: \"32\",\n    viewBox: \"0 0 40 32\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"foreignObject\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"32\",\n    height: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n    \"aria-hidden\": \"true\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"online\",\n    fill: \"currentColor\",\n    width: \"10\",\n    height: \"10\",\n    x: \"22\",\n    y: \"22\",\n    rx: \"15\",\n    ry: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, channel.channelRecipient.pseudo)))))));\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V9/client/src/components/sidebar/ChannelsContacts.js"],"names":["React","useState","useEffect","api","useUser","useChannels","ChannelsContacts","channels","setChannels","setSelectedChannel","user","length","filter","channel","type","map","getUserById","recipients","id","then","channelRecipient","data","error","console","log","singleId","selected","pseudo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport api from '../../api';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function ChannelsContacts() {\n  const [channels, setChannels] = useState([]);\n  const { setSelectedChannel } = useChannels()\n  const { user } = useUser()\n\n  useEffect(() => {\n    // Je teste si les données utilisateur sont chargées\n    if (user !== null) {\n      // Je test si tous les contact sont chargés pour evité la boucle infini\n      if (channels.length !== user.channels.length) {\n        user.channels.filter(channel => channel.type === \"private\").map((channel) => (\n          api.getUserById(channel.recipients.id).then(\n            (channelRecipient) => {\n              channelRecipient = channelRecipient.data.data\n              setChannels([...channels, { channel, channelRecipient }])\n            },\n            (error) => {\n              console.log(error)\n            }\n          )\n        ))\n      }\n    }\n  });\n\n  return (\n    <>\n      { channels.map((channel) => (\n        <button\n          key={channel.channel.singleId}\n          className={`sidebar-body-contact ${channel.channel.selected ? 'selected' : ''}`}\n          onClick={() => setSelectedChannel(channel.channel)}\n        >\n          <div className=\"sidebar-body-contact-content\">\n            <div className=\"sidebar-body-contact-content-avatar\">\n\n              <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n                <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                  <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n                </foreignObject>\n                <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n              </svg>\n\n            </div>\n            <div className=\"sidebar-body-contact-content-text\">\n              <div className=\"username\">\n                <div className=\"overflow\">\n                  {channel.channelRecipient.pseudo}\n                </div>\n              </div>\n            </div>\n          </div>\n        </button>\n      ))\n      }\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}