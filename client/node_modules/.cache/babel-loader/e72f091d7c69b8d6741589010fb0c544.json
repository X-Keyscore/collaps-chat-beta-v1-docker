{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\collaps-chat\\\\dev\\\\Beta\\\\V1\\\\client\\\\src\\\\components\\\\sidebar\\\\ChannelsGroupes.js\";\nimport React from 'react';\nimport { useChannels } from '../../contexts/ChannelsProvider';\nimport { useUser } from '../../contexts/UserProvider';\nexport default function ChannelsContacts() {\n  const {\n    setSelectedChannel\n  } = useChannels();\n  const {\n    client\n  } = useUser();\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, \"Aucun groupe\");\n  /*\n  return (\n  <>\n    { client == null ? null : client.channels.filter(channel => channel.type === \"groupe\").map((channel) => (\n      <button\n        key={channel.id}\n        className={`sidebar-body-contact ${channel.selected ? 'selected' : ''}`}\n        onClick={() => setSelectedChannel(channel)}\n      >\n        <div className=\"sidebar-body-contact-content\">\n          <div className=\"sidebar-body-contact-content-avatar\">\n             <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n              <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n              </foreignObject>\n              <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n            </svg>\n           </div>\n          <div className=\"sidebar-body-contact-content-text\">\n            <div className=\"username\">\n              <div className=\"overflow\">\n                {channel.recipients.map(r => r.pseudo).join(', ')}\n              </div>\n            </div>\n          </div>\n        </div>\n      </button>\n    ))\n    }\n  </>\n  )*/\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/collaps-chat/dev/Beta/V1/client/src/components/sidebar/ChannelsGroupes.js"],"names":["React","useChannels","useUser","ChannelsContacts","setSelectedChannel","client"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AACA,SAASC,OAAT,QAAwB,6BAAxB;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACzC,QAAM;AAAEC,IAAAA;AAAF,MAAyBH,WAAW,EAA1C;AACA,QAAM;AAAEI,IAAAA;AAAF,MAAaH,OAAO,EAA1B;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCD","sourcesContent":["import React from 'react'\nimport { useChannels } from '../../contexts/ChannelsProvider';\nimport { useUser } from '../../contexts/UserProvider';\n\nexport default function ChannelsContacts() {\n  const { setSelectedChannel } = useChannels()\n  const { client } = useUser()\n\n  return (\n    <div className=\"sidebar-body-info\">Aucun groupe</div>\n  );\n  /*\nreturn (\n  <>\n    { client == null ? null : client.channels.filter(channel => channel.type === \"groupe\").map((channel) => (\n      <button\n        key={channel.id}\n        className={`sidebar-body-contact ${channel.selected ? 'selected' : ''}`}\n        onClick={() => setSelectedChannel(channel)}\n      >\n        <div className=\"sidebar-body-contact-content\">\n          <div className=\"sidebar-body-contact-content-avatar\">\n\n            <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n              <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n              </foreignObject>\n              <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n            </svg>\n\n          </div>\n          <div className=\"sidebar-body-contact-content-text\">\n            <div className=\"username\">\n              <div className=\"overflow\">\n                {channel.recipients.map(r => r.pseudo).join(', ')}\n              </div>\n            </div>\n          </div>\n        </div>\n      </button>\n    ))\n    }\n  </>\n)*/\n}\n"]},"metadata":{},"sourceType":"module"}