{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V7\\\\client\\\\src\\\\components\\\\Counter.js\";\nimport React, { useContext, useState } from 'react';\nimport { CounterContext } from '../contexts/CounterContext';\nimport LoadingText from './atoms/LoadingText';\n\nconst Counter = () => {\n  const [counter, actions] = useContext(CounterContext);\n  const [loading, setLoading] = useState({\n    up: false,\n    down: false,\n    reset: false\n  });\n\n  const handleAction = action => {\n    if (action === actions.up) {\n      setLoading(prev => ({ ...prev,\n        up: true\n      }));\n      action().finally(() => setLoading(prev => ({ ...prev,\n        up: false\n      })));\n    }\n\n    if (action === actions.down) {\n      setLoading(prev => ({ ...prev,\n        down: true\n      }));\n      action().finally(() => setLoading(prev => ({ ...prev,\n        down: false\n      })));\n    }\n\n    if (action === actions.reset) {\n      setLoading(prev => ({ ...prev,\n        reset: true\n      }));\n      action().finally(() => setLoading(prev => ({ ...prev,\n        reset: false\n      })));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }, \"Count: \", counter.count), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAction(actions.up),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadingText, {\n    isLoading: loading.up,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, \"Up\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAction(actions.down),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadingText, {\n    isLoading: loading.down,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, \"Down\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleAction(actions.reset),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(LoadingText, {\n    isLoading: loading.reset,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Reset\")));\n};\n\nexport default Counter;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V7/client/src/components/Counter.js"],"names":["React","useContext","useState","CounterContext","LoadingText","Counter","counter","actions","loading","setLoading","up","down","reset","handleAction","action","prev","finally","count"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAASC,cAAT,QAA+B,4BAA/B;AACA,OAAOC,WAAP,MAAwB,qBAAxB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AACpB,QAAM,CAACC,OAAD,EAAUC,OAAV,IAAqBN,UAAU,CAACE,cAAD,CAArC;AACA,QAAM,CAACK,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC;AACrCQ,IAAAA,EAAE,EAAE,KADiC;AAErCC,IAAAA,IAAI,EAAE,KAF+B;AAGrCC,IAAAA,KAAK,EAAE;AAH8B,GAAD,CAAtC;;AAMA,QAAMC,YAAY,GAAGC,MAAM,IAAI;AAC7B,QAAIA,MAAM,KAAKP,OAAO,CAACG,EAAvB,EAA2B;AACzBD,MAAAA,UAAU,CAACM,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWL,QAAAA,EAAE,EAAE;AAAf,OAAL,CAAL,CAAV;AACAI,MAAAA,MAAM,GAAGE,OAAT,CAAiB,MAAMP,UAAU,CAACM,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWL,QAAAA,EAAE,EAAE;AAAf,OAAL,CAAL,CAAjC;AACD;;AACD,QAAII,MAAM,KAAKP,OAAO,CAACI,IAAvB,EAA6B;AAC3BF,MAAAA,UAAU,CAACM,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWJ,QAAAA,IAAI,EAAE;AAAjB,OAAL,CAAL,CAAV;AACAG,MAAAA,MAAM,GAAGE,OAAT,CAAiB,MAAMP,UAAU,CAACM,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWJ,QAAAA,IAAI,EAAE;AAAjB,OAAL,CAAL,CAAjC;AACD;;AACD,QAAIG,MAAM,KAAKP,OAAO,CAACK,KAAvB,EAA8B;AAC5BH,MAAAA,UAAU,CAACM,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWH,QAAAA,KAAK,EAAE;AAAlB,OAAL,CAAL,CAAV;AACAE,MAAAA,MAAM,GAAGE,OAAT,CAAiB,MAAMP,UAAU,CAACM,IAAI,KAAK,EAAE,GAAGA,IAAL;AAAWH,QAAAA,KAAK,EAAE;AAAlB,OAAL,CAAL,CAAjC;AACD;AACF,GAbD;;AAeA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYN,OAAO,CAACW,KAApB,CADF,eAEE;AAAQ,IAAA,OAAO,EAAE,MAAMJ,YAAY,CAACN,OAAO,CAACG,EAAT,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEF,OAAO,CAACE,EAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CAFF,eAKE;AAAQ,IAAA,OAAO,EAAE,MAAMG,YAAY,CAACN,OAAO,CAACI,IAAT,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEH,OAAO,CAACG,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CALF,eAQE;AAAQ,IAAA,OAAO,EAAE,MAAME,YAAY,CAACN,OAAO,CAACK,KAAT,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,SAAS,EAAEJ,OAAO,CAACI,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CARF,CADF;AAcD,CArCD;;AAuCA,eAAeP,OAAf","sourcesContent":["\r\nimport React, { useContext, useState } from 'react';\r\n\r\nimport { CounterContext } from '../contexts/CounterContext';\r\nimport LoadingText from './atoms/LoadingText';\r\n\r\nconst Counter = () => {\r\n  const [counter, actions] = useContext(CounterContext);\r\n  const [loading, setLoading] = useState({\r\n    up: false,\r\n    down: false,\r\n    reset: false\r\n  });\r\n\r\n  const handleAction = action => {\r\n    if (action === actions.up) {\r\n      setLoading(prev => ({ ...prev, up: true }));\r\n      action().finally(() => setLoading(prev => ({ ...prev, up: false })));\r\n    }\r\n    if (action === actions.down) {\r\n      setLoading(prev => ({ ...prev, down: true }));\r\n      action().finally(() => setLoading(prev => ({ ...prev, down: false })));\r\n    }\r\n    if (action === actions.reset) {\r\n      setLoading(prev => ({ ...prev, reset: true }));\r\n      action().finally(() => setLoading(prev => ({ ...prev, reset: false })));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <h3>Count: {counter.count}</h3>\r\n      <button onClick={() => handleAction(actions.up)}>\r\n        <LoadingText isLoading={loading.up}>Up</LoadingText>\r\n      </button>\r\n      <button onClick={() => handleAction(actions.down)}>\r\n        <LoadingText isLoading={loading.down}>Down</LoadingText>\r\n      </button>\r\n      <button onClick={() => handleAction(actions.reset)}>\r\n        <LoadingText isLoading={loading.reset}>Reset</LoadingText>\r\n      </button>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n"]},"metadata":{},"sourceType":"module"}