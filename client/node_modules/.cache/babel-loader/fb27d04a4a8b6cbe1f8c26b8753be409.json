{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V9\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { Component, useContext } from 'react';\nimport api from \"../api\";\nimport SocketContext from './SocketProvider';\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = () => {\n      /*\r\n      const socket = this.context\r\n      console.log(socket)\r\n      if (socket !== undefined) {\r\n        const socket = this.context\r\n        socket.on('user-disconnected', id => {\r\n          console.log(name)\r\n        })\r\n      }*/\n    };\n\n    this.updateUser = async () => {\n      const {\n        id,\n        name,\n        rating,\n        time\n      } = this.state;\n      const arrayTime = time.split('/');\n      const payload = {\n        name,\n        rating,\n        time: arrayTime\n      };\n      await api.updateMovieById(id, payload).then(res => {\n        window.alert(`Movie updated successfully`);\n        this.setState({\n          name: '',\n          time: ''\n        });\n      });\n    };\n\n    this.deleteUser = () => {};\n\n    this.state = {\n      user: null,\n      isLoaded: false,\n      requesting: true,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.requesting) {\n      this.setState({\n        isLoaded: true\n      });\n      api.getUserById(this.props.id).then(user => {\n        user.data.data.conversations.forEach(element => console.log(element));\n        /*\r\n        this.setState({\r\n          user: user.data.data,\r\n          isLoaded: false,\r\n          requesting: false\r\n        });\r\n        */\n      }, error => {\n        this.setState({\n          isLoaded: false,\n          requesting: false,\n          error\n        });\n      });\n    }\n  }\n\n  render() {\n    const value = {\n      user: this.state.user\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nUserProvider.contextType = SocketContext;\nexport default UserContext;\n/*\r\n  componentDidMount() {\r\n    if (this.state.requesting) {\r\n      this.setState({\r\n        isLoaded: true\r\n      });\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n          this.setState({\r\n            user: user.data.data,\r\n            isLoaded: false,\r\n            requesting: false\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: false,\r\n            requesting: false,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n*/","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V9/client/src/contexts/UserProvider.js"],"names":["React","Component","useContext","api","SocketContext","UserContext","createContext","useUser","UserProvider","constructor","props","createUser","updateUser","id","name","rating","time","state","arrayTime","split","payload","updateMovieById","then","res","window","alert","setState","deleteUser","user","isLoaded","requesting","error","componentDidMount","getUserById","data","conversations","forEach","element","console","log","render","value","children","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOL,UAAU,CAACG,WAAD,CAAjB;AACD;AAED,OAAO,MAAMG,YAAN,SAA2BP,SAA3B,CAAqC;AAE1CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAsCnBC,UAtCmB,GAsCN,MAAM;AACjB;;;;;;;;;AASD,KAhDkB;;AAAA,SAiDnBC,UAjDmB,GAiDN,YAAY;AACvB,YAAM;AAAEC,QAAAA,EAAF;AAAMC,QAAAA,IAAN;AAAYC,QAAAA,MAAZ;AAAoBC,QAAAA;AAApB,UAA6B,KAAKC,KAAxC;AACA,YAAMC,SAAS,GAAGF,IAAI,CAACG,KAAL,CAAW,GAAX,CAAlB;AACA,YAAMC,OAAO,GAAG;AAAEN,QAAAA,IAAF;AAAQC,QAAAA,MAAR;AAAgBC,QAAAA,IAAI,EAAEE;AAAtB,OAAhB;AAEA,YAAMf,GAAG,CAACkB,eAAJ,CAAoBR,EAApB,EAAwBO,OAAxB,EAAiCE,IAAjC,CAAsCC,GAAG,IAAI;AAC/CC,QAAAA,MAAM,CAACC,KAAP,CAAc,4BAAd;AACA,aAAKC,QAAL,CAAc;AACVZ,UAAAA,IAAI,EAAE,EADI;AAEVE,UAAAA,IAAI,EAAE;AAFI,SAAd;AAIH,OANK,CAAN;AAOD,KA7DkB;;AAAA,SA+DnBW,UA/DmB,GA+DN,MAAM,CAElB,CAjEkB;;AAEjB,SAAKV,KAAL,GAAa;AACXW,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKf,KAAL,CAAWa,UAAf,EAA2B;AACzB,WAAKJ,QAAL,CAAc;AACZG,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGA1B,MAAAA,GAAG,CAAC8B,WAAJ,CAAgB,KAAKvB,KAAL,CAAWG,EAA3B,EAA+BS,IAA/B,CACGM,IAAD,IAAU;AAERA,QAAAA,IAAI,CAACM,IAAL,CAAUA,IAAV,CAAeC,aAAf,CAA6BC,OAA7B,CAAqCC,OAAO,IAAIC,OAAO,CAACC,GAAR,CAAYF,OAAZ,CAAhD;AACA;;;;;;;AAOD,OAXH,EAYGN,KAAD,IAAW;AACT,aAAKL,QAAL,CAAc;AACZG,UAAAA,QAAQ,EAAE,KADE;AAEZC,UAAAA,UAAU,EAAE,KAFA;AAGZC,UAAAA;AAHY,SAAd;AAKD,OAlBH;AAoBD;AACF;;AA+BDS,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG;AACZb,MAAAA,IAAI,EAAE,KAAKX,KAAL,CAAWW;AADL,KAAd;AAIA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEa,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK/B,KAAL,CAAWgC,QADd,CADF;AAKD;;AA/EyC;AAA/BlC,Y,CACJmC,W,GAAcvC,a;AAiFvB,eAAeC,WAAf;AAIA","sourcesContent":["import React, { Component, useContext } from 'react'\r\n\r\nimport api from \"../api\"\r\n\r\nimport SocketContext from './SocketProvider';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport class UserProvider extends Component {\r\n  static contextType = SocketContext\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      isLoaded: false,\r\n      requesting: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.requesting) {\r\n      this.setState({\r\n        isLoaded: true\r\n      });\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n          \r\n          user.data.data.conversations.forEach(element => console.log(element));\r\n          /*\r\n          this.setState({\r\n            user: user.data.data,\r\n            isLoaded: false,\r\n            requesting: false\r\n          });\r\n          */\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: false,\r\n            requesting: false,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createUser = () => {\r\n    /*\r\n    const socket = this.context\r\n    console.log(socket)\r\n    if (socket !== undefined) {\r\n      const socket = this.context\r\n      socket.on('user-disconnected', id => {\r\n        console.log(name)\r\n      })\r\n    }*/\r\n  }\r\n  updateUser = async () => {\r\n    const { id, name, rating, time } = this.state\r\n    const arrayTime = time.split('/')\r\n    const payload = { name, rating, time: arrayTime }\r\n\r\n    await api.updateMovieById(id, payload).then(res => {\r\n        window.alert(`Movie updated successfully`)\r\n        this.setState({\r\n            name: '',\r\n            time: '',\r\n        })\r\n    })\r\n  }\r\n\r\n  deleteUser = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      user: this.state.user\r\n    }\r\n\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContext\r\n\r\n\r\n  \r\n/*\r\n  componentDidMount() {\r\n    if (this.state.requesting) {\r\n      this.setState({\r\n        isLoaded: true\r\n      });\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n          this.setState({\r\n            user: user.data.data,\r\n            isLoaded: false,\r\n            requesting: false\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: false,\r\n            requesting: false,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n*/"]},"metadata":{},"sourceType":"module"}