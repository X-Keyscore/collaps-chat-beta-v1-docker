{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\Beta\\\\V1\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from'react';import api from\"../api\";var UserContext=React.createContext();export function useUser(){return useContext(UserContext);}export function UserProvider(_ref){var id=_ref.id,children=_ref.children;var _useState=useState(null),_useState2=_slicedToArray(_useState,2),client=_useState2[0],setClient=_useState2[1];useEffect(function(){// Si le client n'est pas null pas besoin de mise a jour\nif(client===null){// Je récupère les données du client grace à l'api\napi.getUserById(id).then(function(user){return setClient(user.data.data);});}},[id,client]);function updateUser(id,body){var payload=body;api.updateUserById(id,payload);}var value={client:client,setClient:setClient,updateUser:updateUser};return/*#__PURE__*/React.createElement(UserContext.Provider,{value:value},children);}export default UserContext;// https://dmitripavlutin.com/react-usestate-hook-guide/","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/Beta/V1/client/src/contexts/UserProvider.js"],"names":["React","useContext","useState","useEffect","api","UserContext","createContext","useUser","UserProvider","id","children","client","setClient","getUserById","then","user","data","updateUser","body","payload","updateUserById","value"],"mappings":"wLAAA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,CAA4BC,QAA5B,CAAsCC,SAAtC,KAAuD,OAAvD,CACA,MAAOC,CAAAA,GAAP,KAAgB,QAAhB,CAEA,GAAMC,CAAAA,WAAW,CAAGL,KAAK,CAACM,aAAN,EAApB,CAEA,MAAO,SAASC,CAAAA,OAAT,EAAmB,CACxB,MAAON,CAAAA,UAAU,CAACI,WAAD,CAAjB,CACD,CAED,MAAO,SAASG,CAAAA,YAAT,MAAwC,IAAhBC,CAAAA,EAAgB,MAAhBA,EAAgB,CAAZC,QAAY,MAAZA,QAAY,eACjBR,QAAQ,CAAC,IAAD,CADS,wCACtCS,MADsC,eAC9BC,SAD8B,eAG7CT,SAAS,CAAC,UAAM,CACd;AACA,GAAIQ,MAAM,GAAK,IAAf,CAAqB,CACnB;AACAP,GAAG,CAACS,WAAJ,CAAgBJ,EAAhB,EAAoBK,IAApB,CACE,SAACC,IAAD,CAAU,CACR,MAAOH,CAAAA,SAAS,CAACG,IAAI,CAACC,IAAL,CAAUA,IAAX,CAAhB,CACH,CAHD,EAID,CACF,CATQ,CASN,CAACP,EAAD,CAAKE,MAAL,CATM,CAAT,CAWA,QAASM,CAAAA,UAAT,CAAoBR,EAApB,CAAwBS,IAAxB,CAA8B,CAC5B,GAAMC,CAAAA,OAAO,CAAGD,IAAhB,CACAd,GAAG,CAACgB,cAAJ,CAAmBX,EAAnB,CAAuBU,OAAvB,EACD,CAED,GAAME,CAAAA,KAAK,CAAG,CACZV,MAAM,CAANA,MADY,CAEZC,SAAS,CAATA,SAFY,CAGZK,UAAU,CAAVA,UAHY,CAAd,CAMA,mBACE,oBAAC,WAAD,CAAa,QAAb,EAAsB,KAAK,CAAEI,KAA7B,EACGX,QADH,CADF,CAKD,CAED,cAAeL,CAAAA,WAAf,CAEA","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport api from \"../api\"\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport function UserProvider({ id, children }) {\r\n  const [client, setClient] = useState(null)\r\n\r\n  useEffect(() => {\r\n    // Si le client n'est pas null pas besoin de mise a jour\r\n    if (client === null) {\r\n      // Je récupère les données du client grace à l'api\r\n      api.getUserById(id).then(\r\n        (user) => {\r\n          return setClient(user.data.data)\r\n      })\r\n    }\r\n  }, [id, client])\r\n\r\n  function updateUser(id, body) {\r\n    const payload = body\r\n    api.updateUserById(id, payload)\r\n  }\r\n\r\n  const value = {\r\n    client,\r\n    setClient,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default UserContext\r\n\r\n// https://dmitripavlutin.com/react-usestate-hook-guide/"]},"metadata":{},"sourceType":"module"}