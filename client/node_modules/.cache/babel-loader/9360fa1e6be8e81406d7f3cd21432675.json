{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V9\\\\client\\\\src\\\\components\\\\sidebar\\\\ChannelsContacts.js\";\nimport React from 'react';\nimport { useChannels } from '../../contexts/ChannelsProvider';\nimport api from \"../../api\";\nexport default function ChannelsContacts() {\n  const {\n    channels,\n    selectChannelId\n  } = useChannels();\n\n  async function test(channelId) {\n    api.getUserById(channelId).then(user => {\n      return {\n        user: user.data.data,\n        isLoaded: false,\n        requesting: false\n      };\n    }, error => {\n      return {\n        isLoaded: false,\n        requesting: false,\n        error\n      };\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, channels.filter(channel => channel.recipients.length < 2).map(channel => /*#__PURE__*/React.createElement(\"button\", {\n    key: channel.id,\n    className: `sidebar-body-contact ${channel.selected ? 'selected' : ''}`,\n    onClick: () => selectChannelId(channel.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"40\",\n    height: \"32\",\n    viewBox: \"0 0 40 32\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"foreignObject\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"32\",\n    height: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n    \"aria-hidden\": \"true\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"online\",\n    fill: \"currentColor\",\n    width: \"10\",\n    height: \"10\",\n    x: \"22\",\n    y: \"22\",\n    rx: \"15\",\n    ry: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }\n  }, test(channel.id), channel.recipients.map(r => r.name).join(', '))))))));\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V9/client/src/components/sidebar/ChannelsContacts.js"],"names":["React","useChannels","api","ChannelsContacts","channels","selectChannelId","test","channelId","getUserById","then","user","data","isLoaded","requesting","error","filter","channel","recipients","length","map","id","selected","r","name","join"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nimport api from \"../../api\"\n\nexport default function ChannelsContacts() {\n  const { channels, selectChannelId } = useChannels()\n\n  async function test(channelId) {\n    \n    api.getUserById(channelId).then(\n      (user) => {\n        return {\n          user: user.data.data,\n          isLoaded: false,\n          requesting: false\n        }\n      },\n      (error) => {\n        return {\n          isLoaded: false,\n          requesting: false,\n          error\n        }\n      }\n    )\n  }\n  return (\n    <>\n      {channels.filter(channel => channel.recipients.length < 2).map((channel) => (\n        <button\n          key={channel.id}\n          className={`sidebar-body-contact ${channel.selected ? 'selected' : ''}`}\n          onClick={() => selectChannelId(channel.id)}\n        >\n          <div className=\"sidebar-body-contact-content\">\n            <div className=\"sidebar-body-contact-content-avatar\">\n\n              <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n                <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                  <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n                </foreignObject>\n                <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n              </svg>\n\n            </div>\n            <div className=\"sidebar-body-contact-content-text\">\n              <div className=\"username\">\n                <div className=\"overflow\">{test(channel.id)}{channel.recipients.map(r => r.name).join(', ')}</div>\n              </div>\n            </div>\n          </div>\n        </button>\n      ))}\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}