{"ast":null,"code":"import api from \"../../api\";\nconst address = api.getUserById(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\").then(user => {\n  return user.data.data;\n});\n\nconst printAddress = async () => {\n  const a = await address;\n  console.log(a);\n};\n\nconsole.log(printAddress());\nexport const initialState = {\n  count: 0\n};\n\nfunction reducer(state, action) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      switch (action.type) {\n        case 'up':\n          resolve({ ...state,\n            count: state.count + 1\n          });\n          break;\n\n        case 'down':\n          resolve({ ...state,\n            count: state.count - 1\n          });\n          break;\n\n        case 'reset':\n          resolve({ ...initialState\n          });\n          break;\n\n        default:\n          resolve(state);\n          break;\n      }\n    }, 1000);\n  });\n}\n\nexport default reducer;\n/*\r\nimport api from \"../../api\"\r\n\r\n\r\nexport const initialState = {\r\n  count: 0\r\n};\r\n\r\nfunction reducer(state) {\r\n  return new Promise(resolve => {\r\n\r\n      api.getUserById(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\").then(user => {\r\n        resolve({ ...state, count: user.data.data.pseudo });\r\n      })\r\n\r\n  });\r\n}\r\n\r\nexport default reducer;\r\n*/\n\n/*\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true })\r\n    await api.getUserById(this.props.id).then(user => {\r\n      this.setState({\r\n        user: user.data.data,\r\n        isLoading: false\r\n      })\r\n    })\r\n  }\r\n*/","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V7/client/src/contexts/CounterContext/reducer.js"],"names":["api","address","getUserById","then","user","data","printAddress","a","console","log","initialState","count","reducer","state","action","Promise","resolve","setTimeout","type"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,WAAhB;AAGA,MAAMC,OAAO,GAAGD,GAAG,CAACE,WAAJ,CAAgB,sCAAhB,EAAwDC,IAAxD,CAA6DC,IAAI,IAAI;AAAE,SAAOA,IAAI,CAACC,IAAL,CAAUA,IAAjB;AAAuB,CAA9F,CAAhB;;AACA,MAAMC,YAAY,GAAG,YAAY;AAC/B,QAAMC,CAAC,GAAG,MAAMN,OAAhB;AACAO,EAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD,CAHD;;AAIAC,OAAO,CAACC,GAAR,CAAYH,YAAY,EAAxB;AAGA,OAAO,MAAMI,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAEP,SAASC,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC9B,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BC,IAAAA,UAAU,CAAC,MAAM;AACf,cAAQH,MAAM,CAACI,IAAf;AACE,aAAK,IAAL;AACEF,UAAAA,OAAO,CAAC,EAAE,GAAGH,KAAL;AAAYF,YAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAjC,WAAD,CAAP;AACA;;AACF,aAAK,MAAL;AACEK,UAAAA,OAAO,CAAC,EAAE,GAAGH,KAAL;AAAYF,YAAAA,KAAK,EAAEE,KAAK,CAACF,KAAN,GAAc;AAAjC,WAAD,CAAP;AACA;;AACF,aAAK,OAAL;AACEK,UAAAA,OAAO,CAAC,EAAE,GAAGN;AAAL,WAAD,CAAP;AACA;;AACF;AACEM,UAAAA,OAAO,CAACH,KAAD,CAAP;AACA;AAZJ;AAcD,KAfS,EAeP,IAfO,CAAV;AAgBD,GAjBM,CAAP;AAkBD;;AAED,eAAeD,OAAf;AACA;;;;;;;;;;;;;;;;;;;;;AAoBA","sourcesContent":["import api from \"../../api\"\r\n\r\n\r\nconst address = api.getUserById(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\").then(user => { return user.data.data })\r\nconst printAddress = async () => {\r\n  const a = await address;\r\n  console.log(a);\r\n};\r\nconsole.log(printAddress())\r\n\r\n\r\nexport const initialState = { count: 0 };\r\n\r\nfunction reducer(state, action) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n      switch (action.type) {\r\n        case 'up':\r\n          resolve({ ...state, count: state.count + 1 });\r\n          break;\r\n        case 'down':\r\n          resolve({ ...state, count: state.count - 1 });\r\n          break;\r\n        case 'reset':\r\n          resolve({ ...initialState });\r\n          break;\r\n        default:\r\n          resolve(state);\r\n          break;\r\n      }\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport default reducer;\r\n/*\r\nimport api from \"../../api\"\r\n\r\n\r\nexport const initialState = {\r\n  count: 0\r\n};\r\n\r\nfunction reducer(state) {\r\n  return new Promise(resolve => {\r\n\r\n      api.getUserById(\"f650a09d-c971-4140-ac1b-9a2355d11ce4\").then(user => {\r\n        resolve({ ...state, count: user.data.data.pseudo });\r\n      })\r\n\r\n  });\r\n}\r\n\r\nexport default reducer;\r\n*/\r\n/*\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true })\r\n    await api.getUserById(this.props.id).then(user => {\r\n      this.setState({\r\n        user: user.data.data,\r\n        isLoading: false\r\n      })\r\n    })\r\n  }\r\n*/"]},"metadata":{},"sourceType":"module"}