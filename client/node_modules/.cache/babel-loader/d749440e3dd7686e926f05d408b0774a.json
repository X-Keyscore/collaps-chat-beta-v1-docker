{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\Beta\\\\V1\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\Beta\\\\V1\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import api from'../../api';import{useUser}from'../../contexts/UserProvider';import{useChannels}from'../../contexts/ChannelsProvider';export default function OpenConversation(){var _useUser=useUser(),client=_useUser.client,updateUser=_useUser.updateUser;var _useChannels=useChannels(),setChannels=_useChannels.setChannels,selectedChannel=_useChannels.selectedChannel,setSelectedChannel=_useChannels.setSelectedChannel,messagesChannels=_useChannels.messagesChannels,sendMessage=_useChannels.sendMessage;// Ce \"state\" enregistre le texte du message\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),text=_useState2[0],setText=_useState2[1];// Fonction appelée pour supprimer le \"channel\" selectionné, dans les données du client est dans celle du destinataire\nfunction andleDelChannel(){// J'isole les données du client dans une variable pour pouvoir les modifier\nvar userClientEdit=client;// Je boucle tous les \"channels\" du client\nfor(var i=0;i<userClientEdit.channels.length;i++){// Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\nif(userClientEdit.channels[i].id===selectedChannel.id){// Je supprime le channel dans la liste grace à sa position\nuserClientEdit.channels.splice(i,1);// Je mets à jour le client\napi.updateUserById(userClientEdit.id,{data:{channels:userClientEdit.channels}}).then(function(res){});}}// Récupération des données du destinataire avec son id\napi.getUserById(selectedChannel.recipients[0].id).then(function(userRecipient){// J'isole les données du destinataire dans une variable pour pouvoir les modifier\nvar userRecipientEdit=userRecipient.data.data;// Je boucle tous les \"channels\" du destinataire\nfor(var _i=0;_i<userRecipientEdit.channels.length;_i++){// Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\nif(userRecipientEdit.channels[_i].id===selectedChannel.id){// Je supprime le channel dans la liste grace à sa position\nuserRecipientEdit.channels.splice(_i,1);// Je mets à jour le destinataire\nupdateUser(userRecipientEdit.id,{data:{channels:userRecipientEdit.channels}});}}},function(error){console.log(error);});// Supresion du \"channel\" dans \"setChannels\"\nsetChannels(function(channels){return[].concat(_toConsumableArray(channels.slice(0,selectedChannel.key)),_toConsumableArray(channels.slice(selectedChannel.key+1)));});// Je reset le \"setSelectedChannel\"\nsetSelectedChannel(null);// Je supprime le channel\napi.deleteChannelById(selectedChannel.id);}// Fonction appelée pour envoyé un message\nfunction handleSendMsg(e){e.preventDefault();// channel, text, client\nsendMessage(selectedChannel,text,client);// Reset de \"setText\"\nsetText('');}// Ce script redimensionne le 'textarea' en prenant en compte la taille de l'affichage\nuseEffect(function(){try{// [ Responsive Textarea size ]\n// Je définis la taille maximale du textarea\nvar msgTextarea=document.getElementById('msgTextarea');if(window.screen.height>=1000){msgTextarea.style.maxHeight=\"330px\";//44px = 2 ligne\n}else if(window.screen.height>=900){msgTextarea.style.maxHeight=\"286px\";}else if(window.screen.height>=800){msgTextarea.style.maxHeight=\"242px\";}else if(window.screen.height>=700){msgTextarea.style.maxHeight=\"198px\";}else if(window.screen.height>=600){msgTextarea.style.maxHeight=\"154px\";}else if(window.screen.height>=500){msgTextarea.style.maxHeight=\"110px\";}// Redimensionnement automatique\nmsgTextarea.addEventListener('input',function(event){var el=this;el.style.height='22px';el.style.height=el.scrollHeight-22+'px';});}catch(error){console.error(error);}},[]);// Met le scroll de \"messageBodyScroll\" en bas dès qu'un \"channel\" est sélectionné\nuseEffect(function(){var scrollarea=document.getElementById('messageBodyScroll');scrollarea.scrollIntoView({behavior:\"smooth\"});},[selectedChannel]);//  Met le scroll de \"messageBodyScroll\" en bas dès qu'un message et envoyé ou reçu\nuseEffect(function(){var scrollarea=document.getElementById('messageBodyScroll');var scrollToBottom=function scrollToBottom(node){node.scrollTop=node.scrollHeight;};scrollToBottom(scrollarea);},[messagesChannels]);var lastSenderNow;return/*#__PURE__*/React.createElement(\"div\",{className:\"message\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-header\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-header-user\"},/*#__PURE__*/React.createElement(\"div\",{className:\"message-header-user-avatar\"},/*#__PURE__*/React.createElement(\"img\",{className:\"avatar\",src:\"https://collaps.xyz/collapsapi/api/file_avatar/id/\".concat(selectedChannel.recipients[0].id)//http://localhost:3000\n,alt:\"user profil\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"message-header-user-info\"},/*#__PURE__*/React.createElement(\"div\",{className:\"username\"},selectedChannel.recipients[0].pseudo),/*#__PURE__*/React.createElement(\"div\",{className:\"statut online\"},/*#__PURE__*/React.createElement(\"svg\",{viewBox:\"0 0 512 512\",\"aria-hidden\":\"false\",width:\"10\",height:\"15\",x:\"0\",y:\"0\"},/*#__PURE__*/React.createElement(\"path\",{fill:\"currentColor\",d:\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"message-header-toolbar\"},/*#__PURE__*/React.createElement(\"button\",{className:\"btn-icon-small-red\",type:\"button\",onClick:andleDelChannel},/*#__PURE__*/React.createElement(\"svg\",{viewBox:\"0 0 512 512\",\"aria-hidden\":\"false\",width:\"20\",height:\"20\",x:\"0\",y:\"0\"},/*#__PURE__*/React.createElement(\"polygon\",{fill:\"currentColor\",points:\"512,338.954 483.732,310.686 411.772,382.646 339.812,310.686 311.543,338.954 383.503,410.914 311.543,482.874  339.812,511.142 411.772,439.182 483.732,511.142 512,482.874 440.04,410.914 \\t\\t\"}),/*#__PURE__*/React.createElement(\"path\",{fill:\"currentColor\",d:\"M255.858,0.142c-81.562,0-147.918,66.356-147.918,147.918c0,50.52,25.465,95.198,64.226,121.894 c-36.19,12.488-69.36,33.118-97.227,60.984C26.614,379.265,0,443.516,0,511.858h39.978c0-119.037,96.843-215.88,215.88-215.88 c81.562,0,147.918-66.355,147.918-147.918C403.776,66.498,337.42,0.142,255.858,0.142z M255.858,256 c-59.518,0-107.94-48.421-107.94-107.94S196.34,40.12,255.858,40.12c59.518,0,107.94,48.421,107.94,107.94 S315.376,256,255.858,256z\"}))))),/*#__PURE__*/React.createElement(\"div\",{className:\"message-body scroller\",id:\"messageBodyScroll\"},selectedChannel.messages.map(function(message,index){// Trensforme la date du format texte au format js\nvar date=new Date(message.date);// Mise en forme de la date\ndate=\"\".concat(date.getDate(),\"/\").concat(date.getMonth()+1,\"/\").concat(date.getFullYear(),\" \").concat(date.getHours(),\":\").concat(date.getMinutes());var pseudo=client===null?null:message.sender===client.id?client.pseudo:selectedChannel.recipients.find(function(recipient){return recipient.id===message.sender;}).pseudo;// Détecte si plus de deux messages a la suite sont du même destinataire\nvar lastSenderPass=lastSenderNow;lastSenderNow=message.sender;return lastSenderNow!==lastSenderPass?/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message parents\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message-avatar\"},/*#__PURE__*/React.createElement(\"img\",{className:\"avatar\",src:\"https://collaps.xyz/collapsapi/api/file_avatar/id/\".concat(message.sender)//http://localhost:3000\n,alt:\"user profil\"})),/*#__PURE__*/React.createElement(\"h2\",{className:\"message-body-message-header\"},/*#__PURE__*/React.createElement(\"span\",{className:\"pseudo\"},pseudo),/*#__PURE__*/React.createElement(\"span\",{className:\"timestamp\"},date)),/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message-text\"},message.text)):/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message children\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message-text\"},message.text));}),messagesChannels.length===0?null:messagesChannels.find(function(messagesChannel){return messagesChannel.id===selectedChannel.id;}).messages.map(function(message,index){// Trensforme la date du format texte au format js\nvar date=new Date(message.date);// Mise en forme de la date\ndate=\"\".concat(date.getDate(),\"/\").concat(date.getMonth()+1,\"/\").concat(date.getFullYear(),\" \").concat(date.getHours(),\":\").concat(date.getMinutes());// Détecte si plus de deux messages a la suite sont du même destinataire\nvar lastSenderPass=lastSenderNow;lastSenderNow=message.sender.id;return lastSenderNow!==lastSenderPass?/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message parents\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message-avatar\"},/*#__PURE__*/React.createElement(\"img\",{className:\"avatar\",src:\"https://collaps.xyz/collapsapi/api/file_avatar/id/\".concat(message.sender.id),alt:\"user profil\"})),/*#__PURE__*/React.createElement(\"h2\",{className:\"message-body-message-header\"},/*#__PURE__*/React.createElement(\"span\",{className:\"pseudo\"},message.sender.pseudo),/*#__PURE__*/React.createElement(\"span\",{className:\"timestamp\"},date)),/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message-text\"},message.text)):/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message children\",key:index},/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-message-text\"},message.text));}),/*#__PURE__*/React.createElement(\"div\",{className:\"message-body-spacer\",id:\"spacer\"})),/*#__PURE__*/React.createElement(\"div\",{className:\"message-footer\"},/*#__PURE__*/React.createElement(\"form\",{className:\"message-footer-toolbar\",onSubmit:handleSendMsg},/*#__PURE__*/React.createElement(\"div\",{className:\"message-footer-toolbar-uploadBtn\"},/*#__PURE__*/React.createElement(\"svg\",{className:\"icon\",width:\"24\",height:\"24\",viewBox:\"0 0 24 24\"},/*#__PURE__*/React.createElement(\"path\",{fill:\"currentColor\",d:\"M12 2.00098C6.486 2.00098 2 6.48698 2 12.001C2 17.515 6.486 22.001 12 22.001C17.514 22.001 22 17.515 22 12.001C22 6.48698 17.514 2.00098 12 2.00098ZM17 13.001H13V17.001H11V13.001H7V11.001H11V7.00098H13V11.001H17V13.001Z\"})),/*#__PURE__*/React.createElement(\"input\",{className:\"input\",type:\"file\",multiple:true})),/*#__PURE__*/React.createElement(\"textarea\",{id:\"msgTextarea\",className:\"message-footer-toolbar-textarea scroller\",placeholder:\"Envoyer un message à \"+selectedChannel.recipients[0].pseudo,spellCheck:\"true\",autoFocus:true,autoComplete:\"off\",value:text,onChange:function onChange(e){return setText(e.target.value);},required:true}),/*#__PURE__*/React.createElement(\"button\",{className:\"message-footer-toolbar-sendBtn\",type:\"submit\"},/*#__PURE__*/React.createElement(\"svg\",{viewBox:\"0 0 512 512\",\"aria-hidden\":\"false\",width:\"20\",height:\"20\"},/*#__PURE__*/React.createElement(\"path\",{fill:\"currentColor\",d:\"M481.508,210.336L68.414,38.926c-17.403-7.222-37.064-4.045-51.309,8.287C2.86,59.547-3.098,78.551,1.558,96.808 L38.327,241h180.026c8.284,0,15.001,6.716,15.001,15.001c0,8.284-6.716,15.001-15.001,15.001H38.327L1.558,415.193 c-4.656,18.258,1.301,37.262,15.547,49.595c14.274,12.357,33.937,15.495,51.31,8.287l413.094-171.409 C500.317,293.862,512,276.364,512,256.001C512,235.638,500.317,218.139,481.508,210.336z\"}))))));}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/Beta/V1/client/src/components/container/OpenConversation.js"],"names":["React","useState","useEffect","api","useUser","useChannels","OpenConversation","client","updateUser","setChannels","selectedChannel","setSelectedChannel","messagesChannels","sendMessage","text","setText","andleDelChannel","userClientEdit","i","channels","length","id","splice","updateUserById","data","then","res","getUserById","recipients","userRecipient","userRecipientEdit","error","console","log","slice","key","deleteChannelById","handleSendMsg","e","preventDefault","msgTextarea","document","getElementById","window","screen","height","style","maxHeight","addEventListener","event","el","scrollHeight","scrollarea","scrollIntoView","behavior","scrollToBottom","node","scrollTop","lastSenderNow","pseudo","messages","map","message","index","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","sender","find","recipient","lastSenderPass","messagesChannel","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n\nimport api from '../../api'\n\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function OpenConversation() {\n  const { client, updateUser } = useUser()\n  const { setChannels, selectedChannel, setSelectedChannel, messagesChannels, sendMessage } = useChannels()\n\n  // Ce \"state\" enregistre le texte du message\n  const [text, setText] = useState('')\n\n  // Fonction appelée pour supprimer le \"channel\" selectionné, dans les données du client est dans celle du destinataire\n  function andleDelChannel() {\n\n    // J'isole les données du client dans une variable pour pouvoir les modifier\n    var userClientEdit = client\n\n    // Je boucle tous les \"channels\" du client\n    for (let i = 0; i < userClientEdit.channels.length; i++) {\n      // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n      if (userClientEdit.channels[i].id === selectedChannel.id) {\n        // Je supprime le channel dans la liste grace à sa position\n        userClientEdit.channels.splice(i, 1);\n        // Je mets à jour le client\n        api.updateUserById(userClientEdit.id, { data: { channels: userClientEdit.channels } }).then(res => { })\n      }\n    }\n\n    // Récupération des données du destinataire avec son id\n    api.getUserById(selectedChannel.recipients[0].id).then(\n      (userRecipient) => {\n\n        // J'isole les données du destinataire dans une variable pour pouvoir les modifier\n        var userRecipientEdit = userRecipient.data.data\n\n        // Je boucle tous les \"channels\" du destinataire\n        for (let i = 0; i < userRecipientEdit.channels.length; i++) {\n          // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n          if (userRecipientEdit.channels[i].id === selectedChannel.id) {\n            // Je supprime le channel dans la liste grace à sa position\n            userRecipientEdit.channels.splice(i, 1);\n            // Je mets à jour le destinataire\n            updateUser(userRecipientEdit.id, { data: { channels: userRecipientEdit.channels } })\n          }\n        }\n\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n    // Supresion du \"channel\" dans \"setChannels\"\n    setChannels(channels => [\n      ...channels.slice(0, selectedChannel.key),\n      ...channels.slice(selectedChannel.key + 1)\n    ]);\n    // Je reset le \"setSelectedChannel\"\n    setSelectedChannel(null)\n    // Je supprime le channel\n    api.deleteChannelById(selectedChannel.id)\n  }\n\n  // Fonction appelée pour envoyé un message\n  function handleSendMsg(e) {\n    e.preventDefault()\n\n    // channel, text, client\n    sendMessage(\n      selectedChannel,\n      text,\n      client,\n    )\n    // Reset de \"setText\"\n    setText('')\n  }\n  \n  // Ce script redimensionne le 'textarea' en prenant en compte la taille de l'affichage\n  useEffect(() => {\n    try {\n      // [ Responsive Textarea size ]\n      // Je définis la taille maximale du textarea\n      var msgTextarea = document.getElementById('msgTextarea');\n      if (window.screen.height >= 1000) {\n        msgTextarea.style.maxHeight = \"330px\"//44px = 2 ligne\n      } else if (window.screen.height >= 900) {\n        msgTextarea.style.maxHeight = \"286px\"\n      } else if (window.screen.height >= 800) {\n        msgTextarea.style.maxHeight = \"242px\"\n      } else if (window.screen.height >= 700) {\n        msgTextarea.style.maxHeight = \"198px\"\n      } else if (window.screen.height >= 600) {\n        msgTextarea.style.maxHeight = \"154px\"\n      } else if (window.screen.height >= 500) {\n        msgTextarea.style.maxHeight = \"110px\"\n      }\n      // Redimensionnement automatique\n      msgTextarea.addEventListener('input', function (event) {\n        var el = this;\n        el.style.height = '22px';\n        el.style.height = (el.scrollHeight - 22) + 'px';\n      });\n    } catch (error) {\n      console.error(error)\n    }\n  }, []);\n\n  // Met le scroll de \"messageBodyScroll\" en bas dès qu'un \"channel\" est sélectionné\n  useEffect(() => {\n    var scrollarea = document.getElementById('messageBodyScroll');\n    scrollarea.scrollIntoView({ behavior: \"smooth\" })\n  }, [selectedChannel]);\n\n  //  Met le scroll de \"messageBodyScroll\" en bas dès qu'un message et envoyé ou reçu\n  useEffect(() => {\n    var scrollarea = document.getElementById('messageBodyScroll');\n    const scrollToBottom = (node) => {\n      node.scrollTop = node.scrollHeight;\n    }\n    scrollToBottom(scrollarea);\n  }, [messagesChannels]);\n\n  var lastSenderNow;\n\n  return (\n    <div className=\"message\">\n      <div className=\"message-header\">\n        <div className=\"message-header-user\">\n          <div className=\"message-header-user-avatar\">\n            <img className=\"avatar\"\n              src={`https://collaps.xyz/collapsapi/api/file_avatar/id/${selectedChannel.recipients[0].id}`} //http://localhost:3000\n              alt=\"user profil\" />\n          </div>\n          <div className=\"message-header-user-info\">\n            <div className=\"username\">\n              {selectedChannel.recipients[0].pseudo}\n            </div>\n            <div className=\"statut online\">\n              <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"10\" height=\"15\" x=\"0\" y=\"0\">\n                <path fill=\"currentColor\"\n                  d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"message-header-toolbar\">\n          <button className=\"btn-icon-small-red\" type=\"button\" onClick={andleDelChannel}>\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\" x=\"0\" y=\"0\">\n              <polygon fill=\"currentColor\" points=\"512,338.954 483.732,310.686 411.772,382.646 339.812,310.686 311.543,338.954 383.503,410.914 311.543,482.874 \n              339.812,511.142 411.772,439.182 483.732,511.142 512,482.874 440.04,410.914 \t\t\"/>\n              <path fill=\"currentColor\" d=\"M255.858,0.142c-81.562,0-147.918,66.356-147.918,147.918c0,50.52,25.465,95.198,64.226,121.894\n              c-36.19,12.488-69.36,33.118-97.227,60.984C26.614,379.265,0,443.516,0,511.858h39.978c0-119.037,96.843-215.88,215.88-215.88\n              c81.562,0,147.918-66.355,147.918-147.918C403.776,66.498,337.42,0.142,255.858,0.142z M255.858,256\n              c-59.518,0-107.94-48.421-107.94-107.94S196.34,40.12,255.858,40.12c59.518,0,107.94,48.421,107.94,107.94\n              S315.376,256,255.858,256z\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div className=\"message-body scroller\" id=\"messageBodyScroll\">\n        {\n          selectedChannel.messages.map((message, index) => {\n\n            // Trensforme la date du format texte au format js\n            var date = new Date(message.date);\n            // Mise en forme de la date\n            date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n            const pseudo = client === null ? null : message.sender === client.id ? client.pseudo : selectedChannel.recipients.find(recipient => recipient.id === message.sender).pseudo\n\n            // Détecte si plus de deux messages a la suite sont du même destinataire\n            var lastSenderPass = lastSenderNow;\n            lastSenderNow = message.sender;\n\n            return (\n              lastSenderNow !== lastSenderPass\n                ?\n                <div\n                  className=\"message-body-message parents\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-avatar\">\n                    <img className=\"avatar\"\n                      src={`https://collaps.xyz/collapsapi/api/file_avatar/id/${message.sender}`} //http://localhost:3000\n                      alt=\"user profil\" />\n                  </div>\n                  <h2 className=\"message-body-message-header\">\n                    <span className=\"pseudo\">\n                      {pseudo}\n                    </span>\n                    <span className=\"timestamp\">\n                      {date}\n                    </span>\n                  </h2>\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n                :\n                <div\n                  className=\"message-body-message children\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n            )\n          })\n        }\n        {\n          messagesChannels.length === 0 ? null : messagesChannels.find(messagesChannel => messagesChannel.id === selectedChannel.id).messages.map((message, index) => {\n\n            // Trensforme la date du format texte au format js\n            var date = new Date(message.date);\n            // Mise en forme de la date\n            date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n            // Détecte si plus de deux messages a la suite sont du même destinataire\n            var lastSenderPass = lastSenderNow;\n            lastSenderNow = message.sender.id;\n\n            return (\n              lastSenderNow !== lastSenderPass\n                ?\n                <div\n                  className=\"message-body-message parents\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-avatar\">\n                    <img className=\"avatar\"\n                      src={`https://collaps.xyz/collapsapi/api/file_avatar/id/${message.sender.id}`}\n                      alt=\"user profil\" />\n                  </div>\n                  <h2 className=\"message-body-message-header\">\n                    <span className=\"pseudo\">\n                      {message.sender.pseudo}\n                    </span>\n                    <span className=\"timestamp\">\n                      {date}\n                    </span>\n                  </h2>\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n                :\n                <div\n                  className=\"message-body-message children\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n            )\n          })\n        }\n        <div className=\"message-body-spacer\" id=\"spacer\"></div>\n      </div>\n      <div className=\"message-footer\">\n        <form className=\"message-footer-toolbar\" onSubmit={handleSendMsg}>\n\n          <div className=\"message-footer-toolbar-uploadBtn\">\n            <svg className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"currentColor\" d=\"M12 2.00098C6.486 2.00098 2 6.48698 2 12.001C2 17.515 6.486 22.001 12 22.001C17.514 22.001 22 17.515 22 12.001C22\n                    6.48698 17.514 2.00098 12 2.00098ZM17 13.001H13V17.001H11V13.001H7V11.001H11V7.00098H13V11.001H17V13.001Z\">\n              </path>\n            </svg>\n            <input className=\"input\" type=\"file\" multiple />\n          </div>\n\n          <textarea id=\"msgTextarea\" className=\"message-footer-toolbar-textarea scroller\" placeholder={\"Envoyer un message à \" + selectedChannel.recipients[0].pseudo}\n            spellCheck=\"true\" autoFocus autoComplete=\"off\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n          ></textarea>\n\n          <button className=\"message-footer-toolbar-sendBtn\" type=\"submit\">\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\">\n              <path fill=\"currentColor\" d=\"M481.508,210.336L68.414,38.926c-17.403-7.222-37.064-4.045-51.309,8.287C2.86,59.547-3.098,78.551,1.558,96.808\n                  L38.327,241h180.026c8.284,0,15.001,6.716,15.001,15.001c0,8.284-6.716,15.001-15.001,15.001H38.327L1.558,415.193\n                  c-4.656,18.258,1.301,37.262,15.547,49.595c14.274,12.357,33.937,15.495,51.31,8.287l413.094-171.409\n                  C500.317,293.862,512,276.364,512,256.001C512,235.638,500.317,218.139,481.508,210.336z\" />\n            </svg>\n          </button>\n\n        </form>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}