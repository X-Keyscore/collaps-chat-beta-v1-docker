{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\Beta\\\\V1\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';var PREFIX='FInt-';export default function useLocalStorage(key,initialValue){var prefixedKey=PREFIX+key;var _useState=useState(function(){var jsonValue=localStorage.getItem(prefixedKey);if(jsonValue!=null)return JSON.parse(jsonValue);if(typeof initialValue==='function'){return initialValue();}else{return initialValue;}}),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];useEffect(function(){// Je ne stock rien si il n'y a pas de clé\nif(value!=null)localStorage.setItem(prefixedKey,JSON.stringify(value));},[prefixedKey,value]);return[value,setValue];}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/Beta/V1/client/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","value","setValue","setItem","stringify"],"mappings":"wLAAA,OAASA,SAAT,CAAoBC,QAApB,KAAoC,OAApC,CAEA,GAAMC,CAAAA,MAAM,CAAG,OAAf,CAEA,cAAe,SAASC,CAAAA,eAAT,CAAyBC,GAAzB,CAA8BC,YAA9B,CAA4C,CACzD,GAAMC,CAAAA,WAAW,CAAGJ,MAAM,CAAGE,GAA7B,CADyD,cAE/BH,QAAQ,CAAC,UAAM,CACvC,GAAMM,CAAAA,SAAS,CAAGC,YAAY,CAACC,OAAb,CAAqBH,WAArB,CAAlB,CAEA,GAAIC,SAAS,EAAI,IAAjB,CAAuB,MAAOG,CAAAA,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP,CACvB,GAAI,MAAOF,CAAAA,YAAP,GAAwB,UAA5B,CAAwC,CACtC,MAAOA,CAAAA,YAAY,EAAnB,CACD,CAFD,IAEO,CACL,MAAOA,CAAAA,YAAP,CACD,CACF,CATiC,CAFuB,wCAElDO,KAFkD,eAE3CC,QAF2C,eAazDb,SAAS,CAAC,UAAM,CACd;AACA,GAAIY,KAAK,EAAI,IAAb,CAAmBJ,YAAY,CAACM,OAAb,CAAqBR,WAArB,CAAkCI,IAAI,CAACK,SAAL,CAAeH,KAAf,CAAlC,EACpB,CAHQ,CAGN,CAACN,WAAD,CAAcM,KAAd,CAHM,CAAT,CAKA,MAAO,CAACA,KAAD,CAAQC,QAAR,CAAP,CACD","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst PREFIX = 'FInt-';\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  });\n\n  useEffect(() => {\n    // Je ne stock rien si il n'y a pas de clé\n    if (value != null) localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}"]},"metadata":{},"sourceType":"module"}