{"ast":null,"code":"function reducertest(state) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      api.getUserById(this.props.id).then(user => {\n        resolve({ ...state,\n          count: 1\n        });\n      });\n    }, 1000);\n  });\n}\n\nexport const initialState = {\n  count: \"f\"\n};\n\nfunction reducer(state) {\n  return new Promise(resolve => {\n    setTimeout(() => {\n      resolve({ ...state,\n        count: 1\n      });\n    }, 1000);\n  });\n}\n\nexport default reducer;\n/*\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true })\r\n    await api.getUserById(this.props.id).then(user => {\r\n      this.setState({\r\n        user: user.data.data,\r\n        isLoading: false\r\n      })\r\n    })\r\n  }\r\n*/","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V7/client/src/contexts/CounterContext/reducer.js"],"names":["reducertest","state","Promise","resolve","setTimeout","api","getUserById","props","id","then","user","count","initialState","reducer"],"mappings":"AAAA,SAASA,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BC,IAAAA,UAAU,CAAC,MAAM;AACfC,MAAAA,GAAG,CAACC,WAAJ,CAAgB,KAAKC,KAAL,CAAWC,EAA3B,EAA+BC,IAA/B,CAAoCC,IAAI,IAAI;AAC1CP,QAAAA,OAAO,CAAC,EAAE,GAAGF,KAAL;AAAYU,UAAAA,KAAK,EAAE;AAAnB,SAAD,CAAP;AACD,OAFD;AAMD,KAPS,EAOP,IAPO,CAAV;AAQD,GATM,CAAP;AAUD;;AAED,OAAO,MAAMC,YAAY,GAAG;AAC1BD,EAAAA,KAAK,EAAE;AADmB,CAArB;;AAGP,SAASE,OAAT,CAAiBZ,KAAjB,EAAwB;AACtB,SAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;AAC5BC,IAAAA,UAAU,CAAC,MAAM;AAEfD,MAAAA,OAAO,CAAC,EAAE,GAAGF,KAAL;AAAYU,QAAAA,KAAK,EAAE;AAAnB,OAAD,CAAP;AAED,KAJS,EAIP,IAJO,CAAV;AAKD,GANM,CAAP;AAOD;;AAED,eAAeE,OAAf;AAEA","sourcesContent":["function reducertest(state) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {  \r\n      api.getUserById(this.props.id).then(user => {\r\n        resolve({ ...state, count: 1 });\r\n      })\r\n\r\n      \r\n\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport const initialState = { \r\n  count: \"f\" };\r\n\r\nfunction reducer(state) {\r\n  return new Promise(resolve => {\r\n    setTimeout(() => {\r\n\r\n      resolve({ ...state, count: 1 });\r\n\r\n    }, 1000);\r\n  });\r\n}\r\n\r\nexport default reducer;\r\n\r\n/*\r\n  componentDidMount = async () => {\r\n    this.setState({ isLoading: true })\r\n    await api.getUserById(this.props.id).then(user => {\r\n      this.setState({\r\n        user: user.data.data,\r\n        isLoading: false\r\n      })\r\n    })\r\n  }\r\n*/"]},"metadata":{},"sourceType":"module"}