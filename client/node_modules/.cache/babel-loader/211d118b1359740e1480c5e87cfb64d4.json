{"ast":null,"code":"import { useEffect, useState } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport api from \"../api\";\nexport default function useExternalStorage(idf) {\n  console.log(id); // Récupération de l'id du client pour pouvoir identifier la cible de la requête\n\n  const [id] = useLocalStorage('id'); // Initialisation du \"useState\" pour stocké les données\n\n  const [value, setValue] = useState(null); // Le \"useEffect\" est utilisé pour géré l'asynchrone\n\n  useEffect(() => {\n    // Fonction asynchrone pour faire le rendu des channels du client\n    async function fetchClient() {\n      //console.log(id)\n      api.getUserById(id).then(user => {\n        return setValue(user.data.data);\n      });\n    }\n\n    var use = false; // Appel de la fonction\n\n    if (use === false) {\n      use = true;\n      fetchClient();\n    }\n  }, [id]);\n  console.log('appel externe');\n  return [value, setValue];\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/Beta/V1/client/src/hooks/useExternalStorage.js"],"names":["useEffect","useState","useLocalStorage","api","useExternalStorage","idf","console","log","id","value","setValue","fetchClient","getUserById","then","user","data","use"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,eAAe,SAASC,kBAAT,CAA4BC,GAA5B,EAAiC;AAC9CC,EAAAA,OAAO,CAACC,GAAR,CAAYC,EAAZ,EAD8C,CAE9C;;AACA,QAAM,CAACA,EAAD,IAAON,eAAe,CAAC,IAAD,CAA5B,CAH8C,CAK9C;;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,IAAD,CAAlC,CAN8C,CAQ9C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,mBAAeW,WAAf,GAA6B;AAC3B;AACAR,MAAAA,GAAG,CAACS,WAAJ,CAAgBJ,EAAhB,EAAoBK,IAApB,CACGC,IAAD,IAAU;AACR,eAAOJ,QAAQ,CAACI,IAAI,CAACC,IAAL,CAAUA,IAAX,CAAf;AACH,OAHD;AAID;;AACD,QAAIC,GAAG,GAAG,KAAV,CATc,CAUd;;AACA,QAAIA,GAAG,KAAK,KAAZ,EAAmB;AACjBA,MAAAA,GAAG,GAAG,IAAN;AACAL,MAAAA,WAAW;AACZ;AACF,GAfQ,EAeN,CAACH,EAAD,CAfM,CAAT;AAgBAF,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,SAAO,CAACE,KAAD,EAAQC,QAAR,CAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport api from \"../api\"\n\nexport default function useExternalStorage(idf) {\n  console.log(id)\n  // Récupération de l'id du client pour pouvoir identifier la cible de la requête\n  const [id] = useLocalStorage('id')\n\n  // Initialisation du \"useState\" pour stocké les données\n  const [value, setValue] = useState(null);\n\n  // Le \"useEffect\" est utilisé pour géré l'asynchrone\n  useEffect(() => {\n    // Fonction asynchrone pour faire le rendu des channels du client\n    async function fetchClient() {\n      //console.log(id)\n      api.getUserById(id).then(\n        (user) => {\n          return setValue(user.data.data)\n      })\n    }\n    var use = false\n    // Appel de la fonction\n    if (use === false) {\n      use = true\n      fetchClient();\n    }\n  }, [id])\n  console.log('appel externe')\n  return [value, setValue]\n}"]},"metadata":{},"sourceType":"module"}