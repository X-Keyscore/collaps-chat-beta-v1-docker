{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V9\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { Component, useContext } from 'react';\nimport api from \"../api\";\nimport SocketContext from './SocketProvider';\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = () => {};\n\n    this.deleteUser = () => {};\n\n    this.updateUser = async (id, body) => {\n      const payload = body;\n      await api.updateUserChannelsById(id, payload).then(res => {});\n    };\n\n    this.deleteUserChannels = async (id, channelId) => {\n      console.log(channelId);\n      const payload = channelId;\n      await api.deleteUserChannelsById(id, payload).then(res => {});\n    };\n\n    this.state = {\n      user: null,\n      error: null,\n      loading: Boolean,\n      requesting: Boolean\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.requesting) {\n      this.setState({\n        loading: true,\n        requesting: true\n      });\n      api.getUserById(this.props.id).then(user => {\n        this.setState({\n          user: user.data.data,\n          loading: false,\n          requesting: false\n        });\n      }, error => {\n        this.setState({\n          loading: true,\n          requesting: false,\n          error\n        });\n      });\n    }\n  }\n\n  render() {\n    const value = {\n      loading: this.state.loading,\n      user: this.state.user,\n      updateUserChannels: this.updateUserChannels,\n      deleteUserChannels: this.deleteUserChannels\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nUserProvider.contextType = SocketContext;\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V9/client/src/contexts/UserProvider.js"],"names":["React","Component","useContext","api","SocketContext","UserContext","createContext","useUser","UserProvider","constructor","props","createUser","deleteUser","updateUser","id","body","payload","updateUserChannelsById","then","res","deleteUserChannels","channelId","console","log","deleteUserChannelsById","state","user","error","loading","Boolean","requesting","componentDidMount","setState","getUserById","data","render","value","updateUserChannels","children","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOL,UAAU,CAACG,WAAD,CAAjB;AACD;AAED,OAAO,MAAMG,YAAN,SAA2BP,SAA3B,CAAqC;AAE1CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAmCnBC,UAnCmB,GAmCN,MAAM,CAElB,CArCkB;;AAAA,SAuCnBC,UAvCmB,GAuCN,MAAM,CAElB,CAzCkB;;AAAA,SA2CnBC,UA3CmB,GA2CN,OAAOC,EAAP,EAAWC,IAAX,KAAoB;AAC/B,YAAMC,OAAO,GAAGD,IAAhB;AAEA,YAAMZ,GAAG,CAACc,sBAAJ,CAA2BH,EAA3B,EAA+BE,OAA/B,EAAwCE,IAAxC,CAA6CC,GAAG,IAAI,CACzD,CADK,CAAN;AAED,KAhDkB;;AAAA,SAkDnBC,kBAlDmB,GAkDE,OAAON,EAAP,EAAWO,SAAX,KAAyB;AAC5CC,MAAAA,OAAO,CAACC,GAAR,CAAYF,SAAZ;AACA,YAAML,OAAO,GAAGK,SAAhB;AAEA,YAAMlB,GAAG,CAACqB,sBAAJ,CAA2BV,EAA3B,EAA+BE,OAA/B,EAAwCE,IAAxC,CAA6CC,GAAG,IAAI,CACzD,CADK,CAAN;AAED,KAxDkB;;AAEjB,SAAKM,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,KAAK,EAAE,IAFI;AAGXC,MAAAA,OAAO,EAAEC,OAHE;AAIXC,MAAAA,UAAU,EAAED;AAJD,KAAb;AAMD;;AAEDE,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKN,KAAL,CAAWK,UAAf,EAA2B;AACzB,WAAKE,QAAL,CAAc;AACZJ,QAAAA,OAAO,EAAE,IADG;AAEZE,QAAAA,UAAU,EAAE;AAFA,OAAd;AAIA3B,MAAAA,GAAG,CAAC8B,WAAJ,CAAgB,KAAKvB,KAAL,CAAWI,EAA3B,EAA+BI,IAA/B,CACGQ,IAAD,IAAU;AACR,aAAKM,QAAL,CAAc;AACZN,UAAAA,IAAI,EAAEA,IAAI,CAACQ,IAAL,CAAUA,IADJ;AAEZN,UAAAA,OAAO,EAAE,KAFG;AAGZE,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD,OAPH,EAQGH,KAAD,IAAW;AACT,aAAKK,QAAL,CAAc;AACZJ,UAAAA,OAAO,EAAE,IADG;AAEZE,UAAAA,UAAU,EAAE,KAFA;AAGZH,UAAAA;AAHY,SAAd;AAKD,OAdH;AAgBD;AACF;;AAyBDQ,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG;AACZR,MAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OADR;AAEZF,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,IAFL;AAGZW,MAAAA,kBAAkB,EAAE,KAAKA,kBAHb;AAIZjB,MAAAA,kBAAkB,EAAE,KAAKA;AAJb,KAAd;AAQA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEgB,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK1B,KAAL,CAAW4B,QADd,CADF;AAKD;;AA1EyC;AAA/B9B,Y,CACJ+B,W,GAAcnC,a;AA4EvB,eAAeC,WAAf","sourcesContent":["import React, { Component, useContext } from 'react'\r\n\r\nimport api from \"../api\"\r\n\r\nimport SocketContext from './SocketProvider';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport class UserProvider extends Component {\r\n  static contextType = SocketContext\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      error: null,\r\n      loading: Boolean,\r\n      requesting: Boolean\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.requesting) {\r\n      this.setState({\r\n        loading: true,\r\n        requesting: true\r\n      });\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n          this.setState({\r\n            user: user.data.data,\r\n            loading: false,\r\n            requesting: false\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            loading: true,\r\n            requesting: false,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createUser = () => {\r\n\r\n  }\r\n\r\n  deleteUser = () => {\r\n\r\n  }\r\n\r\n  updateUser = async (id, body) => {\r\n    const payload = body\r\n\r\n    await api.updateUserChannelsById(id, payload).then(res => {\r\n    })\r\n  }\r\n\r\n  deleteUserChannels = async (id, channelId) => {\r\n    console.log(channelId)\r\n    const payload = channelId\r\n\r\n    await api.deleteUserChannelsById(id, payload).then(res => {\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      loading: this.state.loading,\r\n      user: this.state.user,\r\n      updateUserChannels: this.updateUserChannels,\r\n      deleteUserChannels: this.deleteUserChannels\r\n      \r\n    }\r\n\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContext"]},"metadata":{},"sourceType":"module"}