{"ast":null,"code":"import { useEffect, useState, useCallback } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport api from \"../api\"; // Cette fonction renvoie les données du client\n\nfunction getClient(id) {\n  return new Promise(resolve => {\n    api.getUserById(id).then(user => {\n      return resolve(user.data.data);\n    });\n  });\n}\n\nexport default function useExternalStorage() {\n  // Récupération de l'id du client pour pouvoir identifier la cible de la requête\n  const [id] = useLocalStorage('id'); // Initialisation du \"useState\" pour stocké les données\n\n  const [value, setValue] = useState(null); // Le \"useEffect\" est utilisé pour géré l'asynchrone\n\n  useEffect(() => {\n    getClient(id).then(client => setValue(client));\n  }, []);\n  return [value, setValue];\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V10/client/src/hooks/useExternalStorage.js"],"names":["useEffect","useState","useCallback","useLocalStorage","api","getClient","id","Promise","resolve","getUserById","then","user","data","useExternalStorage","value","setValue","client"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,EAA8BC,WAA9B,QAAiD,OAAjD;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,GAAP,MAAgB,QAAhB,C,CAEA;;AACA,SAASC,SAAT,CAAmBC,EAAnB,EAAuB;AACrB,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BJ,IAAAA,GAAG,CAACK,WAAJ,CAAgBH,EAAhB,EAAoBI,IAApB,CACGC,IAAD,IAAU;AACR,aAAOH,OAAO,CAACG,IAAI,CAACC,IAAL,CAAUA,IAAX,CAAd;AACD,KAHH;AAID,GALM,CAAP;AAMD;;AAED,eAAe,SAASC,kBAAT,GAA8B;AAC3C;AACA,QAAM,CAACP,EAAD,IAAOH,eAAe,CAAC,IAAD,CAA5B,CAF2C,CAG3C;;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAC,IAAD,CAAlC,CAJ2C,CAM3C;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,SAAS,CAACC,EAAD,CAAT,CAAcI,IAAd,CAAmBM,MAAM,IAAID,QAAQ,CAACC,MAAD,CAArC;AACD,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO,CAACF,KAAD,EAAQC,QAAR,CAAP;AACD","sourcesContent":["import { useEffect, useState, useCallback } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nimport api from \"../api\"\n\n// Cette fonction renvoie les données du client\nfunction getClient(id) {\n  return new Promise((resolve) => {\n    api.getUserById(id).then(\n      (user) => {\n        return resolve(user.data.data)\n      })\n  })\n}\n\nexport default function useExternalStorage() {\n  // Récupération de l'id du client pour pouvoir identifier la cible de la requête\n  const [id] = useLocalStorage('id')\n  // Initialisation du \"useState\" pour stocké les données\n  const [value, setValue] = useState(null);\n\n  // Le \"useEffect\" est utilisé pour géré l'asynchrone\n  useEffect(() => {\n    getClient(id).then(client => setValue(client))\n  }, [])\n\n  return [value, setValue]\n}"]},"metadata":{},"sourceType":"module"}