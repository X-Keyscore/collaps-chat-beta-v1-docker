{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\collaps-chat\\\\dev\\\\Beta\\\\V1\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { useContext, useState, useEffect } from 'react';\nimport api from \"../api\";\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport function UserProvider({\n  localStorage,\n  children\n}) {\n  const [client, setClient] = useState(null);\n  const id = localStorage.id;\n  const token = localStorage.token;\n  useEffect(() => {\n    // Si le client n'est pas null pas besoin de mise a jour\n    if (client === null) {\n      // Je récupère les données du client grace à l'api\n      api.getUserById(id).then(response => {\n        var userEdit = response.data.user; // Assignation de la valeur \"avatar\" à \"userEdit\"\n\n        Object.assign(userEdit, {\n          avatarLink: `http://localhost:3000/api/file_avatar/id/`\n        }); // https://collaps.xyz/collapsapi/api/file_avatar/id/ //${userEdit.id}\n\n        console.log(userEdit);\n        return setClient(userEdit); //\n      });\n    }\n  }, [id, client]);\n\n  function loginUser(id, body) {\n    const payload = body;\n    api.updateUserById(id, payload);\n  }\n\n  function registeringUser(id, body) {\n    const payload = body;\n    api.updateUserById(id, payload);\n  }\n\n  function updateUser(id, body) {\n    const payload = body;\n    api.updateUserById(id, payload);\n  }\n\n  const value = {\n    client,\n    setClient,\n    updateUser\n  };\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport default UserContext; // https://dmitripavlutin.com/react-usestate-hook-guide/","map":{"version":3,"sources":["C:/Users/anton/Desktop/collaps-chat/dev/Beta/V1/client/src/contexts/UserProvider.js"],"names":["React","useContext","useState","useEffect","api","UserContext","createContext","useUser","UserProvider","localStorage","children","client","setClient","id","token","getUserById","then","response","userEdit","data","user","Object","assign","avatarLink","console","log","loginUser","body","payload","updateUserById","registeringUser","updateUser","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;AAED,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA,YAAF;AAAgBC,EAAAA;AAAhB,CAAtB,EAAkD;AACvD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMW,EAAE,GAAGJ,YAAY,CAACI,EAAxB;AACA,QAAMC,KAAK,GAAGL,YAAY,CAACK,KAA3B;AAEAX,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIQ,MAAM,KAAK,IAAf,EAAqB;AACnB;AACAP,MAAAA,GAAG,CAACW,WAAJ,CAAgBF,EAAhB,EAAoBG,IAApB,CACGC,QAAD,IAAc;AACZ,YAAIC,QAAQ,GAAGD,QAAQ,CAACE,IAAT,CAAcC,IAA7B,CADY,CAEZ;;AACAC,QAAAA,MAAM,CAACC,MAAP,CAAcJ,QAAd,EAAwB;AAAEK,UAAAA,UAAU,EAAG;AAAf,SAAxB,EAHY,CAGwE;;AACpFC,QAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACA,eAAON,SAAS,CAACM,QAAD,CAAhB,CALY,CAKc;AAC7B,OAPD;AAQD;AACF,GAbQ,EAaN,CAACL,EAAD,EAAKF,MAAL,CAbM,CAAT;;AAeA,WAASe,SAAT,CAAmBb,EAAnB,EAAuBc,IAAvB,EAA6B;AAC3B,UAAMC,OAAO,GAAGD,IAAhB;AACAvB,IAAAA,GAAG,CAACyB,cAAJ,CAAmBhB,EAAnB,EAAuBe,OAAvB;AACD;;AAED,WAASE,eAAT,CAAyBjB,EAAzB,EAA6Bc,IAA7B,EAAmC;AACjC,UAAMC,OAAO,GAAGD,IAAhB;AACAvB,IAAAA,GAAG,CAACyB,cAAJ,CAAmBhB,EAAnB,EAAuBe,OAAvB;AACD;;AAED,WAASG,UAAT,CAAoBlB,EAApB,EAAwBc,IAAxB,EAA8B;AAC5B,UAAMC,OAAO,GAAGD,IAAhB;AACAvB,IAAAA,GAAG,CAACyB,cAAJ,CAAmBhB,EAAnB,EAAuBe,OAAvB;AACD;;AAED,QAAMI,KAAK,GAAG;AACZrB,IAAAA,MADY;AAEZC,IAAAA,SAFY;AAGZmB,IAAAA;AAHY,GAAd;AAMA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEC,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGtB,QADH,CADF;AAKD;AAED,eAAeL,WAAf,C,CAEA","sourcesContent":["import React, { useContext, useState, useEffect } from 'react'\r\nimport api from \"../api\"\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport function UserProvider({ localStorage, children }) {\r\n  const [client, setClient] = useState(null)\r\n  const id = localStorage.id\r\n  const token = localStorage.token\r\n\r\n  useEffect(() => {\r\n    // Si le client n'est pas null pas besoin de mise a jour\r\n    if (client === null) {\r\n      // Je récupère les données du client grace à l'api\r\n      api.getUserById(id).then(\r\n        (response) => {\r\n          var userEdit = response.data.user\r\n          // Assignation de la valeur \"avatar\" à \"userEdit\"\r\n          Object.assign(userEdit, { avatarLink: `http://localhost:3000/api/file_avatar/id/` })// https://collaps.xyz/collapsapi/api/file_avatar/id/ //${userEdit.id}\r\n          console.log(userEdit)\r\n          return setClient(userEdit)//\r\n      })\r\n    }\r\n  }, [id, client])\r\n\r\n  function loginUser(id, body) {\r\n    const payload = body\r\n    api.updateUserById(id, payload)\r\n  }\r\n\r\n  function registeringUser(id, body) {\r\n    const payload = body\r\n    api.updateUserById(id, payload)\r\n  }\r\n\r\n  function updateUser(id, body) {\r\n    const payload = body\r\n    api.updateUserById(id, payload)\r\n  }\r\n\r\n  const value = {\r\n    client,\r\n    setClient,\r\n    updateUser\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default UserContext\r\n\r\n// https://dmitripavlutin.com/react-usestate-hook-guide/"]},"metadata":{},"sourceType":"module"}