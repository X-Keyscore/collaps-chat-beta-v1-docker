{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V8\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { Component, useContext } from 'react';\nimport api from \"../api\";\nimport SocketContext from './SocketProvider';\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createUser = async () => {\n      const socket = this.context;\n\n      if (socket !== undefined) {\n        const socket = this.context;\n        console.log(socket);\n        socket.on('user-disconnected', name => {\n          console.log(\"test\");\n        });\n      }\n    };\n\n    this.updateUser = () => {};\n\n    this.deleteUser = () => {};\n\n    this.state = {\n      user: null,\n      isLoaded: false,\n      requesting: true,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.requesting) {\n      this.setState({\n        isLoaded: true\n      });\n      api.getUserById(this.props.id).then(user => {\n        this.setState({\n          user: user.data.data,\n          isLoaded: false,\n          requesting: false\n        });\n      }, error => {\n        this.setState({\n          isLoaded: false,\n          requesting: false,\n          error\n        });\n      });\n    }\n  }\n\n  render() {\n    this.createUser();\n    const value = {\n      user: this.state.user\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nUserProvider.contextType = SocketContext;\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V8/client/src/contexts/UserProvider.js"],"names":["React","Component","useContext","api","SocketContext","UserContext","createContext","useUser","UserProvider","constructor","props","createUser","socket","context","undefined","console","log","on","name","updateUser","deleteUser","state","user","isLoaded","requesting","error","componentDidMount","setState","getUserById","id","then","data","render","value","children","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOL,UAAU,CAACG,WAAD,CAAjB;AACD;AAED,OAAO,MAAMG,YAAN,SAA2BP,SAA3B,CAAqC;AAE1CQ,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAkCnBC,UAlCmB,GAkCN,YAAY;AACvB,YAAMC,MAAM,GAAG,KAAKC,OAApB;;AAEA,UAAID,MAAM,KAAKE,SAAf,EAA0B;AACxB,cAAMF,MAAM,GAAG,KAAKC,OAApB;AACAE,QAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACAA,QAAAA,MAAM,CAACK,EAAP,CAAU,mBAAV,EAA+BC,IAAI,IAAI;AACrCH,UAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD,SAFD;AAGD;AACF,KA5CkB;;AAAA,SA8CnBG,UA9CmB,GA8CN,MAAM,CAElB,CAhDkB;;AAAA,SAkDnBC,UAlDmB,GAkDN,MAAM,CAElB,CApDkB;;AAEjB,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,IADK;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,UAAU,EAAE,IAHD;AAIXC,MAAAA,KAAK,EAAE;AAJI,KAAb;AAMD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKL,KAAL,CAAWG,UAAf,EAA2B;AACzB,WAAKG,QAAL,CAAc;AACZJ,QAAAA,QAAQ,EAAE;AADE,OAAd;AAGApB,MAAAA,GAAG,CAACyB,WAAJ,CAAgB,KAAKlB,KAAL,CAAWmB,EAA3B,EAA+BC,IAA/B,CACGR,IAAD,IAAU;AACR,aAAKK,QAAL,CAAc;AACZL,UAAAA,IAAI,EAAEA,IAAI,CAACS,IAAL,CAAUA,IADJ;AAEZR,UAAAA,QAAQ,EAAE,KAFE;AAGZC,UAAAA,UAAU,EAAE;AAHA,SAAd;AAKD,OAPH,EAQGC,KAAD,IAAW;AACT,aAAKE,QAAL,CAAc;AACZJ,UAAAA,QAAQ,EAAE,KADE;AAEZC,UAAAA,UAAU,EAAE,KAFA;AAGZC,UAAAA;AAHY,SAAd;AAKD,OAdH;AAgBD;AACF;;AAsBDO,EAAAA,MAAM,GAAG;AACP,SAAKrB,UAAL;AACA,UAAMsB,KAAK,GAAG;AACZX,MAAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC;AADL,KAAd;AAIA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEW,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKvB,KAAL,CAAWwB,QADd,CADF;AAKD;;AAnEyC;AAA/B1B,Y,CACJ2B,W,GAAc/B,a;AAqEvB,eAAeC,WAAf","sourcesContent":["import React, { Component, useContext } from 'react'\r\n\r\nimport api from \"../api\"\r\n\r\nimport SocketContext from './SocketProvider';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport class UserProvider extends Component {\r\n  static contextType = SocketContext\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      isLoaded: false,\r\n      requesting: true,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.state.requesting) {\r\n      this.setState({\r\n        isLoaded: true\r\n      });\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n          this.setState({\r\n            user: user.data.data,\r\n            isLoaded: false,\r\n            requesting: false\r\n          });\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: false,\r\n            requesting: false,\r\n            error\r\n          });\r\n        }\r\n      )\r\n    }\r\n  }\r\n\r\n  createUser = async () => {\r\n    const socket = this.context\r\n    \r\n    if (socket !== undefined) {\r\n      const socket = this.context\r\n      console.log(socket)\r\n      socket.on('user-disconnected', name => {\r\n        console.log(\"test\")\r\n      })\r\n    }\r\n  }\r\n\r\n  updateUser = () => {\r\n\r\n  }\r\n\r\n  deleteUser = () => {\r\n\r\n  }\r\n\r\n  render() {\r\n    this.createUser()\r\n    const value = {\r\n      user: this.state.user\r\n    }\r\n\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContext"]},"metadata":{},"sourceType":"module"}