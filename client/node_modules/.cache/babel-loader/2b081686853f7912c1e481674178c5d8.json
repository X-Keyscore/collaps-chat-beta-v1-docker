{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V8\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { useContext, useState } from 'react';\nimport api from \"../api\";\nimport SocketContext from './SocketProvider';\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport function UserProvider({\n  id,\n  children\n}) {\n  const [state, setState] = useState();\n  /*\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      isLoaded: false,\r\n      requesting: true,\r\n      error: null\r\n    };\r\n  }*/\n\n  if (this.state.requesting) {\n    this.setState({\n      isLoaded: true\n    });\n    api.getUserById(this.props.id).then(user => {\n      this.setState({\n        user: user.data.data,\n        isLoaded: false,\n        requesting: false\n      });\n    }, error => {\n      this.setState({\n        isLoaded: false,\n        requesting: false,\n        error\n      });\n    });\n  }\n\n  createUser = () => {};\n\n  updateUser = () => {};\n\n  deleteUser = () => {};\n\n  console.log(this.context); //const socket = this.context.socket\n\n  /*\r\n  socket.on('user-disconnected', name => {\r\n    console.log(\"test\")\r\n  })\r\n  */\n\n  const value = {\n    user: this.state.user\n  };\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, this.props.children);\n}\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V8/client/src/contexts/UserProvider.js"],"names":["React","useContext","useState","api","SocketContext","UserContext","createContext","useUser","UserProvider","id","children","state","setState","requesting","isLoaded","getUserById","props","then","user","data","error","createUser","updateUser","deleteUser","console","log","context","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAON,UAAU,CAACI,WAAD,CAAjB;AACD;AAED,OAAO,SAASG,YAAT,CAAsB;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAtB,EAAwC;AAC7C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;AACA;;;;;;;;;;;AAWA,MAAI,KAAKS,KAAL,CAAWE,UAAf,EAA2B;AACzB,SAAKD,QAAL,CAAc;AACZE,MAAAA,QAAQ,EAAE;AADE,KAAd;AAGAX,IAAAA,GAAG,CAACY,WAAJ,CAAgB,KAAKC,KAAL,CAAWP,EAA3B,EAA+BQ,IAA/B,CACGC,IAAD,IAAU;AACR,WAAKN,QAAL,CAAc;AACZM,QAAAA,IAAI,EAAEA,IAAI,CAACC,IAAL,CAAUA,IADJ;AAEZL,QAAAA,QAAQ,EAAE,KAFE;AAGZD,QAAAA,UAAU,EAAE;AAHA,OAAd;AAKD,KAPH,EAQGO,KAAD,IAAW;AACT,WAAKR,QAAL,CAAc;AACZE,QAAAA,QAAQ,EAAE,KADE;AAEZD,QAAAA,UAAU,EAAE,KAFA;AAGZO,QAAAA;AAHY,OAAd;AAKD,KAdH;AAgBD;;AAEDC,EAAAA,UAAU,GAAG,MAAM,CAElB,CAFD;;AAIAC,EAAAA,UAAU,GAAG,MAAM,CAElB,CAFD;;AAIAC,EAAAA,UAAU,GAAG,MAAM,CAElB,CAFD;;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,OAAjB,EA9C6C,CA+C7C;;AACA;;;;;;AAKA,QAAMC,KAAK,GAAG;AACZT,IAAAA,IAAI,EAAE,KAAKP,KAAL,CAAWO;AADL,GAAd;AAIA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAES,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,KAAKX,KAAL,CAAWN,QADd,CADF;AAKD;AAED,eAAeL,WAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\n\r\nimport api from \"../api\"\r\n\r\nimport SocketContext from './SocketProvider';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport function UserProvider({ id, children }) {\r\n  const [state, setState] = useState()\r\n  /*\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      user: null,\r\n      isLoaded: false,\r\n      requesting: true,\r\n      error: null\r\n    };\r\n  }*/\r\n\r\n  if (this.state.requesting) {\r\n    this.setState({\r\n      isLoaded: true\r\n    });\r\n    api.getUserById(this.props.id).then(\r\n      (user) => {\r\n        this.setState({\r\n          user: user.data.data,\r\n          isLoaded: false,\r\n          requesting: false\r\n        });\r\n      },\r\n      (error) => {\r\n        this.setState({\r\n          isLoaded: false,\r\n          requesting: false,\r\n          error\r\n        });\r\n      }\r\n    )\r\n  }\r\n\r\n  createUser = () => {\r\n\r\n  }\r\n\r\n  updateUser = () => {\r\n\r\n  }\r\n\r\n  deleteUser = () => {\r\n\r\n  }\r\n  console.log(this.context)\r\n  //const socket = this.context.socket\r\n  /*\r\n  socket.on('user-disconnected', name => {\r\n    console.log(\"test\")\r\n  })\r\n  */\r\n  const value = {\r\n    user: this.state.user\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {this.props.children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default UserContext"]},"metadata":{},"sourceType":"module"}