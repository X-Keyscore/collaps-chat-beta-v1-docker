{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V10\\\\client\\\\src\\\\components\\\\container\\\\OpenConversation.js\";\nimport React, { useState, useEffect, useCallback } from 'react';\nimport api from '../../api';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\nexport default function OpenConversation() {\n  // Récupération des informations du client\n  const {\n    getUser,\n    updateUser\n  } = useUser(); // Récupération de la fonction pour envoyer les messages est du \"channel\" sélectionné\n\n  const {\n    sendMessage,\n    selectedChannel\n  } = useChannels(); // Création d'un \"useState\" pour stocker les données du client\n\n  const [client, setClient] = useState(null); // Je charge les données\n\n  useEffect(() => {\n    getUser().then(client => {\n      setClient(client);\n    }); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const [text, setText] = useState('');\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({\n        smooth: true\n      });\n    }\n  }, []); // Fonction pour supprimer un \"channel\" dans les données du client est dans celle du destinataire\n\n  function deleteChannel() {\n    // Je teste si le \"channel\" est privé ou un groupe\n    if (selectedChannel.type === \"private\") {\n      // J'isole les données du client dans une variable pour pouvoir les modifier\n      var userClientEdit = client; // Je boucle tous les \"channels\" du client\n\n      for (let i = 0; i < userClientEdit.channels.length; i++) {\n        // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n        if (userClientEdit.channels[i].id === selectedChannel.id) {\n          // Je supprime le channel dans la liste grace à sa position\n          userClientEdit.channels.splice(i, 1); // Je mets à jour le client\n\n          updateUser(userClientEdit.id, {\n            data: {\n              channels: userClientEdit.channels\n            }\n          });\n        }\n      } // Récupération des données du destinataire avec son id\n\n\n      api.getUserById(selectedChannel.recipients.id).then(userRecipient => {\n        // J'isole les données du destinataire dans une variable pour pouvoir les modifier\n        var userRecipientEdit = userRecipient.data.data; // Je boucle tous les \"channels\" du destinataire\n\n        for (let i = 0; i < userRecipientEdit.channels.length; i++) {\n          // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n          if (userRecipientEdit.channels[i].id === selectedChannel.id) {\n            // Je supprime le channel dans la liste grace à sa position\n            userRecipientEdit.channels.splice(i, 1); // Je mets à jour le destinataire\n\n            updateUser(userRecipientEdit.id, {\n              data: {\n                channels: userRecipientEdit.channels\n              }\n            });\n          }\n        }\n      }, error => {\n        console.log(error);\n      });\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault(); // channel, client, recipients, text\n\n    sendMessage(selectedChannel, selectedChannel.recipients.map(r => r.id), text);\n    setText('');\n  }\n\n  var lastSenderNow;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-user-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n    alt: \"user profil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, selectedChannel.recipients.pseudo), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statut online\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    \"aria-hidden\": \"false\",\n    width: \"10\",\n    height: \"15\",\n    x: \"0\",\n    y: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-icon-small-red\",\n    type: \"button\",\n    onClick: deleteChannel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    \"aria-hidden\": \"false\",\n    width: \"20\",\n    height: \"20\",\n    x: \"0\",\n    y: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"currentColor\",\n    points: \"512,338.954 483.732,310.686 411.772,382.646 339.812,310.686 311.543,338.954 383.503,410.914 311.543,482.874  339.812,511.142 411.772,439.182 483.732,511.142 512,482.874 440.04,410.914 \\t\\t\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M255.858,0.142c-81.562,0-147.918,66.356-147.918,147.918c0,50.52,25.465,95.198,64.226,121.894 c-36.19,12.488-69.36,33.118-97.227,60.984C26.614,379.265,0,443.516,0,511.858h39.978c0-119.037,96.843-215.88,215.88-215.88 c81.562,0,147.918-66.355,147.918-147.918C403.776,66.498,337.42,0.142,255.858,0.142z M255.858,256 c-59.518,0-107.94-48.421-107.94-107.94S196.34,40.12,255.858,40.12c59.518,0,107.94,48.421,107.94,107.94 S315.376,256,255.858,256z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-body scroller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, selectedChannel.messages.map((message, index) => {\n    const lastMessage = selectedChannel.messages.length - 1 === index; // Détecte si plus de deux messages a la suite sont du même destinataire\n\n    var lastSenderPass = lastSenderNow;\n    lastSenderNow = message.sender;\n    return lastSenderNow !== lastSenderPass ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message parents\",\n      key: index,\n      ref: lastMessage ? setRef : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avatar\",\n      src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n      alt: \"user profil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"message-body-message-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pseudo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 21\n      }\n    }, message.fromMe ? 'You' : message.senderName), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 21\n      }\n    }, \"Date none\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, message.text)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message children\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 19\n      }\n    }, message.text));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-body-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"message-footer-toolbar\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-footer-toolbar-uploadBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"icon\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12 2.00098C6.486 2.00098 2 6.48698 2 12.001C2 17.515 6.486 22.001 12 22.001C17.514 22.001 22 17.515 22 12.001C22 6.48698 17.514 2.00098 12 2.00098ZM17 13.001H13V17.001H11V13.001H7V11.001H11V7.00098H13V11.001H17V13.001Z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"file\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"msgTextarea\",\n    className: \"message-footer-toolbar-textarea scroller\",\n    placeholder: \"Envoyer un message à \" + selectedChannel.recipients.pseudo,\n    spellCheck: \"true\",\n    autoFocus: true,\n    autoComplete: \"off\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"message-footer-toolbar-sendBtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    \"aria-hidden\": \"false\",\n    width: \"20\",\n    height: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M481.508,210.336L68.414,38.926c-17.403-7.222-37.064-4.045-51.309,8.287C2.86,59.547-3.098,78.551,1.558,96.808 L38.327,241h180.026c8.284,0,15.001,6.716,15.001,15.001c0,8.284-6.716,15.001-15.001,15.001H38.327L1.558,415.193 c-4.656,18.258,1.301,37.262,15.547,49.595c14.274,12.357,33.937,15.495,51.31,8.287l413.094-171.409 C500.317,293.862,512,276.364,512,256.001C512,235.638,500.317,218.139,481.508,210.336z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 15\n    }\n  }))))));\n} //selectedChannel.recipients.map(r => r.pseudo).join(', ')","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V10/client/src/components/container/OpenConversation.js"],"names":["React","useState","useEffect","useCallback","api","useUser","useChannels","OpenConversation","getUser","updateUser","sendMessage","selectedChannel","client","setClient","then","text","setText","setRef","node","scrollIntoView","smooth","deleteChannel","type","userClientEdit","i","channels","length","id","splice","data","getUserById","recipients","userRecipient","userRecipientEdit","error","console","log","handleSubmit","e","preventDefault","map","r","lastSenderNow","pseudo","messages","message","index","lastMessage","lastSenderPass","sender","fromMe","senderName","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport api from '../../api'\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function OpenConversation() {\n\n  // Récupération des informations du client\n  const { getUser, updateUser } = useUser()\n\n  // Récupération de la fonction pour envoyer les messages est du \"channel\" sélectionné\n  const { sendMessage, selectedChannel } = useChannels()\n\n  // Création d'un \"useState\" pour stocker les données du client\n  const [client, setClient] = useState(null);\n\n  // Je charge les données\n  useEffect(() => {\n    getUser().then(client => {\n      setClient(client)\n    })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [])\n\n  const [text, setText] = useState('')\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({ smooth: true })\n    }\n  }, [])\n\n  // Fonction pour supprimer un \"channel\" dans les données du client est dans celle du destinataire\n  function deleteChannel() {\n\n    // Je teste si le \"channel\" est privé ou un groupe\n    if (selectedChannel.type === \"private\") {\n\n      // J'isole les données du client dans une variable pour pouvoir les modifier\n      var userClientEdit = client\n\n      // Je boucle tous les \"channels\" du client\n      for (let i = 0; i < userClientEdit.channels.length; i++) {\n        // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n        if (userClientEdit.channels[i].id === selectedChannel.id) {\n          // Je supprime le channel dans la liste grace à sa position\n          userClientEdit.channels.splice(i, 1);\n          // Je mets à jour le client\n          updateUser(userClientEdit.id, { data: { channels: userClientEdit.channels } })\n        }\n      }\n\n      // Récupération des données du destinataire avec son id\n      api.getUserById(selectedChannel.recipients.id).then(\n        (userRecipient) => {\n\n          // J'isole les données du destinataire dans une variable pour pouvoir les modifier\n          var userRecipientEdit = userRecipient.data.data\n\n          // Je boucle tous les \"channels\" du destinataire\n          for (let i = 0; i < userRecipientEdit.channels.length; i++) {\n            // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n            if (userRecipientEdit.channels[i].id === selectedChannel.id) {\n              // Je supprime le channel dans la liste grace à sa position\n              userRecipientEdit.channels.splice(i, 1);\n              // Je mets à jour le destinataire\n              updateUser(userRecipientEdit.id, { data: { channels: userRecipientEdit.channels } })\n            }\n          }\n\n        },\n        (error) => {\n          console.log(error)\n        }\n      )\n    }\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    // channel, client, recipients, text\n    sendMessage(\n      selectedChannel,\n      \n      selectedChannel.recipients.map(r => r.id),\n      text\n    )\n    setText('')\n  }\n\n  var lastSenderNow;\n\n  return (\n    <div className=\"message\">\n      <div className=\"message-header\">\n        <div className=\"message-header-user\">\n          <div className=\"message-header-user-avatar\">\n            <img className=\"avatar\"\n              src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\"\n              alt=\"user profil\" />\n          </div>\n          <div className=\"message-header-user-info\">\n            <div className=\"username\">\n              {selectedChannel.recipients.pseudo}\n            </div>\n            <div className=\"statut online\">\n              <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"10\" height=\"15\" x=\"0\" y=\"0\">\n                <path fill=\"currentColor\"\n                  d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"message-header-toolbar\">\n          <button className=\"btn-icon-small-red\" type=\"button\" onClick={deleteChannel}>\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\" x=\"0\" y=\"0\">\n              <polygon fill=\"currentColor\" points=\"512,338.954 483.732,310.686 411.772,382.646 339.812,310.686 311.543,338.954 383.503,410.914 311.543,482.874 \n              339.812,511.142 411.772,439.182 483.732,511.142 512,482.874 440.04,410.914 \t\t\"/>\n              <path fill=\"currentColor\" d=\"M255.858,0.142c-81.562,0-147.918,66.356-147.918,147.918c0,50.52,25.465,95.198,64.226,121.894\n              c-36.19,12.488-69.36,33.118-97.227,60.984C26.614,379.265,0,443.516,0,511.858h39.978c0-119.037,96.843-215.88,215.88-215.88\n              c81.562,0,147.918-66.355,147.918-147.918C403.776,66.498,337.42,0.142,255.858,0.142z M255.858,256\n              c-59.518,0-107.94-48.421-107.94-107.94S196.34,40.12,255.858,40.12c59.518,0,107.94,48.421,107.94,107.94\n              S315.376,256,255.858,256z\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div className=\"message-body scroller\">\n        {\n          selectedChannel.messages.map((message, index) => {\n            const lastMessage = selectedChannel.messages.length - 1 === index\n\n            // Détecte si plus de deux messages a la suite sont du même destinataire\n            var lastSenderPass = lastSenderNow;\n            lastSenderNow = message.sender;\n\n            return (\n              lastSenderNow !== lastSenderPass\n                ?\n                <div\n                  className=\"message-body-message parents\"\n                  key={index}\n                  ref={lastMessage ? setRef : null}\n                >\n                  <div className=\"message-body-message-avatar\">\n                    <img className=\"avatar\"\n                      src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\"\n                      alt=\"user profil\" />\n                  </div>\n                  <h2 className=\"message-body-message-header\">\n                    <span className=\"pseudo\">\n                      {message.fromMe ? 'You' : message.senderName}\n                    </span>\n                    <span className=\"timestamp\">\n                      Date none\n                    </span>\n                  </h2>\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n                :\n                <div\n                  className=\"message-body-message children\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n            )\n          })\n        }\n\n        <div className=\"message-body-spacer\"></div>\n      </div>\n      <div className=\"message-footer\">\n        <form className=\"message-footer-toolbar\" onSubmit={handleSubmit}>\n\n          <div className=\"message-footer-toolbar-uploadBtn\">\n            <svg className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"currentColor\" d=\"M12 2.00098C6.486 2.00098 2 6.48698 2 12.001C2 17.515 6.486 22.001 12 22.001C17.514 22.001 22 17.515 22 12.001C22\n                    6.48698 17.514 2.00098 12 2.00098ZM17 13.001H13V17.001H11V13.001H7V11.001H11V7.00098H13V11.001H17V13.001Z\">\n              </path>\n            </svg>\n            <input className=\"input\" type=\"file\" multiple />\n          </div>\n\n          <textarea id=\"msgTextarea\" className=\"message-footer-toolbar-textarea scroller\" placeholder={\"Envoyer un message à \" + selectedChannel.recipients.pseudo}\n            spellCheck=\"true\" autoFocus autoComplete=\"off\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n          ></textarea>\n\n          <button className=\"message-footer-toolbar-sendBtn\" type=\"submit\">\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\">\n              <path fill=\"currentColor\" d=\"M481.508,210.336L68.414,38.926c-17.403-7.222-37.064-4.045-51.309,8.287C2.86,59.547-3.098,78.551,1.558,96.808\n                  L38.327,241h180.026c8.284,0,15.001,6.716,15.001,15.001c0,8.284-6.716,15.001-15.001,15.001H38.327L1.558,415.193\n                  c-4.656,18.258,1.301,37.262,15.547,49.595c14.274,12.357,33.937,15.495,51.31,8.287l413.094-171.409\n                  C500.317,293.862,512,276.364,512,256.001C512,235.638,500.317,218.139,481.508,210.336z\" />\n            </svg>\n          </button>\n\n        </form>\n      </div>\n    </div>\n  )\n}\n//selectedChannel.recipients.map(r => r.pseudo).join(', ')"]},"metadata":{},"sourceType":"module"}