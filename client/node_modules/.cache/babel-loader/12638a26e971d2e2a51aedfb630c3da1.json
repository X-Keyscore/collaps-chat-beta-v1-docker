{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V8\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { useContext, useState } from 'react';\nimport useLocalStorage from '../hooks/useLocalStorage';\nconst UserContext = React.createContext();\nexport function useConversations() {\n  return useContext(UserContext);\n}\nexport async function ConversationsProvider({\n  id,\n  children\n}) {\n  const [conversations, setConversations] = useLocalStorage('conversations', []);\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0);\n\n  async function test() {\n    setTimeout(function () {\n      return \"tet\";\n    }, 1000);\n  }\n\n  const value = {\n    user: await test()\n  };\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: value,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, children);\n}\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V8/client/src/contexts/UserProvider.js"],"names":["React","useContext","useState","useLocalStorage","UserContext","createContext","useConversations","ConversationsProvider","id","children","conversations","setConversations","selectedConversationIndex","setSelectedConversationIndex","test","setTimeout","value","user"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AAEA,MAAMC,WAAW,GAAGJ,KAAK,CAACK,aAAN,EAApB;AAEA,OAAO,SAASC,gBAAT,GAA4B;AACjC,SAAOL,UAAU,CAACG,WAAD,CAAjB;AACD;AAED,OAAO,eAAeG,qBAAf,CAAqC;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAArC,EAAuD;AAC5D,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,eAAe,CAAC,eAAD,EAAkB,EAAlB,CAAzD;AACA,QAAM,CAACS,yBAAD,EAA4BC,4BAA5B,IAA4DX,QAAQ,CAAC,CAAD,CAA1E;;AAEA,iBAAeY,IAAf,GAAsB;AACpBC,IAAAA,UAAU,CAAC,YAAY;AACrB,aAAO,KAAP;AACD,KAFS,EAEP,IAFO,CAAV;AAGD;;AAED,QAAMC,KAAK,GAAG;AACZC,IAAAA,IAAI,EAAE,MAAMH,IAAI;AADJ,GAAd;AAIA,sBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,QADH,CADF;AAKD;AAED,eAAeL,WAAf","sourcesContent":["import React, { useContext, useState } from 'react'\r\nimport useLocalStorage from '../hooks/useLocalStorage';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useConversations() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport async function ConversationsProvider({ id, children }) {\r\n  const [conversations, setConversations] = useLocalStorage('conversations', [])\r\n  const [selectedConversationIndex, setSelectedConversationIndex] = useState(0)\r\n\r\n  async function test() {\r\n    setTimeout(function () {\r\n      return \"tet\"\r\n    }, 1000)\r\n  }\r\n\r\n  const value = {\r\n    user: await test()\r\n  }\r\n\r\n  return (\r\n    <UserContext.Provider value={value}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  )\r\n}\r\n\r\nexport default UserContext"]},"metadata":{},"sourceType":"module"}