{"ast":null,"code":"import { useEffect, useState } from 'react';\nconst PREFIX = 'whatsapp-clone-';\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey);\n    if (jsonValue != null) return JSON.parse(jsonValue);\n\n    if (typeof initialValue === 'function') {\n      return initialValue();\n    } else {\n      return initialValue;\n    }\n  });\n  useEffect(() => {\n    // Je ne stock rien si il n'y a pas de clé\n    if (value != null) localStorage.setItem(prefixedKey, JSON.stringify(value));\n  }, [prefixedKey, value]);\n  return [value, setValue];\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V6/client/src/hooks/useLocalStorage.js"],"names":["useEffect","useState","PREFIX","useLocalStorage","key","initialValue","prefixedKey","value","setValue","jsonValue","localStorage","getItem","JSON","parse","setItem","stringify"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,MAAM,GAAG,iBAAf;AAEA,eAAe,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AACzD,QAAMC,WAAW,GAAGJ,MAAM,GAAGE,GAA7B;AACA,QAAM,CAACG,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,MAAM;AACvC,UAAMQ,SAAS,GAAGC,YAAY,CAACC,OAAb,CAAqBL,WAArB,CAAlB;AAEA,QAAIG,SAAS,IAAI,IAAjB,EAAuB,OAAOG,IAAI,CAACC,KAAL,CAAWJ,SAAX,CAAP;;AACvB,QAAI,OAAOJ,YAAP,KAAwB,UAA5B,EAAwC;AACtC,aAAOA,YAAY,EAAnB;AACD,KAFD,MAEO;AACL,aAAOA,YAAP;AACD;AACF,GATiC,CAAlC;AAWAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACA,QAAIO,KAAK,IAAI,IAAb,EAAmBG,YAAY,CAACI,OAAb,CAAqBR,WAArB,EAAkCM,IAAI,CAACG,SAAL,CAAeR,KAAf,CAAlC;AACpB,GAHQ,EAGN,CAACD,WAAD,EAAcC,KAAd,CAHM,CAAT;AAKA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst PREFIX = 'whatsapp-clone-';\n\nexport default function useLocalStorage(key, initialValue) {\n  const prefixedKey = PREFIX + key;\n  const [value, setValue] = useState(() => {\n    const jsonValue = localStorage.getItem(prefixedKey)\n\n    if (jsonValue != null) return JSON.parse(jsonValue)\n    if (typeof initialValue === 'function') {\n      return initialValue()\n    } else {\n      return initialValue\n    }\n  });\n\n  useEffect(() => {\n    // Je ne stock rien si il n'y a pas de clé\n    if (value != null) localStorage.setItem(prefixedKey, JSON.stringify(value))\n  }, [prefixedKey, value])\n\n  return [value, setValue]\n}\n"]},"metadata":{},"sourceType":"module"}