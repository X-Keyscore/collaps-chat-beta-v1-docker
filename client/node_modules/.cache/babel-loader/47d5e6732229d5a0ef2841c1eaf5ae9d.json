{"ast":null,"code":"import { useState } from \"react\";\n\nconst useAsyncReducer = (reducer, initialState = null) => {\n  const [state, setState] = useState(initialState);\n\n  const dispatch = async action => {\n    const result = reducer(state, action);\n\n    if (typeof result.then === \"function\") {\n      try {\n        const newState = await result;\n        setState(newState);\n      } catch (err) {\n        setState({ ...state,\n          error: err\n        });\n      }\n    } else {\n      setState(result);\n    }\n  };\n\n  console.log(state);\n  return [state, dispatch];\n};\n\nexport default useAsyncReducer;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V7/client/src/hooks/useAsyncReducer.js"],"names":["useState","useAsyncReducer","reducer","initialState","state","setState","dispatch","action","result","then","newState","err","error","console","log"],"mappings":"AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,MAAMC,eAAe,GAAG,CAACC,OAAD,EAAUC,YAAY,GAAG,IAAzB,KAAkC;AACxD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAACG,YAAD,CAAlC;;AAEA,QAAMG,QAAQ,GAAG,MAAMC,MAAN,IAAgB;AAC/B,UAAMC,MAAM,GAAGN,OAAO,CAACE,KAAD,EAAQG,MAAR,CAAtB;;AACA,QAAI,OAAOC,MAAM,CAACC,IAAd,KAAuB,UAA3B,EAAuC;AACrC,UAAI;AACF,cAAMC,QAAQ,GAAG,MAAMF,MAAvB;AACAH,QAAAA,QAAQ,CAACK,QAAD,CAAR;AACD,OAHD,CAGE,OAAOC,GAAP,EAAY;AACZN,QAAAA,QAAQ,CAAC,EAAE,GAAGD,KAAL;AAAYQ,UAAAA,KAAK,EAAED;AAAnB,SAAD,CAAR;AACD;AACF,KAPD,MAOO;AACLN,MAAAA,QAAQ,CAACG,MAAD,CAAR;AACD;AACF,GAZD;;AAaAK,EAAAA,OAAO,CAACC,GAAR,CAAYV,KAAZ;AACA,SAAO,CAACA,KAAD,EAAQE,QAAR,CAAP;AACD,CAlBD;;AAoBA,eAAeL,eAAf","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useAsyncReducer = (reducer, initialState = null) => {\r\n  const [state, setState] = useState(initialState);\r\n\r\n  const dispatch = async action => {\r\n    const result = reducer(state, action);\r\n    if (typeof result.then === \"function\") {\r\n      try {\r\n        const newState = await result;\r\n        setState(newState);\r\n      } catch (err) {\r\n        setState({ ...state, error: err });\r\n      }\r\n    } else {\r\n      setState(result);\r\n    }\r\n  };\r\n  console.log(state)\r\n  return [state, dispatch];\r\n};\r\n\r\nexport default useAsyncReducer;"]},"metadata":{},"sourceType":"module"}