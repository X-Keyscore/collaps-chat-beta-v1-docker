{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V7\\\\client\\\\src\\\\contexts\\\\UserContext.js\";\nimport React, { Component } from 'react';\nimport api from '../api';\nconst UserContext = React.createContext();\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false\n    };\n  }\n\n  render() {\n    const value = {\n      user: {\n        id: \"fghfghfghfghfghfghgf\"\n      }\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nexport default UserContext;\n/*\n  componentDidMount = async () => {\n    this.setState({ isLoading: true })\n    await api.getUserById(this.props.id).then(user => {\n      this.setState({\n        user: user.data.data,\n        isLoading: false\n      })\n    })\n  }\n*/","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V7/client/src/contexts/UserContext.js"],"names":["React","Component","api","UserContext","createContext","UserProvider","constructor","props","state","isLoading","render","value","user","id","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEA,OAAO,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAC1CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,SAAS,EAAE;AADA,KAAb;AAGD;;AAEDC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG;AACZC,MAAAA,IAAI,EAAE;AACJC,QAAAA,EAAE,EAAE;AADA;AADM,KAAd;AAKA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEF,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKJ,KAAL,CAAWO,QADd,CADF;AAKD;;AAnByC;AAsB5C,eAAeX,WAAf;AAEA","sourcesContent":["import React, { Component } from 'react'\nimport api from '../api'\n\nconst UserContext = React.createContext()\n\nexport class UserProvider extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      isLoading: false\n    }\n  }\n\n  render() {\n    const value = {\n      user: {\n        id: \"fghfghfghfghfghfghgf\"\n      }\n    }\n    return (\n      <UserContext.Provider value={value}>\n        {this.props.children}\n      </UserContext.Provider>\n    )\n  }\n}\n\nexport default UserContext\n\n/*\n  componentDidMount = async () => {\n    this.setState({ isLoading: true })\n    await api.getUserById(this.props.id).then(user => {\n      this.setState({\n        user: user.data.data,\n        isLoading: false\n      })\n    })\n  }\n*/"]},"metadata":{},"sourceType":"module"}