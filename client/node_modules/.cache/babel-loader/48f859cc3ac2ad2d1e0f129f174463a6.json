{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V10\\\\client\\\\src\\\\components\\\\sidebar\\\\ChannelsContacts.js\";\nimport React, { useState, useEffect } from 'react';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\nexport default function ChannelsContacts() {\n  // Récupération des informations du client\n  const {\n    getUser\n  } = useUser(); // Création d'un \"useState\" pour stocker les données du client\n\n  const [user, setUser] = useState();\n  setUser([{\n    id: \"id\",\n    singleId: \"singleId\",\n    type: \"type\",\n    recipients: {\n      id: \"id\"\n    },\n    messages: [{\n      sender: \"f650a09d-c971-4140-ac1b-9a2355d11ce4\",\n      text: \"test\"\n    }]\n  }]); // Récupération de la fonction pour sélectionner un \"channel\"\n\n  const {\n    setSelectedChannel\n  } = useChannels(); // Je charge les données\n\n  useEffect(() => {\n    getUser().then(user => {\n      console.log(user);\n      setUser(user.channels); // Je selectionne le premier \"channel\"\n\n      setSelectedChannel(user.channels[0]);\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, user.map(channel => /*#__PURE__*/React.createElement(\"button\", {\n    key: channel.id,\n    className: `sidebar-body-contact ${channel.selected ? 'selected' : ''}`,\n    onClick: () => setSelectedChannel(channel),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    width: \"40\",\n    height: \"32\",\n    viewBox: \"0 0 40 32\",\n    \"aria-hidden\": \"true\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"foreignObject\", {\n    x: \"0\",\n    y: \"0\",\n    width: \"32\",\n    height: \"32\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n    \"aria-hidden\": \"true\",\n    alt: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"rect\", {\n    className: \"online\",\n    fill: \"currentColor\",\n    width: \"10\",\n    height: \"10\",\n    x: \"22\",\n    y: \"22\",\n    rx: \"15\",\n    ry: \"15\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sidebar-body-contact-content-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"overflow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 19\n    }\n  }, channel.recipients.pseudo)))))));\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V10/client/src/components/sidebar/ChannelsContacts.js"],"names":["React","useState","useEffect","useUser","useChannels","ChannelsContacts","getUser","user","setUser","id","singleId","type","recipients","messages","sender","text","setSelectedChannel","then","console","log","channels","map","channel","selected","pseudo"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function ChannelsContacts() {\n \n  // Récupération des informations du client\n  const { getUser } = useUser()\n\n  // Création d'un \"useState\" pour stocker les données du client\n  const [user, setUser] = useState();\n  setUser([\n    {\n      id: \"id\",\n      singleId: \"singleId\",\n      type: \"type\",\n      recipients: {\n        id: \"id\"\n      },\n      messages: [\n        {\n          sender: \"f650a09d-c971-4140-ac1b-9a2355d11ce4\",\n          text: \"test\"\n        }\n      ]\n    }\n  ])\n  // Récupération de la fonction pour sélectionner un \"channel\"\n  const { setSelectedChannel } = useChannels()\n\n  // Je charge les données\n  useEffect(() => {\n\n    getUser().then(user => {\n      console.log(user)\n      setUser(user.channels);\n      // Je selectionne le premier \"channel\"\n      setSelectedChannel(user.channels[0])\n    })\n\n  }, [])\n\n  return (\n    <>\n      {\n        user.map((channel) => (\n          <button\n            key={channel.id}\n            className={`sidebar-body-contact ${channel.selected ? 'selected' : ''}`}\n            onClick={() => setSelectedChannel(channel)}\n          >\n            <div className=\"sidebar-body-contact-content\">\n              <div className=\"sidebar-body-contact-content-avatar\">\n\n                <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n                  <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                    <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n                  </foreignObject>\n                  <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n                </svg>\n\n              </div>\n              <div className=\"sidebar-body-contact-content-text\">\n                <div className=\"username\">\n                  <div className=\"overflow\">\n                    {channel.recipients.pseudo}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </button>\n        ))\n      }\n    </>\n  )\n}"]},"metadata":{},"sourceType":"module"}