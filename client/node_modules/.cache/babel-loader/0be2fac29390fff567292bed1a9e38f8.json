{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V10\\\\client\\\\src\\\\components\\\\container\\\\OpenConversation.js\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport api from '../../api';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\nexport default function OpenConversation() {\n  const {\n    client,\n    updateUser\n  } = useUser();\n  const {\n    channels,\n    setChannels,\n    setMessagesChannels,\n    selectedChannel,\n    setSelectedChannel,\n    messagesChannels,\n    sendMessage\n  } = useChannels();\n  const [text, setText] = useState('');\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({\n        smooth: true\n      });\n    }\n  }, []); // Fonction pour supprimer un \"channel\" dans les données du client est dans celle du destinataire\n\n  function deleteChannel() {\n    setChannels(channels => [...channels.slice(0, selectedChannel.key), ...channels.slice(selectedChannel.key + 1)]);\n    setSelectedChannel(null); // J'isole les données du client dans une variable pour pouvoir les modifier\n\n    var userClientEdit = client; // Je boucle tous les \"channels\" du client\n\n    for (let i = 0; i < userClientEdit.channels.length; i++) {\n      // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n      if (userClientEdit.channels[i].id === selectedChannel.id) {\n        // Je supprime le channel dans la liste grace à sa position\n        userClientEdit.channels.splice(i, 1); // Je mets à jour le client\n\n        api.updateUserById(userClientEdit.id, {\n          data: {\n            channels: userClientEdit.channels\n          }\n        }).then(res => {});\n      }\n    } // Récupération des données du destinataire avec son id\n\n\n    api.getUserById(selectedChannel.recipients.id).then(userRecipient => {\n      // J'isole les données du destinataire dans une variable pour pouvoir les modifier\n      var userRecipientEdit = userRecipient.data.data; // Je boucle tous les \"channels\" du destinataire\n\n      for (let i = 0; i < userRecipientEdit.channels.length; i++) {\n        // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n        if (userRecipientEdit.channels[i].id === selectedChannel.id) {\n          // Je supprime le channel dans la liste grace à sa position\n          userRecipientEdit.channels.splice(i, 1); // Je mets à jour le destinataire\n\n          updateUser(userRecipientEdit.id, {\n            data: {\n              channels: userRecipientEdit.channels\n            }\n          });\n        }\n      }\n    }, error => {\n      console.log(error);\n    });\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n    const recipients = [selectedChannel.recipients]; // channel, client, recipients, text\n\n    sendMessage(selectedChannel, text, client, recipients);\n    setText('');\n  }\n\n  var lastSenderNow;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-user\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-user-avatar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    className: \"avatar\",\n    src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n    alt: \"user profil\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-user-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }, selectedChannel.recipients.pseudo), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"statut online\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    \"aria-hidden\": \"false\",\n    width: \"10\",\n    height: \"15\",\n    x: \"0\",\n    y: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-header-toolbar\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn-icon-small-red\",\n    type: \"button\",\n    onClick: deleteChannel,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    \"aria-hidden\": \"false\",\n    width: \"20\",\n    height: \"20\",\n    x: \"0\",\n    y: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"polygon\", {\n    fill: \"currentColor\",\n    points: \"512,338.954 483.732,310.686 411.772,382.646 339.812,310.686 311.543,338.954 383.503,410.914 311.543,482.874  339.812,511.142 411.772,439.182 483.732,511.142 512,482.874 440.04,410.914 \\t\\t\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M255.858,0.142c-81.562,0-147.918,66.356-147.918,147.918c0,50.52,25.465,95.198,64.226,121.894 c-36.19,12.488-69.36,33.118-97.227,60.984C26.614,379.265,0,443.516,0,511.858h39.978c0-119.037,96.843-215.88,215.88-215.88 c81.562,0,147.918-66.355,147.918-147.918C403.776,66.498,337.42,0.142,255.858,0.142z M255.858,256 c-59.518,0-107.94-48.421-107.94-107.94S196.34,40.12,255.858,40.12c59.518,0,107.94,48.421,107.94,107.94 S315.376,256,255.858,256z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-body scroller\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, selectedChannel.messages.map((message, index) => {\n    const lastMessage = selectedChannel.messages.length - 1 === index;\n    var date = new Date(message.date);\n    date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`; // Détecte si plus de deux messages a la suite sont du même destinataire\n\n    var lastSenderPass = lastSenderNow;\n    lastSenderNow = message.sender;\n    return lastSenderNow !== lastSenderPass ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message parents\",\n      key: index,\n      ref: lastMessage ? setRef : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avatar\",\n      src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n      alt: \"user profil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"message-body-message-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pseudo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 21\n      }\n    }, client === null ? null : client.pseudo), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    }, date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 19\n      }\n    }, message.text)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message children\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 19\n      }\n    }, message.text));\n  }), messagesChannels === null ? null : messagesChannels.map((message, index) => {\n    const lastMessage = selectedChannel.messages.length - 1 === index;\n    var date = new Date(message.date);\n    date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`; // Détecte si plus de deux messages a la suite sont du même destinataire\n\n    var lastSenderPass = lastSenderNow;\n    lastSenderNow = message.sender;\n    return lastSenderNow !== lastSenderPass ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message parents\",\n      key: index,\n      ref: lastMessage ? setRef : null,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-avatar\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      className: \"avatar\",\n      src: \"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\",\n      alt: \"user profil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"message-body-message-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: \"pseudo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, client === null ? null : client.pseudo), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"timestamp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 21\n      }\n    }, date)), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 19\n      }\n    }, message.text)) : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message children\",\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"message-body-message-text\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 19\n      }\n    }, message.text));\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-body-spacer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-footer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"message-footer-toolbar\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"message-footer-toolbar-uploadBtn\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    className: \"icon\",\n    width: \"24\",\n    height: \"24\",\n    viewBox: \"0 0 24 24\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M12 2.00098C6.486 2.00098 2 6.48698 2 12.001C2 17.515 6.486 22.001 12 22.001C17.514 22.001 22 17.515 22 12.001C22 6.48698 17.514 2.00098 12 2.00098ZM17 13.001H13V17.001H11V13.001H7V11.001H11V7.00098H13V11.001H17V13.001Z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"input\",\n    type: \"file\",\n    multiple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"textarea\", {\n    id: \"msgTextarea\",\n    className: \"message-footer-toolbar-textarea scroller\",\n    placeholder: \"Envoyer un message à \" + selectedChannel.recipients.pseudo,\n    spellCheck: \"true\",\n    autoFocus: true,\n    autoComplete: \"off\",\n    value: text,\n    onChange: e => setText(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"message-footer-toolbar-sendBtn\",\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"svg\", {\n    viewBox: \"0 0 512 512\",\n    \"aria-hidden\": \"false\",\n    width: \"20\",\n    height: \"20\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    fill: \"currentColor\",\n    d: \"M481.508,210.336L68.414,38.926c-17.403-7.222-37.064-4.045-51.309,8.287C2.86,59.547-3.098,78.551,1.558,96.808 L38.327,241h180.026c8.284,0,15.001,6.716,15.001,15.001c0,8.284-6.716,15.001-15.001,15.001H38.327L1.558,415.193 c-4.656,18.258,1.301,37.262,15.547,49.595c14.274,12.357,33.937,15.495,51.31,8.287l413.094-171.409 C500.317,293.862,512,276.364,512,256.001C512,235.638,500.317,218.139,481.508,210.336z\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V10/client/src/components/container/OpenConversation.js"],"names":["React","useState","useCallback","useEffect","api","useUser","useChannels","OpenConversation","client","updateUser","channels","setChannels","setMessagesChannels","selectedChannel","setSelectedChannel","messagesChannels","sendMessage","text","setText","setRef","node","scrollIntoView","smooth","deleteChannel","slice","key","userClientEdit","i","length","id","splice","updateUserById","data","then","res","getUserById","recipients","userRecipient","userRecipientEdit","error","console","log","handleSubmit","e","preventDefault","lastSenderNow","pseudo","messages","map","message","index","lastMessage","date","Date","getDate","getMonth","getFullYear","getHours","getMinutes","lastSenderPass","sender","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from 'react'\n\nimport api from '../../api'\n\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function OpenConversation() {\n  const { client, updateUser } = useUser()\n  const { channels, setChannels,  setMessagesChannels, selectedChannel, setSelectedChannel, messagesChannels, sendMessage } = useChannels()\n  const [text, setText] = useState('')\n  const setRef = useCallback(node => {\n    if (node) {\n      node.scrollIntoView({ smooth: true })\n    }\n  }, [])\n\n  // Fonction pour supprimer un \"channel\" dans les données du client est dans celle du destinataire\n  function deleteChannel() {\n    setChannels(channels => [\n      ...channels.slice(0, selectedChannel.key),\n      ...channels.slice(selectedChannel.key + 1)\n    ]);\n    setSelectedChannel(null)\n\n    // J'isole les données du client dans une variable pour pouvoir les modifier\n    var userClientEdit = client\n\n    // Je boucle tous les \"channels\" du client\n    for (let i = 0; i < userClientEdit.channels.length; i++) {\n      // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n      if (userClientEdit.channels[i].id === selectedChannel.id) {\n        // Je supprime le channel dans la liste grace à sa position\n        userClientEdit.channels.splice(i, 1);\n        // Je mets à jour le client\n        api.updateUserById(userClientEdit.id, { data: { channels: userClientEdit.channels } }).then(res => { })\n      }\n    }\n\n    // Récupération des données du destinataire avec son id\n    api.getUserById(selectedChannel.recipients.id).then(\n      (userRecipient) => {\n\n        // J'isole les données du destinataire dans une variable pour pouvoir les modifier\n        var userRecipientEdit = userRecipient.data.data\n\n        // Je boucle tous les \"channels\" du destinataire\n        for (let i = 0; i < userRecipientEdit.channels.length; i++) {\n          // Je teste si l'id du \"channel\" sélectionné correspond à l'id du \"channel\" passé dans la boucle\n          if (userRecipientEdit.channels[i].id === selectedChannel.id) {\n            // Je supprime le channel dans la liste grace à sa position\n            userRecipientEdit.channels.splice(i, 1);\n            // Je mets à jour le destinataire\n            updateUser(userRecipientEdit.id, { data: { channels: userRecipientEdit.channels } })\n          }\n        }\n\n      },\n      (error) => {\n        console.log(error)\n      }\n    )\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault()\n\n    const recipients = [selectedChannel.recipients]\n    // channel, client, recipients, text\n    sendMessage(\n      selectedChannel,\n      text,\n      client,\n      recipients\n    )\n    setText('')\n  }\n\n  var lastSenderNow;\n\n  return (\n    <div className=\"message\">\n      <div className=\"message-header\">\n        <div className=\"message-header-user\">\n          <div className=\"message-header-user-avatar\">\n            <img className=\"avatar\"\n              src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\"\n              alt=\"user profil\" />\n          </div>\n          <div className=\"message-header-user-info\">\n            <div className=\"username\">\n              {selectedChannel.recipients.pseudo}\n            </div>\n            <div className=\"statut online\">\n              <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"10\" height=\"15\" x=\"0\" y=\"0\">\n                <path fill=\"currentColor\"\n                  d=\"M256,0C115.39,0,0,115.39,0,256s115.39,256,256,256s256-115.39,256-256S396.61,0,256,0z\" />\n              </svg>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"message-header-toolbar\">\n          <button className=\"btn-icon-small-red\" type=\"button\" onClick={deleteChannel}>\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\" x=\"0\" y=\"0\">\n              <polygon fill=\"currentColor\" points=\"512,338.954 483.732,310.686 411.772,382.646 339.812,310.686 311.543,338.954 383.503,410.914 311.543,482.874 \n              339.812,511.142 411.772,439.182 483.732,511.142 512,482.874 440.04,410.914 \t\t\"/>\n              <path fill=\"currentColor\" d=\"M255.858,0.142c-81.562,0-147.918,66.356-147.918,147.918c0,50.52,25.465,95.198,64.226,121.894\n              c-36.19,12.488-69.36,33.118-97.227,60.984C26.614,379.265,0,443.516,0,511.858h39.978c0-119.037,96.843-215.88,215.88-215.88\n              c81.562,0,147.918-66.355,147.918-147.918C403.776,66.498,337.42,0.142,255.858,0.142z M255.858,256\n              c-59.518,0-107.94-48.421-107.94-107.94S196.34,40.12,255.858,40.12c59.518,0,107.94,48.421,107.94,107.94\n              S315.376,256,255.858,256z\"/>\n            </svg>\n          </button>\n        </div>\n      </div>\n      <div className=\"message-body scroller\">\n        {\n          selectedChannel.messages.map((message, index) => {\n            const lastMessage = selectedChannel.messages.length - 1 === index\n\n            var date = new Date(message.date);\n            date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n            // Détecte si plus de deux messages a la suite sont du même destinataire\n            var lastSenderPass = lastSenderNow;\n            lastSenderNow = message.sender;\n\n            return (\n              lastSenderNow !== lastSenderPass\n                ?\n                <div\n                  className=\"message-body-message parents\"\n                  key={index}\n                  ref={lastMessage ? setRef : null}\n                >\n                  <div className=\"message-body-message-avatar\">\n                    <img className=\"avatar\"\n                      src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\"\n                      alt=\"user profil\" />\n                  </div>\n                  <h2 className=\"message-body-message-header\">\n                    <span className=\"pseudo\">\n                      {client === null ? null : client.pseudo}\n                    </span>\n                    <span className=\"timestamp\">\n                      {date}\n                    </span>\n                  </h2>\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n                :\n                <div\n                  className=\"message-body-message children\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n            )\n          })\n        }\n\n        {\n          messagesChannels === null ? null : messagesChannels.map((message, index) => {\n            const lastMessage = selectedChannel.messages.length - 1 === index\n\n            var date = new Date(message.date);\n            date = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()} ${date.getHours()}:${date.getMinutes()}`\n\n            // Détecte si plus de deux messages a la suite sont du même destinataire\n            var lastSenderPass = lastSenderNow;\n            lastSenderNow = message.sender;\n\n            return (\n              lastSenderNow !== lastSenderPass\n                ?\n                <div\n                  className=\"message-body-message parents\"\n                  key={index}\n                  ref={lastMessage ? setRef : null}\n                >\n                  <div className=\"message-body-message-avatar\">\n                    <img className=\"avatar\"\n                      src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\"\n                      alt=\"user profil\" />\n                  </div>\n                  <h2 className=\"message-body-message-header\">\n                    <span className=\"pseudo\">\n                      {client === null ? null : client.pseudo}\n                    </span>\n                    <span className=\"timestamp\">\n                      {date}\n                    </span>\n                  </h2>\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n                :\n                <div\n                  className=\"message-body-message children\"\n                  key={index}\n                >\n                  <div className=\"message-body-message-text\">\n                    {message.text}\n                  </div>\n                </div>\n            )\n          })\n        }\n\n        <div className=\"message-body-spacer\"></div>\n      </div>\n      <div className=\"message-footer\">\n        <form className=\"message-footer-toolbar\" onSubmit={handleSubmit}>\n\n          <div className=\"message-footer-toolbar-uploadBtn\">\n            <svg className=\"icon\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\">\n              <path fill=\"currentColor\" d=\"M12 2.00098C6.486 2.00098 2 6.48698 2 12.001C2 17.515 6.486 22.001 12 22.001C17.514 22.001 22 17.515 22 12.001C22\n                    6.48698 17.514 2.00098 12 2.00098ZM17 13.001H13V17.001H11V13.001H7V11.001H11V7.00098H13V11.001H17V13.001Z\">\n              </path>\n            </svg>\n            <input className=\"input\" type=\"file\" multiple />\n          </div>\n\n          <textarea id=\"msgTextarea\" className=\"message-footer-toolbar-textarea scroller\" placeholder={\"Envoyer un message à \" + selectedChannel.recipients.pseudo}\n            spellCheck=\"true\" autoFocus autoComplete=\"off\"\n            value={text}\n            onChange={e => setText(e.target.value)}\n            required\n          ></textarea>\n\n          <button className=\"message-footer-toolbar-sendBtn\" type=\"submit\">\n            <svg viewBox=\"0 0 512 512\" aria-hidden=\"false\" width=\"20\" height=\"20\">\n              <path fill=\"currentColor\" d=\"M481.508,210.336L68.414,38.926c-17.403-7.222-37.064-4.045-51.309,8.287C2.86,59.547-3.098,78.551,1.558,96.808\n                  L38.327,241h180.026c8.284,0,15.001,6.716,15.001,15.001c0,8.284-6.716,15.001-15.001,15.001H38.327L1.558,415.193\n                  c-4.656,18.258,1.301,37.262,15.547,49.595c14.274,12.357,33.937,15.495,51.31,8.287l413.094-171.409\n                  C500.317,293.862,512,276.364,512,256.001C512,235.638,500.317,218.139,481.508,210.336z\" />\n            </svg>\n          </button>\n\n        </form>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}