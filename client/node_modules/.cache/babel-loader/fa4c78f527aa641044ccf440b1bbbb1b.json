{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V10\\\\client\\\\src\\\\components\\\\sidebar\\\\ChannelsContacts.js\";\nimport React, { useState, useEffect } from 'react';\nimport api from '../../api';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\nexport default function ChannelsContacts() {\n  // Création d'un \"useState\" pour stocker les \"channels\" dans une liste\n  const [channels, setChannels] = useState([]);\n  const [user, setUser] = useState({}); // Récupération des informations du client\n\n  const {\n    getUser\n  } = useUser(); // Récupération de la fonction pour sélectionner un \"channel\"\n\n  const {\n    setSelectedChannel\n  } = useChannels(); // Je charge les données\n\n  useEffect(() => {\n    getUser().then(users => setUser(users));\n  }, []);\n  useEffect(() => {});\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, user.pseudo));\n}\n/*\n      { channels.map((channel) => (\n        <button\n          key={channel.id}\n          className={`sidebar-body-contact ${channel.selected ? 'selected' : ''}`}\n          onClick={() => setSelectedChannel(channel)}\n        >\n          <div className=\"sidebar-body-contact-content\">\n            <div className=\"sidebar-body-contact-content-avatar\">\n\n              <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n                <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                  <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n                </foreignObject>\n                <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n              </svg>\n\n            </div>\n            <div className=\"sidebar-body-contact-content-text\">\n              <div className=\"username\">\n                <div className=\"overflow\">\n                  {channel.recipients.pseudo}\n                </div>\n              </div>\n            </div>\n          </div>\n        </button>\n      ))\n      } */","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V10/client/src/components/sidebar/ChannelsContacts.js"],"names":["React","useState","useEffect","api","useUser","useChannels","ChannelsContacts","channels","setChannels","user","setUser","getUser","setSelectedChannel","then","users","pseudo"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,GAAP,MAAgB,WAAhB;AACA,SAASC,OAAT,QAAwB,6BAAxB;AACA,SAASC,WAAT,QAA4B,iCAA5B;AAEA,eAAe,SAASC,gBAAT,GAA4B;AACzC;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACQ,IAAD,EAAOC,OAAP,IAAkBT,QAAQ,CAAC,EAAD,CAAhC,CAHyC,CAKzC;;AACA,QAAM;AAAEU,IAAAA;AAAF,MAAcP,OAAO,EAA3B,CANyC,CAOzC;;AACA,QAAM;AAAEQ,IAAAA;AAAF,MAAyBP,WAAW,EAA1C,CARyC,CAUzC;;AACAH,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,OAAO,GAAGE,IAAV,CAAeC,KAAK,IAAIJ,OAAO,CAACI,KAAD,CAA/B;AACA,GAFO,EAEL,EAFK,CAAT;AAGAZ,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;AAIA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMO,IAAI,CAACM,MAAX,CADF,CADF;AAKD;AAED","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport api from '../../api';\nimport { useUser } from '../../contexts/UserProvider';\nimport { useChannels } from '../../contexts/ChannelsProvider';\n\nexport default function ChannelsContacts() {\n  // Création d'un \"useState\" pour stocker les \"channels\" dans une liste\n  const [channels, setChannels] = useState([]);\n  const [user, setUser] = useState({});\n\n  // Récupération des informations du client\n  const { getUser } = useUser()\n  // Récupération de la fonction pour sélectionner un \"channel\"\n  const { setSelectedChannel } = useChannels()\n\n  // Je charge les données\n  useEffect(() => {\n    getUser().then(users => setUser(users))\n   }, [])\n  useEffect(() => {\n    \n  });\n\n  return (\n    <>\n      <div>{user.pseudo}</div>\n    </>\n  )\n}\n\n/*\n      { channels.map((channel) => (\n        <button\n          key={channel.id}\n          className={`sidebar-body-contact ${channel.selected ? 'selected' : ''}`}\n          onClick={() => setSelectedChannel(channel)}\n        >\n          <div className=\"sidebar-body-contact-content\">\n            <div className=\"sidebar-body-contact-content-avatar\">\n\n              <svg width=\"40\" height=\"32\" viewBox=\"0 0 40 32\" aria-hidden=\"true\">\n                <foreignObject x=\"0\" y=\"0\" width=\"32\" height=\"32\">\n                  <img className=\"avatar\" src=\"https://wir.skyrock.net/wir/v1/profilcrop/?c=mog&w=301&h=301&im=%2Fart%2FPRIP.105317501.2.2.jpg\" aria-hidden=\"true\" alt=\"\" />\n                </foreignObject>\n                <rect className=\"online\" fill=\"currentColor\" width=\"10\" height=\"10\" x=\"22\" y=\"22\" rx=\"15\" ry=\"15\"></rect>\n              </svg>\n\n            </div>\n            <div className=\"sidebar-body-contact-content-text\">\n              <div className=\"username\">\n                <div className=\"overflow\">\n                  {channel.recipients.pseudo}\n                </div>\n              </div>\n            </div>\n          </div>\n        </button>\n      ))\n      } */\n"]},"metadata":{},"sourceType":"module"}