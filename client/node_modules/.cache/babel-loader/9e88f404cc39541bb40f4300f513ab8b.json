{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anton\\\\Desktop\\\\FInt.Tchat\\\\dev\\\\V10\\\\client\\\\src\\\\contexts\\\\UserProvider.js\";\nimport React, { Component, useContext } from 'react';\nimport api from \"../api\";\nimport SocketContext from './SocketProvider';\nconst UserContext = React.createContext();\nexport function useUser() {\n  return useContext(UserContext);\n}\nexport class UserProvider extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.getUser = () => {\n      return new Promise(resolve => {\n        api.getUserById(this.props.id).then(user => {\n          user = user.data.data; // Je filtre pour récupérer que les contacts privés\n\n          user.channels.filter(channel => channel.type === \"private\").forEach(channel => {\n            let i = 0; // j’attent que la fonction soit terminée\n\n            api.getUserById(channel.recipients.id).then(recipient => {\n              // Je complète les informations existantes du destinataire avec celle de la base de données\n              channel.recipients = recipient.data.data; // J'ajoute un element \"selected\" à \"channel\" est passé la valeur \"true\" au premier\n\n              Object.assign(channel, {\n                selected: false\n              });\n              Object.assign(channel, {\n                key: i\n              }); // Je mets à jour l'object \"channels\" du client \n\n              user.channels[i] = channel;\n              console.log(user.channels[i]);\n            });\n            i++;\n          });\n          resolve(user);\n        });\n      });\n    };\n\n    this.createUser = () => {};\n\n    this.deleteUser = () => {};\n\n    this.updateUser = async (id, body) => {\n      const payload = body;\n      await api.updateUserById(id, payload).then(res => {});\n    };\n  }\n\n  render() {\n    const value = {\n      getUser: this.getUser,\n      updateUser: this.updateUser\n    };\n    return /*#__PURE__*/React.createElement(UserContext.Provider, {\n      value: value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n}\nUserProvider.contextType = SocketContext;\nexport default UserContext;","map":{"version":3,"sources":["C:/Users/anton/Desktop/FInt.Tchat/dev/V10/client/src/contexts/UserProvider.js"],"names":["React","Component","useContext","api","SocketContext","UserContext","createContext","useUser","UserProvider","getUser","Promise","resolve","getUserById","props","id","then","user","data","channels","filter","channel","type","forEach","i","recipients","recipient","Object","assign","selected","key","console","log","createUser","deleteUser","updateUser","body","payload","updateUserById","res","render","value","children","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AAEA,OAAOC,GAAP,MAAgB,QAAhB;AAEA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,MAAMC,WAAW,GAAGL,KAAK,CAACM,aAAN,EAApB;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAOL,UAAU,CAACG,WAAD,CAAjB;AACD;AAED,OAAO,MAAMG,YAAN,SAA2BP,SAA3B,CAAqC;AAAA;AAAA;;AAAA,SAG1CQ,OAH0C,GAGhC,MAAM;AACd,aAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC9BR,QAAAA,GAAG,CAACS,WAAJ,CAAgB,KAAKC,KAAL,CAAWC,EAA3B,EAA+BC,IAA/B,CACGC,IAAD,IAAU;AACRA,UAAAA,IAAI,GAAGA,IAAI,CAACC,IAAL,CAAUA,IAAjB,CADQ,CAGR;;AACAD,UAAAA,IAAI,CAACE,QAAL,CAAcC,MAAd,CAAqBC,OAAO,IAAIA,OAAO,CAACC,IAAR,KAAiB,SAAjD,EAA4DC,OAA5D,CAAoEF,OAAO,IAAI;AAC7E,gBAAIG,CAAC,GAAG,CAAR,CAD6E,CAE7E;;AACApB,YAAAA,GAAG,CAACS,WAAJ,CAAgBQ,OAAO,CAACI,UAAR,CAAmBV,EAAnC,EAAuCC,IAAvC,CAA6CU,SAAD,IAAe;AAEzD;AACAL,cAAAA,OAAO,CAACI,UAAR,GAAqBC,SAAS,CAACR,IAAV,CAAeA,IAApC,CAHyD,CAKzD;;AACAS,cAAAA,MAAM,CAACC,MAAP,CAAcP,OAAd,EAAuB;AAAEQ,gBAAAA,QAAQ,EAAE;AAAZ,eAAvB;AACAF,cAAAA,MAAM,CAACC,MAAP,CAAcP,OAAd,EAAuB;AAAES,gBAAAA,GAAG,EAAEN;AAAP,eAAvB,EAPyD,CASzD;;AACAP,cAAAA,IAAI,CAACE,QAAL,CAAcK,CAAd,IAAmBH,OAAnB;AACAU,cAAAA,OAAO,CAACC,GAAR,CAAYf,IAAI,CAACE,QAAL,CAAcK,CAAd,CAAZ;AAED,aAbD;AAcAA,YAAAA,CAAC;AACF,WAlBD;AAoBAZ,UAAAA,OAAO,CAACK,IAAD,CAAP;AACD,SA1BH;AA4BD,OA7BM,CAAP;AA8BD,KAlCyC;;AAAA,SAoC1CgB,UApC0C,GAoC7B,MAAM,CAElB,CAtCyC;;AAAA,SAwC1CC,UAxC0C,GAwC7B,MAAM,CAElB,CA1CyC;;AAAA,SA4C1CC,UA5C0C,GA4C7B,OAAOpB,EAAP,EAAWqB,IAAX,KAAoB;AAC/B,YAAMC,OAAO,GAAGD,IAAhB;AACA,YAAMhC,GAAG,CAACkC,cAAJ,CAAmBvB,EAAnB,EAAuBsB,OAAvB,EAAgCrB,IAAhC,CAAqCuB,GAAG,IAAI,CACjD,CADK,CAAN;AAED,KAhDyC;AAAA;;AAkD1CC,EAAAA,MAAM,GAAG;AACP,UAAMC,KAAK,GAAG;AACZ/B,MAAAA,OAAO,EAAE,KAAKA,OADF;AAEZyB,MAAAA,UAAU,EAAE,KAAKA;AAFL,KAAd;AAKA,wBACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEM,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK3B,KAAL,CAAW4B,QADd,CADF;AAKD;;AA7DyC;AAA/BjC,Y,CACJkC,W,GAActC,a;AA+DvB,eAAeC,WAAf","sourcesContent":["import React, { Component, useContext } from 'react'\r\n\r\nimport api from \"../api\"\r\n\r\nimport SocketContext from './SocketProvider';\r\n\r\nconst UserContext = React.createContext()\r\n\r\nexport function useUser() {\r\n  return useContext(UserContext)\r\n}\r\n\r\nexport class UserProvider extends Component {\r\n  static contextType = SocketContext\r\n\r\n  getUser = () => {\r\n    return new Promise((resolve) => {\r\n      api.getUserById(this.props.id).then(\r\n        (user) => {\r\n          user = user.data.data\r\n\r\n          // Je filtre pour récupérer que les contacts privés\r\n          user.channels.filter(channel => channel.type === \"private\").forEach(channel => {\r\n            let i = 0\r\n            // j’attent que la fonction soit terminée\r\n            api.getUserById(channel.recipients.id).then((recipient) => {\r\n\r\n              // Je complète les informations existantes du destinataire avec celle de la base de données\r\n              channel.recipients = recipient.data.data\r\n              \r\n              // J'ajoute un element \"selected\" à \"channel\" est passé la valeur \"true\" au premier\r\n              Object.assign(channel, { selected: false })\r\n              Object.assign(channel, { key: i })\r\n\r\n              // Je mets à jour l'object \"channels\" du client \r\n              user.channels[i] = channel\r\n              console.log(user.channels[i])\r\n              \r\n            });\r\n            i++\r\n          })\r\n\r\n          resolve(user)\r\n        }\r\n      )\r\n    })\r\n  }\r\n\r\n  createUser = () => {\r\n\r\n  }\r\n\r\n  deleteUser = () => {\r\n\r\n  }\r\n\r\n  updateUser = async (id, body) => {\r\n    const payload = body\r\n    await api.updateUserById(id, payload).then(res => {\r\n    })\r\n  }\r\n\r\n  render() {\r\n    const value = {\r\n      getUser: this.getUser,\r\n      updateUser: this.updateUser\r\n    }\r\n\r\n    return (\r\n      <UserContext.Provider value={value}>\r\n        {this.props.children}\r\n      </UserContext.Provider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default UserContext"]},"metadata":{},"sourceType":"module"}